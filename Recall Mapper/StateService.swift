//
//  StateService.swift
//  Recall Mapper
//
//  Created by Scott Magee on 7/23/15.
//  Copyright Â© 2015 Scott Magee. All rights reserved.
//

import Foundation
import MapKit

func createStates()->Array<State>{
    var states = Array<State>()
    states.append(createAlabama())
    states.append(createAlaska())
    states.append(createArizona())
    states.append(createArkansas())
    states.append(createCalifornia())
    states.append(createColorado())
    states.append(createConnecticut())
    states.append(createDelaware())
    states.append(createFlorida())
    states.append(createGeorgia())
    states.append(createHawaii())
    states.append(createIdaho())
    states.append(createIllinois())
    states.append(createIndiana())
    states.append(createIowa())
    states.append(createKansas())
    states.append(createKentucky())
    states.append(createLouisiana())
    states.append(createMaine())
    states.append(createMaryland())
    states.append(createMassachusetts())
    states.append(createMichigan())
    states.append(createMinnesota())
    states.append(createMississippi())
    states.append(createMissouri())
    states.append(createMontana())
    states.append(createNebraska())
    states.append(createNevada())
    states.append(createNewHampshire())
    states.append(createNewJersey())
    states.append(createNewMexico())
    states.append(createNewYork())
    states.append(createNorthCarolina())
    states.append(createNorthDakota())
    states.append(createOhio())
    states.append(createOklahoma())
    states.append(createOregon())
    states.append(createPennsylvania())
    states.append(createRhodeIsland())
    states.append(createSouthCarolina())
    states.append(createSouthDakota())
    states.append(createTennessee())
    states.append(createTexas())
    states.append(createUtah())
    states.append(createVermont())
    states.append(createVirginia())
    states.append(createWashington())
    states.append(createWestVirginia())
    states.append(createWisconsin())
    states.append(createWyoming())
    return states
}

func createAlaska()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 70.0187, longitude: -141.0205))
    points.append(CLLocationCoordinate2D(latitude: 70.1292, longitude: -141.7291))
    points.append(CLLocationCoordinate2D(latitude: 70.4515, longitude: -144.8163))
    points.append(CLLocationCoordinate2D(latitude: 70.7471, longitude: -148.4583))
    points.append(CLLocationCoordinate2D(latitude: 70.7923, longitude: -151.1609))
    points.append(CLLocationCoordinate2D(latitude: 71.1470, longitude: -152.6221))
    points.append(CLLocationCoordinate2D(latitude: 71.1185, longitude: -153.9954))
    points.append(CLLocationCoordinate2D(latitude: 71.4307, longitude: -154.8853))
    points.append(CLLocationCoordinate2D(latitude: 71.5232, longitude: -156.7529))
    points.append(CLLocationCoordinate2D(latitude: 71.2796, longitude: -157.9449))
    points.append(CLLocationCoordinate2D(latitude: 71.2249, longitude: -159.6313))
    points.append(CLLocationCoordinate2D(latitude: 70.6363, longitude: -161.8671))
    points.append(CLLocationCoordinate2D(latitude: 70.0843, longitude: -163.5809))
    points.append(CLLocationCoordinate2D(latitude: 69.3028, longitude: -165.2399))
    points.append(CLLocationCoordinate2D(latitude: 69.1782, longitude: -166.8768))
    points.append(CLLocationCoordinate2D(latitude: 68.3344, longitude: -168.0414))
    points.append(CLLocationCoordinate2D(latitude: 67.6844, longitude: -165.9155))
    points.append(CLLocationCoordinate2D(latitude: 67.2933, longitude: -164.6082))
    points.append(CLLocationCoordinate2D(latitude: 66.7789, longitude: -164.0149))
    points.append(CLLocationCoordinate2D(latitude: 66.5810, longitude: -165.7507))
    points.append(CLLocationCoordinate2D(latitude: 66.2867, longitude: -167.5745))
    points.append(CLLocationCoordinate2D(latitude: 66.0269, longitude: -168.9862))
    points.append(CLLocationCoordinate2D(latitude: 65.4970, longitude: -168.9478))
    points.append(CLLocationCoordinate2D(latitude: 65.0420, longitude: -167.4756))
    points.append(CLLocationCoordinate2D(latitude: 64.3922, longitude: -167.0142))
    points.append(CLLocationCoordinate2D(latitude: 64.0554, longitude: -165.7343))
    points.append(CLLocationCoordinate2D(latitude: 64.0193, longitude: -163.2294))
    points.append(CLLocationCoordinate2D(latitude: 63.9615, longitude: -162.1143))
    points.append(CLLocationCoordinate2D(latitude: 63.6877, longitude: -163.6029))
    points.append(CLLocationCoordinate2D(latitude: 63.4530, longitude: -165.3717))
    points.append(CLLocationCoordinate2D(latitude: 62.4133, longitude: -166.3715))
    points.append(CLLocationCoordinate2D(latitude: 61.6534, longitude: -166.9867))
    points.append(CLLocationCoordinate2D(latitude: 60.8556, longitude: -166.4429))
    points.append(CLLocationCoordinate2D(latitude: 60.5357, longitude: -167.8381))
    points.append(CLLocationCoordinate2D(latitude: 59.5482, longitude: -167.7118))
    points.append(CLLocationCoordinate2D(latitude: 59.4115, longitude: -165.8002))
    points.append(CLLocationCoordinate2D(latitude: 59.3696, longitude: -164.5972))
    points.append(CLLocationCoordinate2D(latitude: 59.1168, longitude: -162.8558))
    points.append(CLLocationCoordinate2D(latitude: 58.1185, longitude: -162.5427))
    points.append(CLLocationCoordinate2D(latitude: 58.1359, longitude: -160.6421))
    points.append(CLLocationCoordinate2D(latitude: 58.0285, longitude: -159.5050))
    points.append(CLLocationCoordinate2D(latitude: 57.6336, longitude: -158.8953))
    points.append(CLLocationCoordinate2D(latitude: 56.9090, longitude: -159.9060))
    points.append(CLLocationCoordinate2D(latitude: 56.3926, longitude: -160.6531))
    points.append(CLLocationCoordinate2D(latitude: 56.2342, longitude: -161.8835))
    points.append(CLLocationCoordinate2D(latitude: 55.7240, longitude: -162.9822))
    points.append(CLLocationCoordinate2D(latitude: 55.2478, longitude: -164.3994))
    points.append(CLLocationCoordinate2D(latitude: 54.7753, longitude: -165.3168))
    points.append(CLLocationCoordinate2D(latitude: 54.1463, longitude: -167.1075))
    points.append(CLLocationCoordinate2D(latitude: 53.5632, longitude: -168.5852))
    points.append(CLLocationCoordinate2D(latitude: 53.1402, longitude: -169.9146))
    points.append(CLLocationCoordinate2D(latitude: 52.5964, longitude: -169.5959))
    points.append(CLLocationCoordinate2D(latitude: 52.9089, longitude: -168.2227))
    points.append(CLLocationCoordinate2D(latitude: 54.2139, longitude: -162.7734))
    points.append(CLLocationCoordinate2D(latitude: 54.6786, longitude: -159.1452))
    points.append(CLLocationCoordinate2D(latitude: 55.6567, longitude: -155.4634))
    points.append(CLLocationCoordinate2D(latitude: 57.3510, longitude: -152.1400))
    points.append(CLLocationCoordinate2D(latitude: 59.2209, longitude: -150.8203))
    points.append(CLLocationCoordinate2D(latitude: 59.7695, longitude: -147.4461))
    points.append(CLLocationCoordinate2D(latitude: 60.3521, longitude: -145.9850))
    points.append(CLLocationCoordinate2D(latitude: 59.8917, longitude: -144.1544))
    points.append(CLLocationCoordinate2D(latitude: 59.8172, longitude: -141.6811))
    points.append(CLLocationCoordinate2D(latitude: 59.5225, longitude: -140.5124))
    points.append(CLLocationCoordinate2D(latitude: 59.0292, longitude: -138.8548))
    points.append(CLLocationCoordinate2D(latitude: 57.9032, longitude: -136.8526))
    points.append(CLLocationCoordinate2D(latitude: 56.9157, longitude: -136.0725))
    points.append(CLLocationCoordinate2D(latitude: 56.1555, longitude: -134.9794))
    points.append(CLLocationCoordinate2D(latitude: 55.3237, longitude: -134.0057))
    points.append(CLLocationCoordinate2D(latitude: 54.6341, longitude: -133.6418))
    points.append(CLLocationCoordinate2D(latitude: 54.7135, longitude: -130.6261))
    points.append(CLLocationCoordinate2D(latitude: 55.2869, longitude: -129.9930))
    points.append(CLLocationCoordinate2D(latitude: 55.9869, longitude: -130.0108))
    points.append(CLLocationCoordinate2D(latitude: 56.1057, longitude: -130.1083))
    points.append(CLLocationCoordinate2D(latitude: 56.6086, longitude: -131.5887))
    points.append(CLLocationCoordinate2D(latitude: 57.8404, longitude: -132.8755))
    points.append(CLLocationCoordinate2D(latitude: 58.7276, longitude: -133.8423))
    points.append(CLLocationCoordinate2D(latitude: 59.3108, longitude: -134.9121))
    points.append(CLLocationCoordinate2D(latitude: 59.8020, longitude: -135.4724))
    points.append(CLLocationCoordinate2D(latitude: 59.6039, longitude: -136.3445))
    points.append(CLLocationCoordinate2D(latitude: 59.1619, longitude: -136.8251))
    points.append(CLLocationCoordinate2D(latitude: 59.2441, longitude: -137.6079))
    points.append(CLLocationCoordinate2D(latitude: 60.0902, longitude: -139.2119))
    points.append(CLLocationCoordinate2D(latitude: 60.3575, longitude: -139.0938))
    points.append(CLLocationCoordinate2D(latitude: 60.1866, longitude: -140.0056))
    points.append(CLLocationCoordinate2D(latitude: 60.3059, longitude: -140.9999))
    points.append(CLLocationCoordinate2D(latitude: 70.0187, longitude: -141.0205))

    let poly = MKPolygon(coordinates: &points, count: 86)
    
    return State(name: "Alaska", abbreviation: "AK", polygon: poly)
}


func createAlabama()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 35.0078, longitude: -88.2024))
    points.append(CLLocationCoordinate2D(latitude: 34.9844, longitude: -85.6044))
    points.append(CLLocationCoordinate2D(latitude: 32.8404, longitude: -85.1756))
    points.append(CLLocationCoordinate2D(latitude: 32.2593, longitude: -84.8927))
    points.append(CLLocationCoordinate2D(latitude: 32.1535, longitude: -85.0342))
    points.append(CLLocationCoordinate2D(latitude: 31.7947, longitude: -85.1358))
    points.append(CLLocationCoordinate2D(latitude: 31.5200, longitude: -85.0438))
    points.append(CLLocationCoordinate2D(latitude: 31.3384, longitude: -85.0836))
    points.append(CLLocationCoordinate2D(latitude: 31.1946, longitude: -85.1077))
    points.append(CLLocationCoordinate2D(latitude: 31.1079, longitude: -85.0349))
    points.append(CLLocationCoordinate2D(latitude: 31.0003, longitude: -85.0012))
    points.append(CLLocationCoordinate2D(latitude: 30.9964, longitude: -87.5978))
    points.append(CLLocationCoordinate2D(latitude: 30.9647, longitude: -87.5875))
    points.append(CLLocationCoordinate2D(latitude: 30.8651, longitude: -87.6342))
    points.append(CLLocationCoordinate2D(latitude: 30.6438, longitude: -87.3945))
    points.append(CLLocationCoordinate2D(latitude: 30.5067, longitude: -87.4433))
    points.append(CLLocationCoordinate2D(latitude: 30.4362, longitude: -87.3664))
    points.append(CLLocationCoordinate2D(latitude: 30.2828, longitude: -87.5178))
    points.append(CLLocationCoordinate2D(latitude: 30.1493, longitude: -87.5164))
    points.append(CLLocationCoordinate2D(latitude: 30.1546, longitude: -88.3864))
    points.append(CLLocationCoordinate2D(latitude: 31.8939, longitude: -88.4743))
    points.append(CLLocationCoordinate2D(latitude: 34.8938, longitude: -88.1021))
    points.append(CLLocationCoordinate2D(latitude: 34.9107, longitude: -88.1461))
    points.append(CLLocationCoordinate2D(latitude: 34.9955, longitude: -88.1998))
    
    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Alabama", abbreviation: "AL", polygon: poly)
}


func createArkansas()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 33.0225, longitude: -94.0416))
    points.append(CLLocationCoordinate2D(latitude: 33.0036, longitude: -91.1659))
    points.append(CLLocationCoordinate2D(latitude: 33.1192, longitude: -91.2016))
    points.append(CLLocationCoordinate2D(latitude: 33.1835, longitude: -91.1041))
    points.append(CLLocationCoordinate2D(latitude: 33.3397, longitude: -91.1536))
    points.append(CLLocationCoordinate2D(latitude: 33.4223, longitude: -91.1646))
    points.append(CLLocationCoordinate2D(latitude: 33.4337, longitude: -91.2291))
    points.append(CLLocationCoordinate2D(latitude: 33.5414, longitude: -91.2524))
    points.append(CLLocationCoordinate2D(latitude: 33.6135, longitude: -91.1838))
    points.append(CLLocationCoordinate2D(latitude: 33.6878, longitude: -91.2524))
    points.append(CLLocationCoordinate2D(latitude: 33.6969, longitude: -91.1261))
    points.append(CLLocationCoordinate2D(latitude: 33.7883, longitude: -91.1426))
    points.append(CLLocationCoordinate2D(latitude: 33.7700, longitude: -91.0437))
    points.append(CLLocationCoordinate2D(latitude: 33.8339, longitude: -91.0327))
    points.append(CLLocationCoordinate2D(latitude: 33.8795, longitude: -91.0657))
    points.append(CLLocationCoordinate2D(latitude: 33.9434, longitude: -91.0876))
    points.append(CLLocationCoordinate2D(latitude: 33.9889, longitude: -90.9998))
    points.append(CLLocationCoordinate2D(latitude: 34.0253, longitude: -90.9229))
    points.append(CLLocationCoordinate2D(latitude: 34.0891, longitude: -90.9009))
    points.append(CLLocationCoordinate2D(latitude: 34.1345, longitude: -90.9668))
    points.append(CLLocationCoordinate2D(latitude: 34.1709, longitude: -90.9119))
    points.append(CLLocationCoordinate2D(latitude: 34.1345, longitude: -90.8501))
    points.append(CLLocationCoordinate2D(latitude: 34.2277, longitude: -90.9338))
    points.append(CLLocationCoordinate2D(latitude: 34.2833, longitude: -90.8267))
    points.append(CLLocationCoordinate2D(latitude: 34.3434, longitude: -90.6921))
    points.append(CLLocationCoordinate2D(latitude: 34.3774, longitude: -90.6509))
    points.append(CLLocationCoordinate2D(latitude: 34.3978, longitude: -90.6152))
    points.append(CLLocationCoordinate2D(latitude: 34.4432, longitude: -90.5589))
    points.append(CLLocationCoordinate2D(latitude: 34.5179, longitude: -90.5740))
    points.append(CLLocationCoordinate2D(latitude: 34.5880, longitude: -90.5823))
    points.append(CLLocationCoordinate2D(latitude: 34.7506, longitude: -90.5356))
    points.append(CLLocationCoordinate2D(latitude: 34.7913, longitude: -90.5136))
    points.append(CLLocationCoordinate2D(latitude: 34.8780, longitude: -90.4532))
    points.append(CLLocationCoordinate2D(latitude: 34.9329, longitude: -90.2441))
    points.append(CLLocationCoordinate2D(latitude: 34.8702, longitude: -90.2911))
    points.append(CLLocationCoordinate2D(latitude: 34.9955, longitude: -90.3090))
    points.append(CLLocationCoordinate2D(latitude: 35.0404, longitude: -90.2953))
    points.append(CLLocationCoordinate2D(latitude: 35.0280, longitude: -90.2067))
    points.append(CLLocationCoordinate2D(latitude: 35.1354, longitude: -90.1421))
    points.append(CLLocationCoordinate2D(latitude: 35.1985, longitude: -90.1112))
    points.append(CLLocationCoordinate2D(latitude: 35.2849, longitude: -90.1524))
    points.append(CLLocationCoordinate2D(latitude: 35.4372, longitude: -90.1346))
    points.append(CLLocationCoordinate2D(latitude: 35.5568, longitude: -90.0192))
    points.append(CLLocationCoordinate2D(latitude: 35.7343, longitude: -89.9547))
    points.append(CLLocationCoordinate2D(latitude: 35.8579, longitude: -89.7638))
    points.append(CLLocationCoordinate2D(latitude: 35.9180, longitude: -89.6635))
    points.append(CLLocationCoordinate2D(latitude: 35.9658, longitude: -89.6883))
    points.append(CLLocationCoordinate2D(latitude: 36.0013, longitude: -89.7130))
    points.append(CLLocationCoordinate2D(latitude: 35.9958, longitude: -90.3735))
    points.append(CLLocationCoordinate2D(latitude: 36.1268, longitude: -90.2664))
    points.append(CLLocationCoordinate2D(latitude: 36.2875, longitude: -90.0934))
    points.append(CLLocationCoordinate2D(latitude: 36.3892, longitude: -90.0742))
    points.append(CLLocationCoordinate2D(latitude: 36.4180, longitude: -90.1511))
    points.append(CLLocationCoordinate2D(latitude: 36.4997, longitude: -90.1566))
    points.append(CLLocationCoordinate2D(latitude: 36.4994, longitude: -94.6179))
    points.append(CLLocationCoordinate2D(latitude: 35.3920, longitude: -94.4302))
    points.append(CLLocationCoordinate2D(latitude: 33.6386, longitude: -94.4852))
    points.append(CLLocationCoordinate2D(latitude: 33.6421, longitude: -94.4522))
    points.append(CLLocationCoordinate2D(latitude: 33.5597, longitude: -94.4000))
    points.append(CLLocationCoordinate2D(latitude: 33.5883, longitude: -94.2462))
    points.append(CLLocationCoordinate2D(latitude: 33.5872, longitude: -94.1885))
    points.append(CLLocationCoordinate2D(latitude: 33.5345, longitude: -94.0375))
    points.append(CLLocationCoordinate2D(latitude: 33.4314, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 33.0213, longitude: -94.0430))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Arkansas", abbreviation: "AR", polygon: poly)
}
 

func createArizona()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.9993, longitude: -112.5989))
    points.append(CLLocationCoordinate2D(latitude: 37.0004, longitude: -110.8630))
    points.append(CLLocationCoordinate2D(latitude: 36.9991, longitude: -109.0451))
    points.append(CLLocationCoordinate2D(latitude: 31.3325, longitude: -109.0503))
    points.append(CLLocationCoordinate2D(latitude: 31.3325, longitude: -111.0718))
    points.append(CLLocationCoordinate2D(latitude: 32.4935, longitude: -114.8126))
    points.append(CLLocationCoordinate2D(latitude: 32.5184, longitude: -114.8099))
    points.append(CLLocationCoordinate2D(latitude: 32.5827, longitude: -114.8044))
    points.append(CLLocationCoordinate2D(latitude: 32.6246, longitude: -114.7992))
    points.append(CLLocationCoordinate2D(latitude: 32.6700, longitude: -114.7474))
    points.append(CLLocationCoordinate2D(latitude: 32.7191, longitude: -114.7220))
    points.append(CLLocationCoordinate2D(latitude: 32.7480, longitude: -114.6986))
    points.append(CLLocationCoordinate2D(latitude: 32.7353, longitude: -114.6162))
    points.append(CLLocationCoordinate2D(latitude: 32.7503, longitude: -114.5641))
    points.append(CLLocationCoordinate2D(latitude: 32.7573, longitude: -114.5284))
    points.append(CLLocationCoordinate2D(latitude: 32.7850, longitude: -114.5311))
    points.append(CLLocationCoordinate2D(latitude: 32.8161, longitude: -114.5091))
    points.append(CLLocationCoordinate2D(latitude: 32.8427, longitude: -114.4679))
    points.append(CLLocationCoordinate2D(latitude: 32.9372, longitude: -114.4844))
    points.append(CLLocationCoordinate2D(latitude: 32.9764, longitude: -114.4775))
    points.append(CLLocationCoordinate2D(latitude: 32.9718, longitude: -114.4913))
    points.append(CLLocationCoordinate2D(latitude: 33.0328, longitude: -114.5174))
    points.append(CLLocationCoordinate2D(latitude: 33.0351, longitude: -114.5750))
    points.append(CLLocationCoordinate2D(latitude: 33.0282, longitude: -114.5888))
    points.append(CLLocationCoordinate2D(latitude: 33.0305, longitude: -114.6286))
    points.append(CLLocationCoordinate2D(latitude: 33.0501, longitude: -114.6451))
    points.append(CLLocationCoordinate2D(latitude: 33.0328, longitude: -114.6629))
    points.append(CLLocationCoordinate2D(latitude: 33.0858, longitude: -114.6918))
    points.append(CLLocationCoordinate2D(latitude: 33.0904, longitude: -114.7083))
    points.append(CLLocationCoordinate2D(latitude: 33.1720, longitude: -114.6794))
    points.append(CLLocationCoordinate2D(latitude: 33.2467, longitude: -114.6904))
    points.append(CLLocationCoordinate2D(latitude: 33.2582, longitude: -114.6698))
    points.append(CLLocationCoordinate2D(latitude: 33.2754, longitude: -114.6808))
    points.append(CLLocationCoordinate2D(latitude: 33.2858, longitude: -114.7206))
    points.append(CLLocationCoordinate2D(latitude: 33.3041, longitude: -114.7302))
    points.append(CLLocationCoordinate2D(latitude: 33.3546, longitude: -114.6973))
    points.append(CLLocationCoordinate2D(latitude: 33.4039, longitude: -114.7055))
    points.append(CLLocationCoordinate2D(latitude: 33.4142, longitude: -114.6506))
    points.append(CLLocationCoordinate2D(latitude: 33.4418, longitude: -114.6245))
    points.append(CLLocationCoordinate2D(latitude: 33.5070, longitude: -114.5778))
    points.append(CLLocationCoordinate2D(latitude: 33.5311, longitude: -114.5586))
    points.append(CLLocationCoordinate2D(latitude: 33.5528, longitude: -114.5242))
    points.append(CLLocationCoordinate2D(latitude: 33.5895, longitude: -114.5393))
    points.append(CLLocationCoordinate2D(latitude: 33.6363, longitude: -114.5242))
    points.append(CLLocationCoordinate2D(latitude: 33.6832, longitude: -114.5284))
    points.append(CLLocationCoordinate2D(latitude: 33.7083, longitude: -114.4940))
    points.append(CLLocationCoordinate2D(latitude: 33.7597, longitude: -114.5050))
    points.append(CLLocationCoordinate2D(latitude: 33.8248, longitude: -114.5215))
    points.append(CLLocationCoordinate2D(latitude: 33.8613, longitude: -114.5256))
    points.append(CLLocationCoordinate2D(latitude: 33.9058, longitude: -114.5091))
    points.append(CLLocationCoordinate2D(latitude: 33.9308, longitude: -114.5366))
    points.append(CLLocationCoordinate2D(latitude: 33.9582, longitude: -114.5119))
    points.append(CLLocationCoordinate2D(latitude: 34.0117, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 34.0276, longitude: -114.4336))
    points.append(CLLocationCoordinate2D(latitude: 34.0856, longitude: -114.4363))
    points.append(CLLocationCoordinate2D(latitude: 34.1118, longitude: -114.4089))
    points.append(CLLocationCoordinate2D(latitude: 34.1186, longitude: -114.3622))
    points.append(CLLocationCoordinate2D(latitude: 34.1368, longitude: -114.3237))
    points.append(CLLocationCoordinate2D(latitude: 34.1720, longitude: -114.2908))
    points.append(CLLocationCoordinate2D(latitude: 34.1914, longitude: -114.2221))
    points.append(CLLocationCoordinate2D(latitude: 34.2044, longitude: -114.2249))
    points.append(CLLocationCoordinate2D(latitude: 34.2595, longitude: -114.1651))
    points.append(CLLocationCoordinate2D(latitude: 34.2561, longitude: -114.1315))
    points.append(CLLocationCoordinate2D(latitude: 34.3049, longitude: -114.1383))
    points.append(CLLocationCoordinate2D(latitude: 34.3559, longitude: -114.1864))
    points.append(CLLocationCoordinate2D(latitude: 34.4024, longitude: -114.2674))
    points.append(CLLocationCoordinate2D(latitude: 34.4375, longitude: -114.3031))
    points.append(CLLocationCoordinate2D(latitude: 34.4500, longitude: -114.3361))
    points.append(CLLocationCoordinate2D(latitude: 34.4601, longitude: -114.3869))
    points.append(CLLocationCoordinate2D(latitude: 34.5235, longitude: -114.3787))
    points.append(CLLocationCoordinate2D(latitude: 34.5869, longitude: -114.4322))
    points.append(CLLocationCoordinate2D(latitude: 34.6581, longitude: -114.4597))
    points.append(CLLocationCoordinate2D(latitude: 34.6648, longitude: -114.4501))
    points.append(CLLocationCoordinate2D(latitude: 34.7269, longitude: -114.4968))
    points.append(CLLocationCoordinate2D(latitude: 34.7890, longitude: -114.5682))
    points.append(CLLocationCoordinate2D(latitude: 34.8454, longitude: -114.5970))
    points.append(CLLocationCoordinate2D(latitude: 34.8758, longitude: -114.6382))
    points.append(CLLocationCoordinate2D(latitude: 34.9107, longitude: -114.6286))
    points.append(CLLocationCoordinate2D(latitude: 34.9659, longitude: -114.6382))
    points.append(CLLocationCoordinate2D(latitude: 35.0019, longitude: -114.6336))
    points.append(CLLocationCoordinate2D(latitude: 35.0480, longitude: -114.6259))
    points.append(CLLocationCoordinate2D(latitude: 35.0750, longitude: -114.6039))
    points.append(CLLocationCoordinate2D(latitude: 35.0929, longitude: -114.6368))
    points.append(CLLocationCoordinate2D(latitude: 35.1109, longitude: -114.6368))
    points.append(CLLocationCoordinate2D(latitude: 35.1199, longitude: -114.6094))
    points.append(CLLocationCoordinate2D(latitude: 35.1783, longitude: -114.5737))
    points.append(CLLocationCoordinate2D(latitude: 35.3218, longitude: -114.5929))
    points.append(CLLocationCoordinate2D(latitude: 35.4070, longitude: -114.6149))
    points.append(CLLocationCoordinate2D(latitude: 35.5054, longitude: -114.6863))
    points.append(CLLocationCoordinate2D(latitude: 35.5233, longitude: -114.6533))
    points.append(CLLocationCoordinate2D(latitude: 35.5814, longitude: -114.6863))
    points.append(CLLocationCoordinate2D(latitude: 35.6037, longitude: -114.6478))
    points.append(CLLocationCoordinate2D(latitude: 35.6618, longitude: -114.6973))
    points.append(CLLocationCoordinate2D(latitude: 35.8089, longitude: -114.7192))
    points.append(CLLocationCoordinate2D(latitude: 35.8267, longitude: -114.6973))
    points.append(CLLocationCoordinate2D(latitude: 35.8579, longitude: -114.7083))
    points.append(CLLocationCoordinate2D(latitude: 35.8757, longitude: -114.6588))
    points.append(CLLocationCoordinate2D(latitude: 35.8980, longitude: -114.7028))
    points.append(CLLocationCoordinate2D(latitude: 35.9691, longitude: -114.7412))
    points.append(CLLocationCoordinate2D(latitude: 36.0447, longitude: -114.7522))
    points.append(CLLocationCoordinate2D(latitude: 36.0580, longitude: -114.7357))
    points.append(CLLocationCoordinate2D(latitude: 36.0979, longitude: -114.7742))
    points.append(CLLocationCoordinate2D(latitude: 36.1157, longitude: -114.6863))
    points.append(CLLocationCoordinate2D(latitude: 36.1334, longitude: -114.6204))
    points.append(CLLocationCoordinate2D(latitude: 36.1556, longitude: -114.5654))
    points.append(CLLocationCoordinate2D(latitude: 36.1467, longitude: -114.5215))
    points.append(CLLocationCoordinate2D(latitude: 36.1290, longitude: -114.5105))
    points.append(CLLocationCoordinate2D(latitude: 36.1434, longitude: -114.3896))
    points.append(CLLocationCoordinate2D(latitude: 36.1024, longitude: -114.3237))
    points.append(CLLocationCoordinate2D(latitude: 36.0624, longitude: -114.3292))
    points.append(CLLocationCoordinate2D(latitude: 36.0136, longitude: -114.2468))
    points.append(CLLocationCoordinate2D(latitude: 36.0313, longitude: -114.1534))
    points.append(CLLocationCoordinate2D(latitude: 36.0891, longitude: -114.1150))
    points.append(CLLocationCoordinate2D(latitude: 36.1068, longitude: -114.1260))
    points.append(CLLocationCoordinate2D(latitude: 36.1334, longitude: -114.0985))
    points.append(CLLocationCoordinate2D(latitude: 36.1934, longitude: -114.0439))
    points.append(CLLocationCoordinate2D(latitude: 36.3638, longitude: -114.0450))
    points.append(CLLocationCoordinate2D(latitude: 37.0001, longitude: -114.0508))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Arizona", abbreviation: "AZ", polygon: poly)
}


func createCalifornia()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -124.4009))
    points.append(CLLocationCoordinate2D(latitude: 42.0024, longitude: -123.6237))
    points.append(CLLocationCoordinate2D(latitude: 42.0126, longitude: -123.1526))
    points.append(CLLocationCoordinate2D(latitude: 42.0075, longitude: -122.0073))
    points.append(CLLocationCoordinate2D(latitude: 41.9962, longitude: -121.2369))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -119.9982))
    points.append(CLLocationCoordinate2D(latitude: 39.0021, longitude: -120.0037))
    points.append(CLLocationCoordinate2D(latitude: 37.5555, longitude: -117.9575))
    points.append(CLLocationCoordinate2D(latitude: 36.3594, longitude: -116.3699))
    points.append(CLLocationCoordinate2D(latitude: 35.0019, longitude: -114.6336))
    points.append(CLLocationCoordinate2D(latitude: 34.9659, longitude: -114.6382))
    points.append(CLLocationCoordinate2D(latitude: 34.9107, longitude: -114.6286))
    points.append(CLLocationCoordinate2D(latitude: 34.8758, longitude: -114.6382))
    points.append(CLLocationCoordinate2D(latitude: 34.8454, longitude: -114.5970))
    points.append(CLLocationCoordinate2D(latitude: 34.7890, longitude: -114.5682))
    points.append(CLLocationCoordinate2D(latitude: 34.7269, longitude: -114.4968))
    points.append(CLLocationCoordinate2D(latitude: 34.6648, longitude: -114.4501))
    points.append(CLLocationCoordinate2D(latitude: 34.6581, longitude: -114.4597))
    points.append(CLLocationCoordinate2D(latitude: 34.5869, longitude: -114.4322))
    points.append(CLLocationCoordinate2D(latitude: 34.5235, longitude: -114.3787))
    points.append(CLLocationCoordinate2D(latitude: 34.4601, longitude: -114.3869))
    points.append(CLLocationCoordinate2D(latitude: 34.4500, longitude: -114.3361))
    points.append(CLLocationCoordinate2D(latitude: 34.4375, longitude: -114.3031))
    points.append(CLLocationCoordinate2D(latitude: 34.4024, longitude: -114.2674))
    points.append(CLLocationCoordinate2D(latitude: 34.3559, longitude: -114.1864))
    points.append(CLLocationCoordinate2D(latitude: 34.3049, longitude: -114.1383))
    points.append(CLLocationCoordinate2D(latitude: 34.2561, longitude: -114.1315))
    points.append(CLLocationCoordinate2D(latitude: 34.2595, longitude: -114.1651))
    points.append(CLLocationCoordinate2D(latitude: 34.2044, longitude: -114.2249))
    points.append(CLLocationCoordinate2D(latitude: 34.1914, longitude: -114.2221))
    points.append(CLLocationCoordinate2D(latitude: 34.1720, longitude: -114.2908))
    points.append(CLLocationCoordinate2D(latitude: 34.1368, longitude: -114.3237))
    points.append(CLLocationCoordinate2D(latitude: 34.1186, longitude: -114.3622))
    points.append(CLLocationCoordinate2D(latitude: 34.1118, longitude: -114.4089))
    points.append(CLLocationCoordinate2D(latitude: 34.0856, longitude: -114.4363))
    points.append(CLLocationCoordinate2D(latitude: 34.0276, longitude: -114.4336))
    points.append(CLLocationCoordinate2D(latitude: 34.0117, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 33.9582, longitude: -114.5119))
    points.append(CLLocationCoordinate2D(latitude: 33.9308, longitude: -114.5366))
    points.append(CLLocationCoordinate2D(latitude: 33.9058, longitude: -114.5091))
    points.append(CLLocationCoordinate2D(latitude: 33.8613, longitude: -114.5256))
    points.append(CLLocationCoordinate2D(latitude: 33.8248, longitude: -114.5215))
    points.append(CLLocationCoordinate2D(latitude: 33.7597, longitude: -114.5050))
    points.append(CLLocationCoordinate2D(latitude: 33.7083, longitude: -114.4940))
    points.append(CLLocationCoordinate2D(latitude: 33.6832, longitude: -114.5284))
    points.append(CLLocationCoordinate2D(latitude: 33.6363, longitude: -114.5242))
    points.append(CLLocationCoordinate2D(latitude: 33.5895, longitude: -114.5393))
    points.append(CLLocationCoordinate2D(latitude: 33.5528, longitude: -114.5242))
    points.append(CLLocationCoordinate2D(latitude: 33.5311, longitude: -114.5586))
    points.append(CLLocationCoordinate2D(latitude: 33.5070, longitude: -114.5778))
    points.append(CLLocationCoordinate2D(latitude: 33.4418, longitude: -114.6245))
    points.append(CLLocationCoordinate2D(latitude: 33.4142, longitude: -114.6506))
    points.append(CLLocationCoordinate2D(latitude: 33.4039, longitude: -114.7055))
    points.append(CLLocationCoordinate2D(latitude: 33.3546, longitude: -114.6973))
    points.append(CLLocationCoordinate2D(latitude: 33.3041, longitude: -114.7302))
    points.append(CLLocationCoordinate2D(latitude: 33.2858, longitude: -114.7206))
    points.append(CLLocationCoordinate2D(latitude: 33.2754, longitude: -114.6808))
    points.append(CLLocationCoordinate2D(latitude: 33.2582, longitude: -114.6698))
    points.append(CLLocationCoordinate2D(latitude: 33.2467, longitude: -114.6904))
    points.append(CLLocationCoordinate2D(latitude: 33.1720, longitude: -114.6794))
    points.append(CLLocationCoordinate2D(latitude: 33.0904, longitude: -114.7083))
    points.append(CLLocationCoordinate2D(latitude: 33.0858, longitude: -114.6918))
    points.append(CLLocationCoordinate2D(latitude: 33.0328, longitude: -114.6629))
    points.append(CLLocationCoordinate2D(latitude: 33.0501, longitude: -114.6451))
    points.append(CLLocationCoordinate2D(latitude: 33.0305, longitude: -114.6286))
    points.append(CLLocationCoordinate2D(latitude: 33.0282, longitude: -114.5888))
    points.append(CLLocationCoordinate2D(latitude: 33.0351, longitude: -114.5750))
    points.append(CLLocationCoordinate2D(latitude: 33.0328, longitude: -114.5174))
    points.append(CLLocationCoordinate2D(latitude: 32.9718, longitude: -114.4913))
    points.append(CLLocationCoordinate2D(latitude: 32.9764, longitude: -114.4775))
    points.append(CLLocationCoordinate2D(latitude: 32.9372, longitude: -114.4844))
    points.append(CLLocationCoordinate2D(latitude: 32.8427, longitude: -114.4679))
    points.append(CLLocationCoordinate2D(latitude: 32.8161, longitude: -114.5091))
    points.append(CLLocationCoordinate2D(latitude: 32.7850, longitude: -114.5311))
    points.append(CLLocationCoordinate2D(latitude: 32.7573, longitude: -114.5284))
    points.append(CLLocationCoordinate2D(latitude: 32.7503, longitude: -114.5641))
    points.append(CLLocationCoordinate2D(latitude: 32.7353, longitude: -114.6162))
    points.append(CLLocationCoordinate2D(latitude: 32.7480, longitude: -114.6986))
    points.append(CLLocationCoordinate2D(latitude: 32.7191, longitude: -114.7220))
    points.append(CLLocationCoordinate2D(latitude: 32.6868, longitude: -115.1944))
    points.append(CLLocationCoordinate2D(latitude: 32.5121, longitude: -117.3395))
    points.append(CLLocationCoordinate2D(latitude: 32.7838, longitude: -117.4823))
    points.append(CLLocationCoordinate2D(latitude: 33.0501, longitude: -117.5977))
    points.append(CLLocationCoordinate2D(latitude: 33.2341, longitude: -117.6814))
    points.append(CLLocationCoordinate2D(latitude: 33.4578, longitude: -118.0591))
    points.append(CLLocationCoordinate2D(latitude: 33.5403, longitude: -118.6290))
    points.append(CLLocationCoordinate2D(latitude: 33.7928, longitude: -118.7073))
    points.append(CLLocationCoordinate2D(latitude: 33.9582, longitude: -119.3706))
    points.append(CLLocationCoordinate2D(latitude: 34.1925, longitude: -120.0050))
    points.append(CLLocationCoordinate2D(latitude: 34.2561, longitude: -120.7164))
    points.append(CLLocationCoordinate2D(latitude: 34.5360, longitude: -120.9128))
    points.append(CLLocationCoordinate2D(latitude: 34.9749, longitude: -120.8427))
    points.append(CLLocationCoordinate2D(latitude: 35.2131, longitude: -121.1325))
    points.append(CLLocationCoordinate2D(latitude: 35.5255, longitude: -121.3220))
    points.append(CLLocationCoordinate2D(latitude: 35.9691, longitude: -121.8013))
    points.append(CLLocationCoordinate2D(latitude: 36.2808, longitude: -122.1446))
    points.append(CLLocationCoordinate2D(latitude: 36.7268, longitude: -122.1721))
    points.append(CLLocationCoordinate2D(latitude: 37.2227, longitude: -122.6871))
    points.append(CLLocationCoordinate2D(latitude: 37.7783, longitude: -122.8903))
    points.append(CLLocationCoordinate2D(latitude: 37.8965, longitude: -123.2378))
    points.append(CLLocationCoordinate2D(latitude: 38.3449, longitude: -123.3202))
    points.append(CLLocationCoordinate2D(latitude: 38.7423, longitude: -123.8338))
    points.append(CLLocationCoordinate2D(latitude: 38.9946, longitude: -123.9793))
    points.append(CLLocationCoordinate2D(latitude: 39.3088, longitude: -124.0329))
    points.append(CLLocationCoordinate2D(latitude: 39.7642, longitude: -124.0823))
    points.append(CLLocationCoordinate2D(latitude: 40.1663, longitude: -124.5314))
    points.append(CLLocationCoordinate2D(latitude: 40.4658, longitude: -124.6509))
    points.append(CLLocationCoordinate2D(latitude: 41.0110, longitude: -124.3144))
    points.append(CLLocationCoordinate2D(latitude: 41.2386, longitude: -124.3419))
    points.append(CLLocationCoordinate2D(latitude: 41.7170, longitude: -124.4545))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -124.4009))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "California", abbreviation: "CA", polygon: poly)
}


func createColorado()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.9949, longitude: -102.0424))
    points.append(CLLocationCoordinate2D(latitude: 41.0006, longitude: -102.0534))
    points.append(CLLocationCoordinate2D(latitude: 40.9996, longitude: -109.0489))
    points.append(CLLocationCoordinate2D(latitude: 36.9991, longitude: -109.0451))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Colorado", abbreviation: "CO", polygon: poly)
}


func createConnecticut()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 42.0498, longitude: -73.4875))
    points.append(CLLocationCoordinate2D(latitude: 42.0511, longitude: -73.4247))
    points.append(CLLocationCoordinate2D(latitude: 42.0371, longitude: -72.8146))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -72.8174))
    points.append(CLLocationCoordinate2D(latitude: 42.0044, longitude: -72.7638))
    points.append(CLLocationCoordinate2D(latitude: 42.0360, longitude: -72.7563))
    points.append(CLLocationCoordinate2D(latitude: 42.0368, longitude: -72.6945))
    points.append(CLLocationCoordinate2D(latitude: 42.0309, longitude: -72.6086))
    points.append(CLLocationCoordinate2D(latitude: 42.0269, longitude: -72.6059))
    points.append(CLLocationCoordinate2D(latitude: 42.0269, longitude: -72.5784))
    points.append(CLLocationCoordinate2D(latitude: 42.0350, longitude: -72.5729))
    points.append(CLLocationCoordinate2D(latitude: 42.0350, longitude: -72.4026))
    points.append(CLLocationCoordinate2D(latitude: 42.0233, longitude: -71.8005))
    points.append(CLLocationCoordinate2D(latitude: 41.6832, longitude: -71.7874))
    points.append(CLLocationCoordinate2D(latitude: 41.4165, longitude: -71.7984))
    points.append(CLLocationCoordinate2D(latitude: 41.3892, longitude: -71.8341))
    points.append(CLLocationCoordinate2D(latitude: 41.3273, longitude: -71.8526))
    points.append(CLLocationCoordinate2D(latitude: 41.3103, longitude: -71.9302))
    points.append(CLLocationCoordinate2D(latitude: 41.2907, longitude: -72.0195))
    points.append(CLLocationCoordinate2D(latitude: 41.2618, longitude: -72.0827))
    points.append(CLLocationCoordinate2D(latitude: 41.1962, longitude: -72.4322))
    points.append(CLLocationCoordinate2D(latitude: 41.0866, longitude: -73.0007))
    points.append(CLLocationCoordinate2D(latitude: 41.0255, longitude: -73.2493))
    points.append(CLLocationCoordinate2D(latitude: 40.9509, longitude: -73.6132))
    points.append(CLLocationCoordinate2D(latitude: 40.9830, longitude: -73.6606))
    points.append(CLLocationCoordinate2D(latitude: 41.0338, longitude: -73.6723))
    points.append(CLLocationCoordinate2D(latitude: 41.1011, longitude: -73.7272))
    points.append(CLLocationCoordinate2D(latitude: 41.2153, longitude: -73.4834))
    points.append(CLLocationCoordinate2D(latitude: 41.2953, longitude: -73.5507))
    points.append(CLLocationCoordinate2D(latitude: 41.4906, longitude: -73.5329))
    points.append(CLLocationCoordinate2D(latitude: 42.0493, longitude: -73.4875))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Connecticut", abbreviation: "CT", polygon: poly)
}


func createDelaware()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 39.7222, longitude: -75.7886))
    points.append(CLLocationCoordinate2D(latitude: 39.5210, longitude: -75.7837))
    points.append(CLLocationCoordinate2D(latitude: 38.9081, longitude: -75.7288))
    points.append(CLLocationCoordinate2D(latitude: 38.5911, longitude: -75.7068))
    points.append(CLLocationCoordinate2D(latitude: 38.4600, longitude: -75.6944))
    points.append(CLLocationCoordinate2D(latitude: 38.4482, longitude: -74.8608))
    points.append(CLLocationCoordinate2D(latitude: 38.8654, longitude: -74.8526))
    points.append(CLLocationCoordinate2D(latitude: 38.8451, longitude: -75.0504))
    points.append(CLLocationCoordinate2D(latitude: 39.0565, longitude: -75.1678))
    points.append(CLLocationCoordinate2D(latitude: 39.2525, longitude: -75.3236))
    points.append(CLLocationCoordinate2D(latitude: 39.3662, longitude: -75.4610))
    points.append(CLLocationCoordinate2D(latitude: 39.4500, longitude: -75.5544))
    points.append(CLLocationCoordinate2D(latitude: 39.4966, longitude: -75.5612))
    points.append(CLLocationCoordinate2D(latitude: 39.4998, longitude: -75.5283))
    points.append(CLLocationCoordinate2D(latitude: 39.5411, longitude: -75.5338))
    points.append(CLLocationCoordinate2D(latitude: 39.5761, longitude: -75.5090))
    points.append(CLLocationCoordinate2D(latitude: 39.6237, longitude: -75.5708))
    points.append(CLLocationCoordinate2D(latitude: 39.6713, longitude: -75.5104))
    points.append(CLLocationCoordinate2D(latitude: 39.7167, longitude: -75.4843))
    points.append(CLLocationCoordinate2D(latitude: 39.8015, longitude: -75.4146))
    points.append(CLLocationCoordinate2D(latitude: 39.8249, longitude: -75.4692))
    points.append(CLLocationCoordinate2D(latitude: 39.8296, longitude: -75.6477))
    points.append(CLLocationCoordinate2D(latitude: 39.7199, longitude: -75.7906))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Delaware", abbreviation: "DE", polygon: poly)
}


func createFlorida()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 30.9988, longitude: -87.6050))
    points.append(CLLocationCoordinate2D(latitude: 30.9964, longitude: -86.5613))
    points.append(CLLocationCoordinate2D(latitude: 31.0035, longitude: -85.5313))
    points.append(CLLocationCoordinate2D(latitude: 31.0012, longitude: -85.1193))
    points.append(CLLocationCoordinate2D(latitude: 31.0023, longitude: -85.0012))
    points.append(CLLocationCoordinate2D(latitude: 31.0005, longitude: -85.0018))
    points.append(CLLocationCoordinate2D(latitude: 30.9117, longitude: -84.9586))
    points.append(CLLocationCoordinate2D(latitude: 30.7831, longitude: -84.9257))
    points.append(CLLocationCoordinate2D(latitude: 30.7041, longitude: -84.8639))
    points.append(CLLocationCoordinate2D(latitude: 30.6131, longitude: -82.9688))
    points.append(CLLocationCoordinate2D(latitude: 30.5682, longitude: -82.2162))
    points.append(CLLocationCoordinate2D(latitude: 30.4842, longitude: -82.2148))
    points.append(CLLocationCoordinate2D(latitude: 30.3859, longitude: -82.2025))
    points.append(CLLocationCoordinate2D(latitude: 30.3598, longitude: -82.1585))
    points.append(CLLocationCoordinate2D(latitude: 30.3575, longitude: -82.0610))
    points.append(CLLocationCoordinate2D(latitude: 30.4309, longitude: -82.0363))
    points.append(CLLocationCoordinate2D(latitude: 30.4866, longitude: -82.0239))
    points.append(CLLocationCoordinate2D(latitude: 30.6379, longitude: -82.0459))
    points.append(CLLocationCoordinate2D(latitude: 30.7560, longitude: -82.0239))
    points.append(CLLocationCoordinate2D(latitude: 30.8221, longitude: -81.9498))
    points.append(CLLocationCoordinate2D(latitude: 30.7713, longitude: -81.7657))
    points.append(CLLocationCoordinate2D(latitude: 30.7241, longitude: -81.6023))
    points.append(CLLocationCoordinate2D(latitude: 30.7041, longitude: -81.2288))
    points.append(CLLocationCoordinate2D(latitude: 30.4345, longitude: -81.2357))
    points.append(CLLocationCoordinate2D(latitude: 30.3160, longitude: -81.1725))
    points.append(CLLocationCoordinate2D(latitude: 29.7763, longitude: -81.0379))
    points.append(CLLocationCoordinate2D(latitude: 28.8603, longitude: -80.5861))
    points.append(CLLocationCoordinate2D(latitude: 28.4771, longitude: -80.3650))
    points.append(CLLocationCoordinate2D(latitude: 28.1882, longitude: -80.3815))
    points.append(CLLocationCoordinate2D(latitude: 27.1789, longitude: -79.9255))
    points.append(CLLocationCoordinate2D(latitude: 26.8425, longitude: -79.8198))
    points.append(CLLocationCoordinate2D(latitude: 26.1394, longitude: -79.9118))
    points.append(CLLocationCoordinate2D(latitude: 25.5115, longitude: -79.9997))
    points.append(CLLocationCoordinate2D(latitude: 24.8802, longitude: -80.3815))
    points.append(CLLocationCoordinate2D(latitude: 24.5384, longitude: -80.8704))
    points.append(CLLocationCoordinate2D(latitude: 24.3959, longitude: -81.9250))
    points.append(CLLocationCoordinate2D(latitude: 24.4496, longitude: -82.2066))
    points.append(CLLocationCoordinate2D(latitude: 24.5484, longitude: -82.3137))
    points.append(CLLocationCoordinate2D(latitude: 24.6982, longitude: -82.1997))
    points.append(CLLocationCoordinate2D(latitude: 25.2112, longitude: -81.3977))
    points.append(CLLocationCoordinate2D(latitude: 25.6019, longitude: -81.4622))
    points.append(CLLocationCoordinate2D(latitude: 25.9235, longitude: -81.9456))
    points.append(CLLocationCoordinate2D(latitude: 26.3439, longitude: -82.2876))
    points.append(CLLocationCoordinate2D(latitude: 26.9098, longitude: -82.5307))
    points.append(CLLocationCoordinate2D(latitude: 27.3315, longitude: -82.8342))
    points.append(CLLocationCoordinate2D(latitude: 27.7565, longitude: -83.0182))
    points.append(CLLocationCoordinate2D(latitude: 28.0574, longitude: -83.0017))
    points.append(CLLocationCoordinate2D(latitude: 28.6098, longitude: -82.8548))
    points.append(CLLocationCoordinate2D(latitude: 28.9697, longitude: -83.0264))
    points.append(CLLocationCoordinate2D(latitude: 29.0478, longitude: -83.2050))
    points.append(CLLocationCoordinate2D(latitude: 29.4157, longitude: -83.5318))
    points.append(CLLocationCoordinate2D(latitude: 29.9133, longitude: -83.9767))
    points.append(CLLocationCoordinate2D(latitude: 29.8930, longitude: -84.1072))
    points.append(CLLocationCoordinate2D(latitude: 29.6940, longitude: -84.4409))
    points.append(CLLocationCoordinate2D(latitude: 29.4551, longitude: -85.0465))
    points.append(CLLocationCoordinate2D(latitude: 29.4946, longitude: -85.3610))
    points.append(CLLocationCoordinate2D(latitude: 29.7262, longitude: -85.5807))
    points.append(CLLocationCoordinate2D(latitude: 30.1594, longitude: -86.1946))
    points.append(CLLocationCoordinate2D(latitude: 30.2175, longitude: -86.8510))
    points.append(CLLocationCoordinate2D(latitude: 30.1493, longitude: -87.5164))
    points.append(CLLocationCoordinate2D(latitude: 30.2828, longitude: -87.5178))
    points.append(CLLocationCoordinate2D(latitude: 30.4362, longitude: -87.3664))
    points.append(CLLocationCoordinate2D(latitude: 30.5067, longitude: -87.4433))
    points.append(CLLocationCoordinate2D(latitude: 30.6438, longitude: -87.3945))
    points.append(CLLocationCoordinate2D(latitude: 30.8651, longitude: -87.6342))
    points.append(CLLocationCoordinate2D(latitude: 30.9647, longitude: -87.5875))
    points.append(CLLocationCoordinate2D(latitude: 30.9964, longitude: -87.5978))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Florida", abbreviation: "FL", polygon: poly)
}


func createGeorgia()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 34.9844, longitude: -85.6044))
    points.append(CLLocationCoordinate2D(latitude: 34.9906, longitude: -84.7266))
    points.append(CLLocationCoordinate2D(latitude: 34.9895, longitude: -84.1580))
    points.append(CLLocationCoordinate2D(latitude: 34.9996, longitude: -83.1088))
    points.append(CLLocationCoordinate2D(latitude: 34.9287, longitude: -83.1418))
    points.append(CLLocationCoordinate2D(latitude: 34.8318, longitude: -83.3025))
    points.append(CLLocationCoordinate2D(latitude: 34.7281, longitude: -83.3560))
    points.append(CLLocationCoordinate2D(latitude: 34.6569, longitude: -83.3080))
    points.append(CLLocationCoordinate2D(latitude: 34.5744, longitude: -83.1528))
    points.append(CLLocationCoordinate2D(latitude: 34.4839, longitude: -83.0072))
    points.append(CLLocationCoordinate2D(latitude: 34.4681, longitude: -82.8918))
    points.append(CLLocationCoordinate2D(latitude: 34.4443, longitude: -82.8589))
    points.append(CLLocationCoordinate2D(latitude: 34.2674, longitude: -82.7490))
    points.append(CLLocationCoordinate2D(latitude: 34.1254, longitude: -82.6831))
    points.append(CLLocationCoordinate2D(latitude: 34.0140, longitude: -82.5952))
    points.append(CLLocationCoordinate2D(latitude: 33.8647, longitude: -82.3988))
    points.append(CLLocationCoordinate2D(latitude: 33.7563, longitude: -82.2505))
    points.append(CLLocationCoordinate2D(latitude: 33.6592, longitude: -82.1997))
    points.append(CLLocationCoordinate2D(latitude: 33.5963, longitude: -82.1558))
    points.append(CLLocationCoordinate2D(latitude: 33.5301, longitude: -82.0097))
    points.append(CLLocationCoordinate2D(latitude: 33.4588, longitude: -81.9240))
    points.append(CLLocationCoordinate2D(latitude: 33.3707, longitude: -81.9484))
    points.append(CLLocationCoordinate2D(latitude: 33.2077, longitude: -81.8303))
    points.append(CLLocationCoordinate2D(latitude: 33.1674, longitude: -81.7795))
    points.append(CLLocationCoordinate2D(latitude: 33.1456, longitude: -81.7424))
    points.append(CLLocationCoordinate2D(latitude: 33.0881, longitude: -81.6078))
    points.append(CLLocationCoordinate2D(latitude: 33.0075, longitude: -81.5034))
    points.append(CLLocationCoordinate2D(latitude: 32.9418, longitude: -81.5089))
    points.append(CLLocationCoordinate2D(latitude: 32.6914, longitude: -81.4142))
    points.append(CLLocationCoordinate2D(latitude: 32.6272, longitude: -81.4176))
    points.append(CLLocationCoordinate2D(latitude: 32.5283, longitude: -81.2769))
    points.append(CLLocationCoordinate2D(latitude: 32.4576, longitude: -81.1945))
    points.append(CLLocationCoordinate2D(latitude: 32.3185, longitude: -81.1642))
    points.append(CLLocationCoordinate2D(latitude: 32.2151, longitude: -81.1436))
    points.append(CLLocationCoordinate2D(latitude: 32.1128, longitude: -81.1134))
    points.append(CLLocationCoordinate2D(latitude: 32.0382, longitude: -80.9215))
    points.append(CLLocationCoordinate2D(latitude: 32.0333, longitude: -80.7509))
    points.append(CLLocationCoordinate2D(latitude: 31.4697, longitude: -80.9665))
    points.append(CLLocationCoordinate2D(latitude: 30.9988, longitude: -81.1011))
    points.append(CLLocationCoordinate2D(latitude: 30.7041, longitude: -81.2288))
    points.append(CLLocationCoordinate2D(latitude: 30.7241, longitude: -81.6023))
    points.append(CLLocationCoordinate2D(latitude: 30.7713, longitude: -81.7657))
    points.append(CLLocationCoordinate2D(latitude: 30.8221, longitude: -81.9498))
    points.append(CLLocationCoordinate2D(latitude: 30.7560, longitude: -82.0239))
    points.append(CLLocationCoordinate2D(latitude: 30.6379, longitude: -82.0459))
    points.append(CLLocationCoordinate2D(latitude: 30.4866, longitude: -82.0239))
    points.append(CLLocationCoordinate2D(latitude: 30.4309, longitude: -82.0363))
    points.append(CLLocationCoordinate2D(latitude: 30.3575, longitude: -82.0610))
    points.append(CLLocationCoordinate2D(latitude: 30.3598, longitude: -82.1585))
    points.append(CLLocationCoordinate2D(latitude: 30.3859, longitude: -82.2025))
    points.append(CLLocationCoordinate2D(latitude: 30.4842, longitude: -82.2148))
    points.append(CLLocationCoordinate2D(latitude: 30.5682, longitude: -82.2162))
    points.append(CLLocationCoordinate2D(latitude: 30.6131, longitude: -82.9688))
    points.append(CLLocationCoordinate2D(latitude: 30.7041, longitude: -84.8639))
    points.append(CLLocationCoordinate2D(latitude: 30.7831, longitude: -84.9257))
    points.append(CLLocationCoordinate2D(latitude: 30.9117, longitude: -84.9586))
    points.append(CLLocationCoordinate2D(latitude: 31.0005, longitude: -85.0018))
    points.append(CLLocationCoordinate2D(latitude: 31.0003, longitude: -85.0012))
    points.append(CLLocationCoordinate2D(latitude: 31.1079, longitude: -85.0349))
    points.append(CLLocationCoordinate2D(latitude: 31.1946, longitude: -85.1077))
    points.append(CLLocationCoordinate2D(latitude: 31.3384, longitude: -85.0836))
    points.append(CLLocationCoordinate2D(latitude: 31.5200, longitude: -85.0438))
    points.append(CLLocationCoordinate2D(latitude: 31.7947, longitude: -85.1358))
    points.append(CLLocationCoordinate2D(latitude: 32.1535, longitude: -85.0342))
    points.append(CLLocationCoordinate2D(latitude: 32.2593, longitude: -84.8927))
    points.append(CLLocationCoordinate2D(latitude: 32.8404, longitude: -85.1756))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Georgia", abbreviation: "GA", polygon: poly)
}


func createHawaii()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 19.5158, longitude: -154.6284))
    points.append(CLLocationCoordinate2D(latitude: 19.8894, longitude: -154.8235))
    points.append(CLLocationCoordinate2D(latitude: 20.1849, longitude: -155.0391))
    points.append(CLLocationCoordinate2D(latitude: 20.3910, longitude: -155.5952))
    points.append(CLLocationCoordinate2D(latitude: 20.8614, longitude: -155.7930))
    points.append(CLLocationCoordinate2D(latitude: 21.0948, longitude: -156.1858))
    points.append(CLLocationCoordinate2D(latitude: 21.3597, longitude: -156.6595))
    points.append(CLLocationCoordinate2D(latitude: 21.4748, longitude: -157.1182))
    points.append(CLLocationCoordinate2D(latitude: 21.5515, longitude: -157.5247))
    points.append(CLLocationCoordinate2D(latitude: 21.8832, longitude: -157.8186))
    points.append(CLLocationCoordinate2D(latitude: 22.3386, longitude: -159.2180))
    points.append(CLLocationCoordinate2D(latitude: 22.3374, longitude: -159.7508))
    points.append(CLLocationCoordinate2D(latitude: 22.1493, longitude: -160.1422))
    points.append(CLLocationCoordinate2D(latitude: 21.8857, longitude: -160.3922))
    points.append(CLLocationCoordinate2D(latitude: 21.6025, longitude: -160.3249))
    points.append(CLLocationCoordinate2D(latitude: 21.7276, longitude: -159.9939))
    points.append(CLLocationCoordinate2D(latitude: 21.6932, longitude: -159.4295))
    points.append(CLLocationCoordinate2D(latitude: 21.1037, longitude: -158.1784))
    points.append(CLLocationCoordinate2D(latitude: 20.8152, longitude: -157.4629))
    points.append(CLLocationCoordinate2D(latitude: 20.6803, longitude: -157.2171))
    points.append(CLLocationCoordinate2D(latitude: 20.3408, longitude: -156.8285))
    points.append(CLLocationCoordinate2D(latitude: 20.2931, longitude: -156.5456))
    points.append(CLLocationCoordinate2D(latitude: 20.1643, longitude: -156.1418))
    points.append(CLLocationCoordinate2D(latitude: 19.9308, longitude: -156.2393))
    points.append(CLLocationCoordinate2D(latitude: 19.2826, longitude: -156.1432))
    points.append(CLLocationCoordinate2D(latitude: 18.9881, longitude: -156.1212))
    points.append(CLLocationCoordinate2D(latitude: 18.7100, longitude: -155.7120))
    points.append(CLLocationCoordinate2D(latitude: 18.8829, longitude: -155.3673))
    points.append(CLLocationCoordinate2D(latitude: 19.2048, longitude: -154.8839))
    points.append(CLLocationCoordinate2D(latitude: 19.5158, longitude: -154.6271))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Hawaii", abbreviation: "HI", polygon: poly)
}


func createIowa()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 40.5848, longitude: -95.7623))
    points.append(CLLocationCoordinate2D(latitude: 40.5785, longitude: -93.5445))
    points.append(CLLocationCoordinate2D(latitude: 40.6129, longitude: -91.7372))
    points.append(CLLocationCoordinate2D(latitude: 40.5545, longitude: -91.6768))
    points.append(CLLocationCoordinate2D(latitude: 40.5451, longitude: -91.6246))
    points.append(CLLocationCoordinate2D(latitude: 40.3622, longitude: -91.4365))
    points.append(CLLocationCoordinate2D(latitude: 40.4637, longitude: -91.3623))
    points.append(CLLocationCoordinate2D(latitude: 40.5482, longitude: -91.4021))
    points.append(CLLocationCoordinate2D(latitude: 40.6931, longitude: -91.1124))
    points.append(CLLocationCoordinate2D(latitude: 40.8107, longitude: -91.1028))
    points.append(CLLocationCoordinate2D(latitude: 40.9218, longitude: -90.9668))
    points.append(CLLocationCoordinate2D(latitude: 41.1642, longitude: -91.0121))
    points.append(CLLocationCoordinate2D(latitude: 41.2406, longitude: -91.1082))
    points.append(CLLocationCoordinate2D(latitude: 41.4067, longitude: -91.0451))
    points.append(CLLocationCoordinate2D(latitude: 41.4510, longitude: -90.7086))
    points.append(CLLocationCoordinate2D(latitude: 41.5178, longitude: -90.4793))
    points.append(CLLocationCoordinate2D(latitude: 41.5908, longitude: -90.3419))
    points.append(CLLocationCoordinate2D(latitude: 41.7457, longitude: -90.2788))
    points.append(CLLocationCoordinate2D(latitude: 41.8164, longitude: -90.2074))
    points.append(CLLocationCoordinate2D(latitude: 41.9023, longitude: -90.1538))
    points.append(CLLocationCoordinate2D(latitude: 42.0962, longitude: -90.1744))
    points.append(CLLocationCoordinate2D(latitude: 42.1441, longitude: -90.2692))
    points.append(CLLocationCoordinate2D(latitude: 42.2905, longitude: -90.4298))
    points.append(CLLocationCoordinate2D(latitude: 42.4093, longitude: -90.5370))
    points.append(CLLocationCoordinate2D(latitude: 42.5217, longitude: -90.6400))
    points.append(CLLocationCoordinate2D(latitude: 42.6360, longitude: -90.7127))
    points.append(CLLocationCoordinate2D(latitude: 42.6956, longitude: -90.7883))
    points.append(CLLocationCoordinate2D(latitude: 42.7712, longitude: -91.0533))
    points.append(CLLocationCoordinate2D(latitude: 42.8448, longitude: -91.0904))
    points.append(CLLocationCoordinate2D(latitude: 42.9082, longitude: -91.1398))
    points.append(CLLocationCoordinate2D(latitude: 43.0609, longitude: -91.1549))
    points.append(CLLocationCoordinate2D(latitude: 43.1391, longitude: -91.1522))
    points.append(CLLocationCoordinate2D(latitude: 43.2882, longitude: -91.0547))
    points.append(CLLocationCoordinate2D(latitude: 43.3322, longitude: -91.2057))
    points.append(CLLocationCoordinate2D(latitude: 43.4140, longitude: -91.2236))
    points.append(CLLocationCoordinate2D(latitude: 43.5008, longitude: -91.2305))
    points.append(CLLocationCoordinate2D(latitude: 43.5008, longitude: -96.4517))
    points.append(CLLocationCoordinate2D(latitude: 43.4818, longitude: -96.6110))
    points.append(CLLocationCoordinate2D(latitude: 43.3871, longitude: -96.5245))
    points.append(CLLocationCoordinate2D(latitude: 43.2232, longitude: -96.5533))
    points.append(CLLocationCoordinate2D(latitude: 43.1301, longitude: -96.4421))
    points.append(CLLocationCoordinate2D(latitude: 42.9243, longitude: -96.5479))
    points.append(CLLocationCoordinate2D(latitude: 42.7188, longitude: -96.6357))
    points.append(CLLocationCoordinate2D(latitude: 42.6158, longitude: -96.5561))
    points.append(CLLocationCoordinate2D(latitude: 42.5055, longitude: -96.4847))
    points.append(CLLocationCoordinate2D(latitude: 42.4772, longitude: -96.4806))
    points.append(CLLocationCoordinate2D(latitude: 42.4810, longitude: -96.3927))
    points.append(CLLocationCoordinate2D(latitude: 42.3667, longitude: -96.4050))
    points.append(CLLocationCoordinate2D(latitude: 42.2722, longitude: -96.3446))
    points.append(CLLocationCoordinate2D(latitude: 42.2051, longitude: -96.3625))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -96.2416))
    points.append(CLLocationCoordinate2D(latitude: 41.9513, longitude: -96.1372))
    points.append(CLLocationCoordinate2D(latitude: 41.7662, longitude: -96.0741))
    points.append(CLLocationCoordinate2D(latitude: 41.6267, longitude: -96.0988))
    points.append(CLLocationCoordinate2D(latitude: 41.4561, longitude: -95.9477))
    points.append(CLLocationCoordinate2D(latitude: 41.2819, longitude: -95.8804))
    points.append(CLLocationCoordinate2D(latitude: 41.0338, longitude: -95.8653))
    points.append(CLLocationCoordinate2D(latitude: 40.8346, longitude: -95.8365))
    points.append(CLLocationCoordinate2D(latitude: 40.6775, longitude: -95.8461))
    points.append(CLLocationCoordinate2D(latitude: 40.5837, longitude: -95.7610))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Iowa", abbreviation: "IA", polygon: poly)
}


func createIdaho()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 48.9991, longitude: -117.0323))
    points.append(CLLocationCoordinate2D(latitude: 49.0007, longitude: -116.0492))
    points.append(CLLocationCoordinate2D(latitude: 47.9771, longitude: -116.0458))
    points.append(CLLocationCoordinate2D(latitude: 47.5793, longitude: -115.6956))
    points.append(CLLocationCoordinate2D(latitude: 47.5487, longitude: -115.7533))
    points.append(CLLocationCoordinate2D(latitude: 47.4253, longitude: -115.7547))
    points.append(CLLocationCoordinate2D(latitude: 47.3025, longitude: -115.5267))
    points.append(CLLocationCoordinate2D(latitude: 47.2569, longitude: -115.3290))
    points.append(CLLocationCoordinate2D(latitude: 47.1888, longitude: -115.2933))
    points.append(CLLocationCoordinate2D(latitude: 47.0402, longitude: -115.1147))
    points.append(CLLocationCoordinate2D(latitude: 46.8423, longitude: -114.9307))
    points.append(CLLocationCoordinate2D(latitude: 46.7003, longitude: -114.7659))
    points.append(CLLocationCoordinate2D(latitude: 46.6362, longitude: -114.5929))
    points.append(CLLocationCoordinate2D(latitude: 46.6334, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 46.6504, longitude: -114.3279))
    points.append(CLLocationCoordinate2D(latitude: 46.5069, longitude: -114.3484))
    points.append(CLLocationCoordinate2D(latitude: 46.4530, longitude: -114.3896))
    points.append(CLLocationCoordinate2D(latitude: 46.3441, longitude: -114.4171))
    points.append(CLLocationCoordinate2D(latitude: 46.2577, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 46.1237, longitude: -114.5132))
    points.append(CLLocationCoordinate2D(latitude: 45.9989, longitude: -114.4817))
    points.append(CLLocationCoordinate2D(latitude: 45.8613, longitude: -114.4391))
    points.append(CLLocationCoordinate2D(latitude: 45.7733, longitude: -114.5641))
    points.append(CLLocationCoordinate2D(latitude: 45.6755, longitude: -114.5215))
    points.append(CLLocationCoordinate2D(latitude: 45.5583, longitude: -114.5668))
    points.append(CLLocationCoordinate2D(latitude: 45.5439, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 45.4592, longitude: -114.3347))
    points.append(CLLocationCoordinate2D(latitude: 45.5525, longitude: -114.2358))
    points.append(CLLocationCoordinate2D(latitude: 45.5631, longitude: -114.1315))
    points.append(CLLocationCoordinate2D(latitude: 45.6908, longitude: -113.9722))
    points.append(CLLocationCoordinate2D(latitude: 45.6140, longitude: -113.8403))
    points.append(CLLocationCoordinate2D(latitude: 45.4447, longitude: -113.7964))
    points.append(CLLocationCoordinate2D(latitude: 45.2749, longitude: -113.7085))
    points.append(CLLocationCoordinate2D(latitude: 45.0269, longitude: -113.4229))
    points.append(CLLocationCoordinate2D(latitude: 44.9386, longitude: -113.4970))
    points.append(CLLocationCoordinate2D(latitude: 44.7887, longitude: -113.3459))
    points.append(CLLocationCoordinate2D(latitude: 44.8091, longitude: -113.2471))
    points.append(CLLocationCoordinate2D(latitude: 44.7389, longitude: -113.1152))
    points.append(CLLocationCoordinate2D(latitude: 44.5905, longitude: -113.0713))
    points.append(CLLocationCoordinate2D(latitude: 44.4857, longitude: -113.0205))
    points.append(CLLocationCoordinate2D(latitude: 44.3563, longitude: -112.8529))
    points.append(CLLocationCoordinate2D(latitude: 44.4181, longitude: -112.8296))
    points.append(CLLocationCoordinate2D(latitude: 44.4896, longitude: -112.7293))
    points.append(CLLocationCoordinate2D(latitude: 44.4475, longitude: -112.3901))
    points.append(CLLocationCoordinate2D(latitude: 44.5367, longitude: -112.3270))
    points.append(CLLocationCoordinate2D(latitude: 44.5229, longitude: -112.1127))
    points.append(CLLocationCoordinate2D(latitude: 44.5592, longitude: -111.8848))
    points.append(CLLocationCoordinate2D(latitude: 44.5151, longitude: -111.8285))
    points.append(CLLocationCoordinate2D(latitude: 44.5386, longitude: -111.4673))
    points.append(CLLocationCoordinate2D(latitude: 44.6198, longitude: -111.5071))
    points.append(CLLocationCoordinate2D(latitude: 44.7311, longitude: -111.3684))
    points.append(CLLocationCoordinate2D(latitude: 44.4759, longitude: -111.0539))
    points.append(CLLocationCoordinate2D(latitude: 43.8623, longitude: -111.0471))
    points.append(CLLocationCoordinate2D(latitude: 42.0013, longitude: -111.0471))
    points.append(CLLocationCoordinate2D(latitude: 41.9962, longitude: -112.1663))
    points.append(CLLocationCoordinate2D(latitude: 41.9871, longitude: -113.8458))
    points.append(CLLocationCoordinate2D(latitude: 41.9936, longitude: -114.0415))
    points.append(CLLocationCoordinate2D(latitude: 41.9942, longitude: -114.0422))
    points.append(CLLocationCoordinate2D(latitude: 42.0013, longitude: -114.8222))
    points.append(CLLocationCoordinate2D(latitude: 41.9973, longitude: -115.9126))
    points.append(CLLocationCoordinate2D(latitude: 42.0001, longitude: -117.0262))
    points.append(CLLocationCoordinate2D(latitude: 43.7820, longitude: -117.0277))
    points.append(CLLocationCoordinate2D(latitude: 43.8330, longitude: -117.0325))
    points.append(CLLocationCoordinate2D(latitude: 43.8632, longitude: -117.0030))
    points.append(CLLocationCoordinate2D(latitude: 43.9073, longitude: -116.9776))
    points.append(CLLocationCoordinate2D(latitude: 44.0244, longitude: -116.9302))
    points.append(CLLocationCoordinate2D(latitude: 44.0491, longitude: -116.9735))
    points.append(CLLocationCoordinate2D(latitude: 44.1014, longitude: -116.9330))
    points.append(CLLocationCoordinate2D(latitude: 44.1561, longitude: -116.8945))
    points.append(CLLocationCoordinate2D(latitude: 44.1965, longitude: -116.9714))
    points.append(CLLocationCoordinate2D(latitude: 44.2442, longitude: -116.9810))
    points.append(CLLocationCoordinate2D(latitude: 44.2486, longitude: -117.0339))
    points.append(CLLocationCoordinate2D(latitude: 44.2304, longitude: -117.0525))
    points.append(CLLocationCoordinate2D(latitude: 44.2585, longitude: -117.0895))
    points.append(CLLocationCoordinate2D(latitude: 44.2806, longitude: -117.1122))
    points.append(CLLocationCoordinate2D(latitude: 44.2590, longitude: -117.1541))
    points.append(CLLocationCoordinate2D(latitude: 44.2973, longitude: -117.2255))
    points.append(CLLocationCoordinate2D(latitude: 44.3445, longitude: -117.1994))
    points.append(CLLocationCoordinate2D(latitude: 44.3813, longitude: -117.2372))
    points.append(CLLocationCoordinate2D(latitude: 44.4769, longitude: -117.2269))
    points.append(CLLocationCoordinate2D(latitude: 44.5234, longitude: -117.1836))
    points.append(CLLocationCoordinate2D(latitude: 44.5376, longitude: -117.1458))
    points.append(CLLocationCoordinate2D(latitude: 44.7423, longitude: -117.0442))
    points.append(CLLocationCoordinate2D(latitude: 44.7921, longitude: -116.9316))
    points.append(CLLocationCoordinate2D(latitude: 44.8568, longitude: -116.8980))
    points.append(CLLocationCoordinate2D(latitude: 44.9356, longitude: -116.8327))
    points.append(CLLocationCoordinate2D(latitude: 44.9624, longitude: -116.8513))
    points.append(CLLocationCoordinate2D(latitude: 44.9896, longitude: -116.8554))
    points.append(CLLocationCoordinate2D(latitude: 45.0313, longitude: -116.8417))
    points.append(CLLocationCoordinate2D(latitude: 45.0968, longitude: -116.7819))
    points.append(CLLocationCoordinate2D(latitude: 45.1627, longitude: -116.7229))
    points.append(CLLocationCoordinate2D(latitude: 45.2178, longitude: -116.7105))
    points.append(CLLocationCoordinate2D(latitude: 45.3213, longitude: -116.6741))
    points.append(CLLocationCoordinate2D(latitude: 45.3984, longitude: -116.6185))
    points.append(CLLocationCoordinate2D(latitude: 45.4433, longitude: -116.5883))
    points.append(CLLocationCoordinate2D(latitude: 45.4630, longitude: -116.5553))
    points.append(CLLocationCoordinate2D(latitude: 45.5371, longitude: -116.5334))
    points.append(CLLocationCoordinate2D(latitude: 45.6140, longitude: -116.4640))
    points.append(CLLocationCoordinate2D(latitude: 45.6904, longitude: -116.5354))
    points.append(CLLocationCoordinate2D(latitude: 45.7340, longitude: -116.5354))
    points.append(CLLocationCoordinate2D(latitude: 45.7541, longitude: -116.5594))
    points.append(CLLocationCoordinate2D(latitude: 45.7843, longitude: -116.6357))
    points.append(CLLocationCoordinate2D(latitude: 45.7781, longitude: -116.5965))
    points.append(CLLocationCoordinate2D(latitude: 45.7805, longitude: -116.6597))
    points.append(CLLocationCoordinate2D(latitude: 45.8259, longitude: -116.7105))
    points.append(CLLocationCoordinate2D(latitude: 45.8159, longitude: -116.7586))
    points.append(CLLocationCoordinate2D(latitude: 45.8341, longitude: -116.7908))
    points.append(CLLocationCoordinate2D(latitude: 45.8642, longitude: -116.8046))
    points.append(CLLocationCoordinate2D(latitude: 45.9053, longitude: -116.8595))
    points.append(CLLocationCoordinate2D(latitude: 45.9545, longitude: -116.8739))
    points.append(CLLocationCoordinate2D(latitude: 45.9769, longitude: -116.8925))
    points.append(CLLocationCoordinate2D(latitude: 45.9960, longitude: -116.9165))
    points.append(CLLocationCoordinate2D(latitude: 46.0537, longitude: -116.9433))
    points.append(CLLocationCoordinate2D(latitude: 46.0785, longitude: -116.9762))
    points.append(CLLocationCoordinate2D(latitude: 46.1009, longitude: -116.9584))
    points.append(CLLocationCoordinate2D(latitude: 46.1432, longitude: -116.9357))
    points.append(CLLocationCoordinate2D(latitude: 46.1722, longitude: -116.9254))
    points.append(CLLocationCoordinate2D(latitude: 46.2022, longitude: -116.9659))
    points.append(CLLocationCoordinate2D(latitude: 46.2388, longitude: -116.9577))
    points.append(CLLocationCoordinate2D(latitude: 46.2848, longitude: -116.9879))
    points.append(CLLocationCoordinate2D(latitude: 46.3384, longitude: -117.0277))
    points.append(CLLocationCoordinate2D(latitude: 46.3498, longitude: -117.0621))
    points.append(CLLocationCoordinate2D(latitude: 46.4274, longitude: -117.0394))
    points.append(CLLocationCoordinate2D(latitude: 46.5060, longitude: -117.0394))
    points.append(CLLocationCoordinate2D(latitude: 47.9614, longitude: -117.0415))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Idaho", abbreviation: "ID", polygon: poly)
}


func createIllinois()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 42.5116, longitude: -90.6290))
    points.append(CLLocationCoordinate2D(latitude: 42.4924, longitude: -87.0213))
    points.append(CLLocationCoordinate2D(latitude: 41.7641, longitude: -87.2067))
    points.append(CLLocationCoordinate2D(latitude: 41.7598, longitude: -87.5236))
    points.append(CLLocationCoordinate2D(latitude: 39.6417, longitude: -87.5336))
    points.append(CLLocationCoordinate2D(latitude: 39.3566, longitude: -87.5308))
    points.append(CLLocationCoordinate2D(latitude: 39.1386, longitude: -87.6517))
    points.append(CLLocationCoordinate2D(latitude: 38.9445, longitude: -87.5157))
    points.append(CLLocationCoordinate2D(latitude: 38.7294, longitude: -87.5047))
    points.append(CLLocationCoordinate2D(latitude: 38.6115, longitude: -87.6146))
    points.append(CLLocationCoordinate2D(latitude: 38.4944, longitude: -87.6544))
    points.append(CLLocationCoordinate2D(latitude: 38.3740, longitude: -87.7780))
    points.append(CLLocationCoordinate2D(latitude: 38.2856, longitude: -87.8371))
    points.append(CLLocationCoordinate2D(latitude: 38.2414, longitude: -87.9758))
    points.append(CLLocationCoordinate2D(latitude: 38.1454, longitude: -87.9291))
    points.append(CLLocationCoordinate2D(latitude: 37.9788, longitude: -88.0225))
    points.append(CLLocationCoordinate2D(latitude: 37.8900, longitude: -88.0458))
    points.append(CLLocationCoordinate2D(latitude: 37.7881, longitude: -88.0321))
    points.append(CLLocationCoordinate2D(latitude: 37.6349, longitude: -88.1529))
    points.append(CLLocationCoordinate2D(latitude: 37.5097, longitude: -88.0609))
    points.append(CLLocationCoordinate2D(latitude: 37.4149, longitude: -88.4152))
    points.append(CLLocationCoordinate2D(latitude: 37.2828, longitude: -88.5086))
    points.append(CLLocationCoordinate2D(latitude: 37.1428, longitude: -88.4221))
    points.append(CLLocationCoordinate2D(latitude: 37.0585, longitude: -88.4990))
    points.append(CLLocationCoordinate2D(latitude: 37.1428, longitude: -88.7256))
    points.append(CLLocationCoordinate2D(latitude: 37.2128, longitude: -88.9453))
    points.append(CLLocationCoordinate2D(latitude: 37.1559, longitude: -89.0689))
    points.append(CLLocationCoordinate2D(latitude: 37.0376, longitude: -89.1650))
    points.append(CLLocationCoordinate2D(latitude: 36.9894, longitude: -89.2873))
    points.append(CLLocationCoordinate2D(latitude: 37.1505, longitude: -89.4356))
    points.append(CLLocationCoordinate2D(latitude: 37.2762, longitude: -89.5345))
    points.append(CLLocationCoordinate2D(latitude: 37.3996, longitude: -89.4315))
    points.append(CLLocationCoordinate2D(latitude: 37.6936, longitude: -89.5358))
    points.append(CLLocationCoordinate2D(latitude: 37.9767, longitude: -89.9670))
    points.append(CLLocationCoordinate2D(latitude: 38.2587, longitude: -90.3790))
    points.append(CLLocationCoordinate2D(latitude: 38.6169, longitude: -90.2376))
    points.append(CLLocationCoordinate2D(latitude: 38.7573, longitude: -90.1744))
    points.append(CLLocationCoordinate2D(latitude: 38.8247, longitude: -90.1167))
    points.append(CLLocationCoordinate2D(latitude: 38.8846, longitude: -90.1799))
    points.append(CLLocationCoordinate2D(latitude: 38.9680, longitude: -90.4504))
    points.append(CLLocationCoordinate2D(latitude: 38.8654, longitude: -90.5905))
    points.append(CLLocationCoordinate2D(latitude: 39.0405, longitude: -90.7086))
    points.append(CLLocationCoordinate2D(latitude: 39.2301, longitude: -90.7306))
    points.append(CLLocationCoordinate2D(latitude: 39.3173, longitude: -90.8350))
    points.append(CLLocationCoordinate2D(latitude: 39.3853, longitude: -90.9338))
    points.append(CLLocationCoordinate2D(latitude: 39.5559, longitude: -91.1398))
    points.append(CLLocationCoordinate2D(latitude: 39.7262, longitude: -91.3554))
    points.append(CLLocationCoordinate2D(latitude: 39.8570, longitude: -91.4406))
    points.append(CLLocationCoordinate2D(latitude: 39.9940, longitude: -91.4941))
    points.append(CLLocationCoordinate2D(latitude: 40.1694, longitude: -91.5120))
    points.append(CLLocationCoordinate2D(latitude: 40.3497, longitude: -91.4667))
    points.append(CLLocationCoordinate2D(latitude: 40.4166, longitude: -91.3939))
    points.append(CLLocationCoordinate2D(latitude: 40.5566, longitude: -91.4021))
    points.append(CLLocationCoordinate2D(latitude: 40.6265, longitude: -91.2524))
    points.append(CLLocationCoordinate2D(latitude: 40.6963, longitude: -91.1151))
    points.append(CLLocationCoordinate2D(latitude: 40.8232, longitude: -91.0890))
    points.append(CLLocationCoordinate2D(latitude: 40.9312, longitude: -90.9792))
    points.append(CLLocationCoordinate2D(latitude: 41.1642, longitude: -91.0162))
    points.append(CLLocationCoordinate2D(latitude: 41.2355, longitude: -91.1055))
    points.append(CLLocationCoordinate2D(latitude: 41.4170, longitude: -91.0368))
    points.append(CLLocationCoordinate2D(latitude: 41.4458, longitude: -90.8487))
    points.append(CLLocationCoordinate2D(latitude: 41.4417, longitude: -90.7251))
    points.append(CLLocationCoordinate2D(latitude: 41.5816, longitude: -90.3516))
    points.append(CLLocationCoordinate2D(latitude: 41.7713, longitude: -90.2637))
    points.append(CLLocationCoordinate2D(latitude: 41.9023, longitude: -90.1538))
    points.append(CLLocationCoordinate2D(latitude: 42.0819, longitude: -90.1758))
    points.append(CLLocationCoordinate2D(latitude: 42.2021, longitude: -90.3598))
    points.append(CLLocationCoordinate2D(latitude: 42.2936, longitude: -90.4395))
    points.append(CLLocationCoordinate2D(latitude: 42.4032, longitude: -90.5356))
    points.append(CLLocationCoordinate2D(latitude: 42.4843, longitude: -90.6564))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Illinois", abbreviation: "IL", polygon: poly)
}


func createIndiana()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 41.7598, longitude: -87.5236))
    points.append(CLLocationCoordinate2D(latitude: 41.7611, longitude: -84.8090))
    points.append(CLLocationCoordinate2D(latitude: 39.0981, longitude: -84.8199))
    points.append(CLLocationCoordinate2D(latitude: 39.0533, longitude: -84.8927))
    points.append(CLLocationCoordinate2D(latitude: 38.8996, longitude: -84.8625))
    points.append(CLLocationCoordinate2D(latitude: 38.8312, longitude: -84.8268))
    points.append(CLLocationCoordinate2D(latitude: 38.7841, longitude: -84.8145))
    points.append(CLLocationCoordinate2D(latitude: 38.7905, longitude: -84.8941))
    points.append(CLLocationCoordinate2D(latitude: 38.7809, longitude: -84.9861))
    points.append(CLLocationCoordinate2D(latitude: 38.6877, longitude: -85.1797))
    points.append(CLLocationCoordinate2D(latitude: 38.7198, longitude: -85.4420))
    points.append(CLLocationCoordinate2D(latitude: 38.5653, longitude: -85.4091))
    points.append(CLLocationCoordinate2D(latitude: 38.4461, longitude: -85.5986))
    points.append(CLLocationCoordinate2D(latitude: 38.2695, longitude: -85.7510))
    points.append(CLLocationCoordinate2D(latitude: 38.2824, longitude: -85.8266))
    points.append(CLLocationCoordinate2D(latitude: 38.2414, longitude: -85.8376))
    points.append(CLLocationCoordinate2D(latitude: 38.0967, longitude: -85.9035))
    points.append(CLLocationCoordinate2D(latitude: 38.0232, longitude: -85.9200))
    points.append(CLLocationCoordinate2D(latitude: 37.9594, longitude: -86.0477))
    points.append(CLLocationCoordinate2D(latitude: 38.0102, longitude: -86.0944))
    points.append(CLLocationCoordinate2D(latitude: 38.0578, longitude: -86.2729))
    points.append(CLLocationCoordinate2D(latitude: 38.0935, longitude: -86.2811))
    points.append(CLLocationCoordinate2D(latitude: 38.1346, longitude: -86.2729))
    points.append(CLLocationCoordinate2D(latitude: 38.1842, longitude: -86.3704))
    points.append(CLLocationCoordinate2D(latitude: 38.0416, longitude: -86.5187))
    points.append(CLLocationCoordinate2D(latitude: 37.9193, longitude: -86.5874))
    points.append(CLLocationCoordinate2D(latitude: 37.8402, longitude: -86.6409))
    points.append(CLLocationCoordinate2D(latitude: 37.9085, longitude: -86.6478))
    points.append(CLLocationCoordinate2D(latitude: 37.9085, longitude: -86.6876))
    points.append(CLLocationCoordinate2D(latitude: 37.9821, longitude: -86.8236))
    points.append(CLLocationCoordinate2D(latitude: 37.9464, longitude: -86.9019))
    points.append(CLLocationCoordinate2D(latitude: 37.9009, longitude: -87.0392))
    points.append(CLLocationCoordinate2D(latitude: 37.7924, longitude: -87.1394))
    points.append(CLLocationCoordinate2D(latitude: 37.9464, longitude: -87.4429))
    points.append(CLLocationCoordinate2D(latitude: 37.9756, longitude: -87.5885))
    points.append(CLLocationCoordinate2D(latitude: 37.9225, longitude: -87.6283))
    points.append(CLLocationCoordinate2D(latitude: 37.8694, longitude: -87.6915))
    points.append(CLLocationCoordinate2D(latitude: 37.9236, longitude: -87.8879))
    points.append(CLLocationCoordinate2D(latitude: 37.7718, longitude: -87.9620))
    points.append(CLLocationCoordinate2D(latitude: 37.7881, longitude: -88.0321))
    points.append(CLLocationCoordinate2D(latitude: 37.8900, longitude: -88.0458))
    points.append(CLLocationCoordinate2D(latitude: 37.9788, longitude: -88.0225))
    points.append(CLLocationCoordinate2D(latitude: 38.1454, longitude: -87.9291))
    points.append(CLLocationCoordinate2D(latitude: 38.2414, longitude: -87.9758))
    points.append(CLLocationCoordinate2D(latitude: 38.2856, longitude: -87.8371))
    points.append(CLLocationCoordinate2D(latitude: 38.3740, longitude: -87.7780))
    points.append(CLLocationCoordinate2D(latitude: 38.4944, longitude: -87.6544))
    points.append(CLLocationCoordinate2D(latitude: 38.6115, longitude: -87.6146))
    points.append(CLLocationCoordinate2D(latitude: 38.7294, longitude: -87.5047))
    points.append(CLLocationCoordinate2D(latitude: 38.9445, longitude: -87.5157))
    points.append(CLLocationCoordinate2D(latitude: 39.1386, longitude: -87.6517))
    points.append(CLLocationCoordinate2D(latitude: 39.3566, longitude: -87.5308))
    points.append(CLLocationCoordinate2D(latitude: 41.7600, longitude: -87.5253))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Indiana", abbreviation: "IN", polygon: poly)
}


func createKansas()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 40.0024, longitude: -102.0506))
    points.append(CLLocationCoordinate2D(latitude: 39.9992, longitude: -95.3091))
    points.append(CLLocationCoordinate2D(latitude: 39.9445, longitude: -95.2213))
    points.append(CLLocationCoordinate2D(latitude: 39.8760, longitude: -95.0922))
    points.append(CLLocationCoordinate2D(latitude: 39.8971, longitude: -95.0098))
    points.append(CLLocationCoordinate2D(latitude: 39.8823, longitude: -94.9342))
    points.append(CLLocationCoordinate2D(latitude: 39.8286, longitude: -94.8930))
    points.append(CLLocationCoordinate2D(latitude: 39.7283, longitude: -94.8807))
    points.append(CLLocationCoordinate2D(latitude: 39.5612, longitude: -95.0990))
    points.append(CLLocationCoordinate2D(latitude: 39.2759, longitude: -94.8793))
    points.append(CLLocationCoordinate2D(latitude: 39.1673, longitude: -94.7255))
    points.append(CLLocationCoordinate2D(latitude: 39.1971, longitude: -94.6184))
    points.append(CLLocationCoordinate2D(latitude: 39.0789, longitude: -94.6143))
    points.append(CLLocationCoordinate2D(latitude: 38.8803, longitude: -94.6046))
    points.append(CLLocationCoordinate2D(latitude: 36.9982, longitude: -94.6211))
    points.append(CLLocationCoordinate2D(latitude: 36.9927, longitude: -102.0438))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Kansas", abbreviation: "KS", polygon: poly)
}


func createKentucky()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.4986, longitude: -89.5372))
    points.append(CLLocationCoordinate2D(latitude: 36.5074, longitude: -89.3010))
    points.append(CLLocationCoordinate2D(latitude: 36.5008, longitude: -88.6871))
    points.append(CLLocationCoordinate2D(latitude: 36.4931, longitude: -88.0568))
    points.append(CLLocationCoordinate2D(latitude: 36.6695, longitude: -88.0692))
    points.append(CLLocationCoordinate2D(latitude: 36.6343, longitude: -87.8535))
    points.append(CLLocationCoordinate2D(latitude: 36.6265, longitude: -86.5654))
    points.append(CLLocationCoordinate2D(latitude: 36.5979, longitude: -83.6375))
    points.append(CLLocationCoordinate2D(latitude: 36.6860, longitude: -83.3423))
    points.append(CLLocationCoordinate2D(latitude: 36.7466, longitude: -83.1377))
    points.append(CLLocationCoordinate2D(latitude: 36.9762, longitude: -82.8589))
    points.append(CLLocationCoordinate2D(latitude: 37.2894, longitude: -82.3192))
    points.append(CLLocationCoordinate2D(latitude: 37.4934, longitude: -82.0308))
    points.append(CLLocationCoordinate2D(latitude: 37.6653, longitude: -82.2121))
    points.append(CLLocationCoordinate2D(latitude: 37.8618, longitude: -82.4016))
    points.append(CLLocationCoordinate2D(latitude: 37.9908, longitude: -82.5073))
    points.append(CLLocationCoordinate2D(latitude: 38.1778, longitude: -82.6392))
    points.append(CLLocationCoordinate2D(latitude: 38.3761, longitude: -82.5952))
    points.append(CLLocationCoordinate2D(latitude: 38.5030, longitude: -82.7477))
    points.append(CLLocationCoordinate2D(latitude: 38.5825, longitude: -82.8369))
    points.append(CLLocationCoordinate2D(latitude: 38.7316, longitude: -82.9015))
    points.append(CLLocationCoordinate2D(latitude: 38.7027, longitude: -83.0196))
    points.append(CLLocationCoordinate2D(latitude: 38.6190, longitude: -83.1418))
    points.append(CLLocationCoordinate2D(latitude: 38.5986, longitude: -83.2819))
    points.append(CLLocationCoordinate2D(latitude: 38.6941, longitude: -83.5291))
    points.append(CLLocationCoordinate2D(latitude: 38.6351, longitude: -83.6595))
    points.append(CLLocationCoordinate2D(latitude: 38.7487, longitude: -83.8930))
    points.append(CLLocationCoordinate2D(latitude: 38.7701, longitude: -84.0440))
    points.append(CLLocationCoordinate2D(latitude: 38.8119, longitude: -84.2184))
    points.append(CLLocationCoordinate2D(latitude: 38.9872, longitude: -84.3228))
    points.append(CLLocationCoordinate2D(latitude: 39.1013, longitude: -84.4917))
    points.append(CLLocationCoordinate2D(latitude: 39.1183, longitude: -84.6277))
    points.append(CLLocationCoordinate2D(latitude: 39.1439, longitude: -84.7554))
    points.append(CLLocationCoordinate2D(latitude: 39.0523, longitude: -84.8914))
    points.append(CLLocationCoordinate2D(latitude: 38.9263, longitude: -84.8735))
    points.append(CLLocationCoordinate2D(latitude: 38.7894, longitude: -84.8131))
    points.append(CLLocationCoordinate2D(latitude: 38.7691, longitude: -84.9957))
    points.append(CLLocationCoordinate2D(latitude: 38.6866, longitude: -85.1921))
    points.append(CLLocationCoordinate2D(latitude: 38.7209, longitude: -85.4407))
    points.append(CLLocationCoordinate2D(latitude: 38.5653, longitude: -85.4077))
    points.append(CLLocationCoordinate2D(latitude: 38.4461, longitude: -85.5972))
    points.append(CLLocationCoordinate2D(latitude: 38.2748, longitude: -85.7455))
    points.append(CLLocationCoordinate2D(latitude: 38.2716, longitude: -85.8087))
    points.append(CLLocationCoordinate2D(latitude: 38.2069, longitude: -85.8650))
    points.append(CLLocationCoordinate2D(latitude: 38.0286, longitude: -85.9323))
    points.append(CLLocationCoordinate2D(latitude: 37.9550, longitude: -86.0422))
    points.append(CLLocationCoordinate2D(latitude: 38.0135, longitude: -86.1108))
    points.append(CLLocationCoordinate2D(latitude: 38.0643, longitude: -86.2756))
    points.append(CLLocationCoordinate2D(latitude: 38.1389, longitude: -86.2770))
    points.append(CLLocationCoordinate2D(latitude: 38.1864, longitude: -86.3690))
    points.append(CLLocationCoordinate2D(latitude: 38.0308, longitude: -86.5283))
    points.append(CLLocationCoordinate2D(latitude: 37.9204, longitude: -86.5874))
    points.append(CLLocationCoordinate2D(latitude: 37.8423, longitude: -86.6423))
    points.append(CLLocationCoordinate2D(latitude: 37.9041, longitude: -86.6547))
    points.append(CLLocationCoordinate2D(latitude: 37.9864, longitude: -86.8250))
    points.append(CLLocationCoordinate2D(latitude: 37.9095, longitude: -87.0406))
    points.append(CLLocationCoordinate2D(latitude: 37.7935, longitude: -87.1381))
    points.append(CLLocationCoordinate2D(latitude: 37.9420, longitude: -87.4168))
    points.append(CLLocationCoordinate2D(latitude: 37.9745, longitude: -87.5858))
    points.append(CLLocationCoordinate2D(latitude: 37.8749, longitude: -87.6929))
    points.append(CLLocationCoordinate2D(latitude: 37.9215, longitude: -87.8906))
    points.append(CLLocationCoordinate2D(latitude: 37.7761, longitude: -87.9552))
    points.append(CLLocationCoordinate2D(latitude: 37.7903, longitude: -88.0307))
    points.append(CLLocationCoordinate2D(latitude: 37.6479, longitude: -88.1584))
    points.append(CLLocationCoordinate2D(latitude: 37.5097, longitude: -88.0664))
    points.append(CLLocationCoordinate2D(latitude: 37.4193, longitude: -88.4180))
    points.append(CLLocationCoordinate2D(latitude: 37.2784, longitude: -88.5086))
    points.append(CLLocationCoordinate2D(latitude: 37.1428, longitude: -88.4248))
    points.append(CLLocationCoordinate2D(latitude: 37.0738, longitude: -88.5059))
    points.append(CLLocationCoordinate2D(latitude: 37.1461, longitude: -88.7421))
    points.append(CLLocationCoordinate2D(latitude: 37.2249, longitude: -88.9522))
    points.append(CLLocationCoordinate2D(latitude: 37.1406, longitude: -89.0964))
    points.append(CLLocationCoordinate2D(latitude: 37.0278, longitude: -89.1815))
    points.append(CLLocationCoordinate2D(latitude: 36.9488, longitude: -89.1032))
    points.append(CLLocationCoordinate2D(latitude: 36.8214, longitude: -89.1733))
    points.append(CLLocationCoordinate2D(latitude: 36.7411, longitude: -89.1925))
    points.append(CLLocationCoordinate2D(latitude: 36.6265, longitude: -89.2007))
    points.append(CLLocationCoordinate2D(latitude: 36.5449, longitude: -89.2529))
    points.append(CLLocationCoordinate2D(latitude: 36.6232, longitude: -89.3518))
    points.append(CLLocationCoordinate2D(latitude: 36.4986, longitude: -89.5345))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Kentucky", abbreviation: "KY", polygon: poly)
}


func createLouisiana()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 33.0225, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 33.0179, longitude: -93.0048))
    points.append(CLLocationCoordinate2D(latitude: 33.0036, longitude: -91.1659))
    points.append(CLLocationCoordinate2D(latitude: 32.9269, longitude: -91.2209))
    points.append(CLLocationCoordinate2D(latitude: 32.8773, longitude: -91.1220))
    points.append(CLLocationCoordinate2D(latitude: 32.8358, longitude: -91.1481))
    points.append(CLLocationCoordinate2D(latitude: 32.7642, longitude: -91.1412))
    points.append(CLLocationCoordinate2D(latitude: 32.6382, longitude: -91.1536))
    points.append(CLLocationCoordinate2D(latitude: 32.5804, longitude: -91.1069))
    points.append(CLLocationCoordinate2D(latitude: 32.6093, longitude: -91.0080))
    points.append(CLLocationCoordinate2D(latitude: 32.4588, longitude: -91.0904))
    points.append(CLLocationCoordinate2D(latitude: 32.4379, longitude: -91.0355))
    points.append(CLLocationCoordinate2D(latitude: 32.3742, longitude: -91.0286))
    points.append(CLLocationCoordinate2D(latitude: 32.3150, longitude: -90.9064))
    points.append(CLLocationCoordinate2D(latitude: 32.2616, longitude: -90.9723))
    points.append(CLLocationCoordinate2D(latitude: 32.1942, longitude: -91.0464))
    points.append(CLLocationCoordinate2D(latitude: 32.1198, longitude: -91.0739))
    points.append(CLLocationCoordinate2D(latitude: 32.0593, longitude: -91.0464))
    points.append(CLLocationCoordinate2D(latitude: 31.9918, longitude: -91.1014))
    points.append(CLLocationCoordinate2D(latitude: 31.9498, longitude: -91.1865))
    points.append(CLLocationCoordinate2D(latitude: 31.8262, longitude: -91.3101))
    points.append(CLLocationCoordinate2D(latitude: 31.7947, longitude: -91.3527))
    points.append(CLLocationCoordinate2D(latitude: 31.6230, longitude: -91.3925))
    points.append(CLLocationCoordinate2D(latitude: 31.6218, longitude: -91.5134))
    points.append(CLLocationCoordinate2D(latitude: 31.5668, longitude: -91.4310))
    points.append(CLLocationCoordinate2D(latitude: 31.5130, longitude: -91.5161))
    points.append(CLLocationCoordinate2D(latitude: 31.3701, longitude: -91.5244))
    points.append(CLLocationCoordinate2D(latitude: 31.2598, longitude: -91.5477))
    points.append(CLLocationCoordinate2D(latitude: 31.2692, longitude: -91.6425))
    points.append(CLLocationCoordinate2D(latitude: 31.2328, longitude: -91.6603))
    points.append(CLLocationCoordinate2D(latitude: 31.1917, longitude: -91.5848))
    points.append(CLLocationCoordinate2D(latitude: 31.1047, longitude: -91.6287))
    points.append(CLLocationCoordinate2D(latitude: 31.0318, longitude: -91.5614))
    points.append(CLLocationCoordinate2D(latitude: 30.9988, longitude: -91.6397))
    points.append(CLLocationCoordinate2D(latitude: 31.0012, longitude: -89.7336))
    points.append(CLLocationCoordinate2D(latitude: 30.6686, longitude: -89.8517))
    points.append(CLLocationCoordinate2D(latitude: 30.5386, longitude: -89.7858))
    points.append(CLLocationCoordinate2D(latitude: 30.3148, longitude: -89.6347))
    points.append(CLLocationCoordinate2D(latitude: 30.1807, longitude: -89.5688))
    points.append(CLLocationCoordinate2D(latitude: 30.1582, longitude: -89.4960))
    points.append(CLLocationCoordinate2D(latitude: 30.2140, longitude: -89.1843))
    points.append(CLLocationCoordinate2D(latitude: 30.1463, longitude: -89.0373))
    points.append(CLLocationCoordinate2D(latitude: 30.0905, longitude: -88.8354))
    points.append(CLLocationCoordinate2D(latitude: 29.8383, longitude: -88.7421))
    points.append(CLLocationCoordinate2D(latitude: 29.5758, longitude: -88.8712))
    points.append(CLLocationCoordinate2D(latitude: 29.1833, longitude: -88.9371))
    points.append(CLLocationCoordinate2D(latitude: 28.9649, longitude: -89.0359))
    points.append(CLLocationCoordinate2D(latitude: 28.8832, longitude: -89.2282))
    points.append(CLLocationCoordinate2D(latitude: 28.9048, longitude: -89.4754))
    points.append(CLLocationCoordinate2D(latitude: 29.1210, longitude: -89.7418))
    points.append(CLLocationCoordinate2D(latitude: 28.9529, longitude: -90.1126))
    points.append(CLLocationCoordinate2D(latitude: 28.9120, longitude: -90.6619))
    points.append(CLLocationCoordinate2D(latitude: 28.9553, longitude: -91.0355))
    points.append(CLLocationCoordinate2D(latitude: 29.1210, longitude: -91.3211))
    points.append(CLLocationCoordinate2D(latitude: 29.2864, longitude: -91.9061))
    points.append(CLLocationCoordinate2D(latitude: 29.4360, longitude: -92.7452))
    points.append(CLLocationCoordinate2D(latitude: 29.6009, longitude: -93.8177))
    points.append(CLLocationCoordinate2D(latitude: 29.6749, longitude: -93.8631))
    points.append(CLLocationCoordinate2D(latitude: 29.7370, longitude: -93.8933))
    points.append(CLLocationCoordinate2D(latitude: 29.7930, longitude: -93.9304))
    points.append(CLLocationCoordinate2D(latitude: 29.8216, longitude: -93.9276))
    points.append(CLLocationCoordinate2D(latitude: 29.8883, longitude: -93.8370))
    points.append(CLLocationCoordinate2D(latitude: 29.9811, longitude: -93.7985))
    points.append(CLLocationCoordinate2D(latitude: 30.0144, longitude: -93.7601))
    points.append(CLLocationCoordinate2D(latitude: 30.0691, longitude: -93.7106))
    points.append(CLLocationCoordinate2D(latitude: 30.0929, longitude: -93.7354))
    points.append(CLLocationCoordinate2D(latitude: 30.1166, longitude: -93.6996))
    points.append(CLLocationCoordinate2D(latitude: 30.1997, longitude: -93.7271))
    points.append(CLLocationCoordinate2D(latitude: 30.2899, longitude: -93.7106))
    points.append(CLLocationCoordinate2D(latitude: 30.3350, longitude: -93.7656))
    points.append(CLLocationCoordinate2D(latitude: 30.3871, longitude: -93.7601))
    points.append(CLLocationCoordinate2D(latitude: 30.4416, longitude: -93.6914))
    points.append(CLLocationCoordinate2D(latitude: 30.5102, longitude: -93.7106))
    points.append(CLLocationCoordinate2D(latitude: 30.5433, longitude: -93.7463))
    points.append(CLLocationCoordinate2D(latitude: 30.5954, longitude: -93.7106))
    points.append(CLLocationCoordinate2D(latitude: 30.5906, longitude: -93.6914))
    points.append(CLLocationCoordinate2D(latitude: 30.6545, longitude: -93.6859))
    points.append(CLLocationCoordinate2D(latitude: 30.6781, longitude: -93.6365))
    points.append(CLLocationCoordinate2D(latitude: 30.7513, longitude: -93.6200))
    points.append(CLLocationCoordinate2D(latitude: 30.7890, longitude: -93.5925))
    points.append(CLLocationCoordinate2D(latitude: 30.8150, longitude: -93.5513))
    points.append(CLLocationCoordinate2D(latitude: 30.8645, longitude: -93.5623))
    points.append(CLLocationCoordinate2D(latitude: 30.8881, longitude: -93.5788))
    points.append(CLLocationCoordinate2D(latitude: 30.9187, longitude: -93.5541))
    points.append(CLLocationCoordinate2D(latitude: 30.9423, longitude: -93.5294))
    points.append(CLLocationCoordinate2D(latitude: 31.0082, longitude: -93.5760))
    points.append(CLLocationCoordinate2D(latitude: 31.0318, longitude: -93.5101))
    points.append(CLLocationCoordinate2D(latitude: 31.0906, longitude: -93.5596))
    points.append(CLLocationCoordinate2D(latitude: 31.1211, longitude: -93.5321))
    points.append(CLLocationCoordinate2D(latitude: 31.1799, longitude: -93.5349))
    points.append(CLLocationCoordinate2D(latitude: 31.1658, longitude: -93.5953))
    points.append(CLLocationCoordinate2D(latitude: 31.2292, longitude: -93.6282))
    points.append(CLLocationCoordinate2D(latitude: 31.2668, longitude: -93.6118))
    points.append(CLLocationCoordinate2D(latitude: 31.3044, longitude: -93.6859))
    points.append(CLLocationCoordinate2D(latitude: 31.3888, longitude: -93.6694))
    points.append(CLLocationCoordinate2D(latitude: 31.4240, longitude: -93.7051))
    points.append(CLLocationCoordinate2D(latitude: 31.4427, longitude: -93.6859))
    points.append(CLLocationCoordinate2D(latitude: 31.4755, longitude: -93.7573))
    points.append(CLLocationCoordinate2D(latitude: 31.5083, longitude: -93.7189))
    points.append(CLLocationCoordinate2D(latitude: 31.5411, longitude: -93.8040))
    points.append(CLLocationCoordinate2D(latitude: 31.6113, longitude: -93.8425))
    points.append(CLLocationCoordinate2D(latitude: 31.6581, longitude: -93.8205))
    points.append(CLLocationCoordinate2D(latitude: 31.7071, longitude: -93.7985))
    points.append(CLLocationCoordinate2D(latitude: 31.8029, longitude: -93.8480))
    points.append(CLLocationCoordinate2D(latitude: 31.8892, longitude: -93.9029))
    points.append(CLLocationCoordinate2D(latitude: 31.9149, longitude: -93.9606))
    points.append(CLLocationCoordinate2D(latitude: 32.0081, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 32.7041, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 33.0225, longitude: -94.0430))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Louisiana", abbreviation: "LA", polygon: poly)
}


func createMassachusetts()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 42.0003, longitude: -72.7789))
    points.append(CLLocationCoordinate2D(latitude: 42.0330, longitude: -72.7405))
    points.append(CLLocationCoordinate2D(latitude: 42.0330, longitude: -72.3779))
    points.append(CLLocationCoordinate2D(latitude: 42.0233, longitude: -71.8005))
    points.append(CLLocationCoordinate2D(latitude: 42.0080, longitude: -71.7991))
    points.append(CLLocationCoordinate2D(latitude: 42.0186, longitude: -71.3813))
    points.append(CLLocationCoordinate2D(latitude: 41.8929, longitude: -71.3809))
    points.append(CLLocationCoordinate2D(latitude: 41.8981, longitude: -71.3387))
    points.append(CLLocationCoordinate2D(latitude: 41.8358, longitude: -71.3370))
    points.append(CLLocationCoordinate2D(latitude: 41.8245, longitude: -71.3493))
    points.append(CLLocationCoordinate2D(latitude: 41.7816, longitude: -71.3342))
    points.append(CLLocationCoordinate2D(latitude: 41.7529, longitude: -71.2628))
    points.append(CLLocationCoordinate2D(latitude: 41.6719, longitude: -71.1914))
    points.append(CLLocationCoordinate2D(latitude: 41.6616, longitude: -71.1351))
    points.append(CLLocationCoordinate2D(latitude: 41.6124, longitude: -71.1433))
    points.append(CLLocationCoordinate2D(latitude: 41.5939, longitude: -71.1310))
    points.append(CLLocationCoordinate2D(latitude: 41.4973, longitude: -71.1214))
    points.append(CLLocationCoordinate2D(latitude: 41.3706, longitude: -71.0568))
    points.append(CLLocationCoordinate2D(latitude: 41.1590, longitude: -70.8316))
    points.append(CLLocationCoordinate2D(latitude: 41.1662, longitude: -69.9225))
    points.append(CLLocationCoordinate2D(latitude: 41.3201, longitude: -69.7948))
    points.append(CLLocationCoordinate2D(latitude: 41.8133, longitude: -69.7398))
    points.append(CLLocationCoordinate2D(latitude: 42.1939, longitude: -70.0337))
    points.append(CLLocationCoordinate2D(latitude: 42.2173, longitude: -70.5144))
    points.append(CLLocationCoordinate2D(latitude: 42.4133, longitude: -70.6984))
    points.append(CLLocationCoordinate2D(latitude: 42.6420, longitude: -70.3647))
    points.append(CLLocationCoordinate2D(latitude: 42.8286, longitude: -70.4759))
    points.append(CLLocationCoordinate2D(latitude: 42.8760, longitude: -70.6133))
    points.append(CLLocationCoordinate2D(latitude: 42.8619, longitude: -70.8440))
    points.append(CLLocationCoordinate2D(latitude: 42.8890, longitude: -70.9154))
    points.append(CLLocationCoordinate2D(latitude: 42.8075, longitude: -71.0651))
    points.append(CLLocationCoordinate2D(latitude: 42.8226, longitude: -71.1337))
    points.append(CLLocationCoordinate2D(latitude: 42.7873, longitude: -71.1859))
    points.append(CLLocationCoordinate2D(latitude: 42.7369, longitude: -71.1832))
    points.append(CLLocationCoordinate2D(latitude: 42.7470, longitude: -71.2189))
    points.append(CLLocationCoordinate2D(latitude: 42.7400, longitude: -71.2560))
    points.append(CLLocationCoordinate2D(latitude: 42.6970, longitude: -71.2941))
    points.append(CLLocationCoordinate2D(latitude: 42.7127, longitude: -71.9151))
    points.append(CLLocationCoordinate2D(latitude: 42.7309, longitude: -72.5441))
    points.append(CLLocationCoordinate2D(latitude: 42.7450, longitude: -73.2541))
    points.append(CLLocationCoordinate2D(latitude: 42.7460, longitude: -73.2664))
    points.append(CLLocationCoordinate2D(latitude: 42.5460, longitude: -73.3406))
    points.append(CLLocationCoordinate2D(latitude: 42.2671, longitude: -73.4436))
    points.append(CLLocationCoordinate2D(latitude: 42.1349, longitude: -73.4917))
    points.append(CLLocationCoordinate2D(latitude: 42.0880, longitude: -73.5081))
    points.append(CLLocationCoordinate2D(latitude: 42.0483, longitude: -73.4985))
    points.append(CLLocationCoordinate2D(latitude: 42.0452, longitude: -73.1841))
    points.append(CLLocationCoordinate2D(latitude: 42.0371, longitude: -72.8146))
    points.append(CLLocationCoordinate2D(latitude: 41.9962, longitude: -72.8160))
    points.append(CLLocationCoordinate2D(latitude: 42.0024, longitude: -72.7803))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Massachusetts", abbreviation: "MA", polygon: poly)
}


func createMaryland()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 39.7210, longitude: -79.4766))
    points.append(CLLocationCoordinate2D(latitude: 39.7220, longitude: -79.4778))
    points.append(CLLocationCoordinate2D(latitude: 39.7222, longitude: -75.7886))
    points.append(CLLocationCoordinate2D(latitude: 39.5655, longitude: -75.7809))
    points.append(CLLocationCoordinate2D(latitude: 39.3152, longitude: -75.7617))
    points.append(CLLocationCoordinate2D(latitude: 38.9498, longitude: -75.7329))
    points.append(CLLocationCoordinate2D(latitude: 38.4611, longitude: -75.6944))
    points.append(CLLocationCoordinate2D(latitude: 38.4482, longitude: -74.8581))
    points.append(CLLocationCoordinate2D(latitude: 38.0200, longitude: -74.9721))
    points.append(CLLocationCoordinate2D(latitude: 38.0275, longitude: -75.2316))
    points.append(CLLocationCoordinate2D(latitude: 37.9962, longitude: -75.6079))
    points.append(CLLocationCoordinate2D(latitude: 37.9951, longitude: -75.6230))
    points.append(CLLocationCoordinate2D(latitude: 37.9464, longitude: -75.6436))
    points.append(CLLocationCoordinate2D(latitude: 37.9529, longitude: -75.7288))
    points.append(CLLocationCoordinate2D(latitude: 37.9117, longitude: -75.8084))
    points.append(CLLocationCoordinate2D(latitude: 37.9095, longitude: -75.9512))
    points.append(CLLocationCoordinate2D(latitude: 37.9464, longitude: -75.9430))
    points.append(CLLocationCoordinate2D(latitude: 37.9529, longitude: -76.0584))
    points.append(CLLocationCoordinate2D(latitude: 37.8889, longitude: -76.2396))
    points.append(CLLocationCoordinate2D(latitude: 37.9474, longitude: -76.3454))
    points.append(CLLocationCoordinate2D(latitude: 37.9669, longitude: -76.4154))
    points.append(CLLocationCoordinate2D(latitude: 38.0146, longitude: -76.4703))
    points.append(CLLocationCoordinate2D(latitude: 38.0275, longitude: -76.5170))
    points.append(CLLocationCoordinate2D(latitude: 38.0751, longitude: -76.5363))
    points.append(CLLocationCoordinate2D(latitude: 38.1464, longitude: -76.6063))
    points.append(CLLocationCoordinate2D(latitude: 38.1616, longitude: -76.6928))
    points.append(CLLocationCoordinate2D(latitude: 38.1670, longitude: -76.7601))
    points.append(CLLocationCoordinate2D(latitude: 38.1637, longitude: -76.8494))
    points.append(CLLocationCoordinate2D(latitude: 38.2080, longitude: -76.9482))
    points.append(CLLocationCoordinate2D(latitude: 38.2748, longitude: -76.9908))
    points.append(CLLocationCoordinate2D(latitude: 38.3093, longitude: -77.0306))
    points.append(CLLocationCoordinate2D(latitude: 38.3761, longitude: -77.0114))
    points.append(CLLocationCoordinate2D(latitude: 38.4009, longitude: -77.0430))
    points.append(CLLocationCoordinate2D(latitude: 38.3697, longitude: -77.0897))
    points.append(CLLocationCoordinate2D(latitude: 38.3697, longitude: -77.1432))
    points.append(CLLocationCoordinate2D(latitude: 38.3320, longitude: -77.2627))
    points.append(CLLocationCoordinate2D(latitude: 38.4525, longitude: -77.3135))
    points.append(CLLocationCoordinate2D(latitude: 38.5514, longitude: -77.2737))
    points.append(CLLocationCoordinate2D(latitude: 38.5954, longitude: -77.2490))
    points.append(CLLocationCoordinate2D(latitude: 38.6373, longitude: -77.1281))
    points.append(CLLocationCoordinate2D(latitude: 38.6737, longitude: -77.1378))
    points.append(CLLocationCoordinate2D(latitude: 38.7112, longitude: -77.0760))
    points.append(CLLocationCoordinate2D(latitude: 38.7187, longitude: -77.0361))
    points.append(CLLocationCoordinate2D(latitude: 38.7766, longitude: -77.0416))
    points.append(CLLocationCoordinate2D(latitude: 38.8451, longitude: -77.0320))
    points.append(CLLocationCoordinate2D(latitude: 38.9025, longitude: -77.0708))
    points.append(CLLocationCoordinate2D(latitude: 38.9570, longitude: -77.1395))
    points.append(CLLocationCoordinate2D(latitude: 38.9773, longitude: -77.2335))
    points.append(CLLocationCoordinate2D(latitude: 39.0240, longitude: -77.2462))
    points.append(CLLocationCoordinate2D(latitude: 39.0634, longitude: -77.3431))
    points.append(CLLocationCoordinate2D(latitude: 39.0717, longitude: -77.4351))
    points.append(CLLocationCoordinate2D(latitude: 39.0792, longitude: -77.4636))
    points.append(CLLocationCoordinate2D(latitude: 39.1218, longitude: -77.5202))
    points.append(CLLocationCoordinate2D(latitude: 39.1804, longitude: -77.5092))
    points.append(CLLocationCoordinate2D(latitude: 39.2269, longitude: -77.4577))
    points.append(CLLocationCoordinate2D(latitude: 39.3051, longitude: -77.5666))
    points.append(CLLocationCoordinate2D(latitude: 39.3067, longitude: -77.6321))
    points.append(CLLocationCoordinate2D(latitude: 39.3202, longitude: -77.7159))
    points.append(CLLocationCoordinate2D(latitude: 39.3383, longitude: -77.7626))
    points.append(CLLocationCoordinate2D(latitude: 39.3810, longitude: -77.7544))
    points.append(CLLocationCoordinate2D(latitude: 39.4288, longitude: -77.7602))
    points.append(CLLocationCoordinate2D(latitude: 39.4367, longitude: -77.8038))
    points.append(CLLocationCoordinate2D(latitude: 39.4606, longitude: -77.7997))
    points.append(CLLocationCoordinate2D(latitude: 39.5019, longitude: -77.7859))
    points.append(CLLocationCoordinate2D(latitude: 39.5062, longitude: -77.8436))
    points.append(CLLocationCoordinate2D(latitude: 39.5210, longitude: -77.8217))
    points.append(CLLocationCoordinate2D(latitude: 39.5337, longitude: -77.8354))
    points.append(CLLocationCoordinate2D(latitude: 39.5231, longitude: -77.8656))
    points.append(CLLocationCoordinate2D(latitude: 39.5591, longitude: -77.8848))
    points.append(CLLocationCoordinate2D(latitude: 39.6015, longitude: -77.8821))
    points.append(CLLocationCoordinate2D(latitude: 39.6078, longitude: -77.9974))
    points.append(CLLocationCoordinate2D(latitude: 39.6247, longitude: -78.0222))
    points.append(CLLocationCoordinate2D(latitude: 39.6924, longitude: -78.1430))
    points.append(CLLocationCoordinate2D(latitude: 39.6945, longitude: -78.1924))
    points.append(CLLocationCoordinate2D(latitude: 39.6839, longitude: -78.2062))
    points.append(CLLocationCoordinate2D(latitude: 39.6839, longitude: -78.2419))
    points.append(CLLocationCoordinate2D(latitude: 39.6586, longitude: -78.2281))
    points.append(CLLocationCoordinate2D(latitude: 39.6226, longitude: -78.2776))
    points.append(CLLocationCoordinate2D(latitude: 39.6438, longitude: -78.3517))
    points.append(CLLocationCoordinate2D(latitude: 39.6120, longitude: -78.3765))
    points.append(CLLocationCoordinate2D(latitude: 39.6036, longitude: -78.4067))
    points.append(CLLocationCoordinate2D(latitude: 39.5824, longitude: -78.4177))
    points.append(CLLocationCoordinate2D(latitude: 39.5750, longitude: -78.4245))
    points.append(CLLocationCoordinate2D(latitude: 39.5464, longitude: -78.4232))
    points.append(CLLocationCoordinate2D(latitude: 39.5146, longitude: -78.4698))
    points.append(CLLocationCoordinate2D(latitude: 39.5189, longitude: -78.5687))
    points.append(CLLocationCoordinate2D(latitude: 39.5337, longitude: -78.6676))
    points.append(CLLocationCoordinate2D(latitude: 39.5888, longitude: -78.7390))
    points.append(CLLocationCoordinate2D(latitude: 39.6015, longitude: -78.7720))
    points.append(CLLocationCoordinate2D(latitude: 39.6184, longitude: -78.7363))
    points.append(CLLocationCoordinate2D(latitude: 39.6438, longitude: -78.7775))
    points.append(CLLocationCoordinate2D(latitude: 39.6036, longitude: -78.7912))
    points.append(CLLocationCoordinate2D(latitude: 39.6036, longitude: -78.8187))
    points.append(CLLocationCoordinate2D(latitude: 39.5549, longitude: -78.8571))
    points.append(CLLocationCoordinate2D(latitude: 39.4913, longitude: -78.9203))
    points.append(CLLocationCoordinate2D(latitude: 39.4426, longitude: -78.9725))
    points.append(CLLocationCoordinate2D(latitude: 39.4834, longitude: -79.0542))
    points.append(CLLocationCoordinate2D(latitude: 39.4738, longitude: -79.0604))
    points.append(CLLocationCoordinate2D(latitude: 39.4553, longitude: -79.1043))
    points.append(CLLocationCoordinate2D(latitude: 39.3853, longitude: -79.1936))
    points.append(CLLocationCoordinate2D(latitude: 39.3449, longitude: -79.2705))
    points.append(CLLocationCoordinate2D(latitude: 39.3014, longitude: -79.3282))
    points.append(CLLocationCoordinate2D(latitude: 39.2535, longitude: -79.4044))
    points.append(CLLocationCoordinate2D(latitude: 39.2073, longitude: -79.4696))
    points.append(CLLocationCoordinate2D(latitude: 39.2051, longitude: -79.4861))
    points.append(CLLocationCoordinate2D(latitude: 39.2546, longitude: -79.4861))
    points.append(CLLocationCoordinate2D(latitude: 39.3444, longitude: -79.4854))
    points.append(CLLocationCoordinate2D(latitude: 39.3454, longitude: -79.4840))
    points.append(CLLocationCoordinate2D(latitude: 39.5316, longitude: -79.4833))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Maryland", abbreviation: "MD", polygon: poly)
}


func createMaine()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 45.3425, longitude: -71.0129))
    points.append(CLLocationCoordinate2D(latitude: 45.3328, longitude: -70.9525))
    points.append(CLLocationCoordinate2D(latitude: 45.2294, longitude: -70.8618))
    points.append(CLLocationCoordinate2D(latitude: 45.3917, longitude: -70.8247))
    points.append(CLLocationCoordinate2D(latitude: 45.4274, longitude: -70.7808))
    points.append(CLLocationCoordinate2D(latitude: 45.3830, longitude: -70.6380))
    points.append(CLLocationCoordinate2D(latitude: 45.5092, longitude: -70.7190))
    points.append(CLLocationCoordinate2D(latitude: 45.6544, longitude: -70.5721))
    points.append(CLLocationCoordinate2D(latitude: 45.7292, longitude: -70.3894))
    points.append(CLLocationCoordinate2D(latitude: 45.7924, longitude: -70.4169))
    points.append(CLLocationCoordinate2D(latitude: 45.9368, longitude: -70.2493))
    points.append(CLLocationCoordinate2D(latitude: 45.9597, longitude: -70.3098))
    points.append(CLLocationCoordinate2D(latitude: 46.0923, longitude: -70.2946))
    points.append(CLLocationCoordinate2D(latitude: 46.0989, longitude: -70.2589))
    points.append(CLLocationCoordinate2D(latitude: 46.1342, longitude: -70.2466))
    points.append(CLLocationCoordinate2D(latitude: 46.1903, longitude: -70.2905))
    points.append(CLLocationCoordinate2D(latitude: 46.2710, longitude: -70.2466))
    points.append(CLLocationCoordinate2D(latitude: 46.3270, longitude: -70.2040))
    points.append(CLLocationCoordinate2D(latitude: 46.4151, longitude: -70.0571))
    points.append(CLLocationCoordinate2D(latitude: 46.6956, longitude: -69.9994))
    points.append(CLLocationCoordinate2D(latitude: 47.4550, longitude: -69.2303))
    points.append(CLLocationCoordinate2D(latitude: 47.4132, longitude: -69.0381))
    points.append(CLLocationCoordinate2D(latitude: 47.2578, longitude: -69.0504))
    points.append(CLLocationCoordinate2D(latitude: 47.1748, longitude: -68.8843))
    points.append(CLLocationCoordinate2D(latitude: 47.2643, longitude: -68.6206))
    points.append(CLLocationCoordinate2D(latitude: 47.3546, longitude: -68.3350))
    points.append(CLLocationCoordinate2D(latitude: 47.3165, longitude: -68.1564))
    points.append(CLLocationCoordinate2D(latitude: 47.1038, longitude: -67.8804))
    points.append(CLLocationCoordinate2D(latitude: 47.0664, longitude: -67.7898))
    points.append(CLLocationCoordinate2D(latitude: 45.9359, longitude: -67.7802))
    points.append(CLLocationCoordinate2D(latitude: 45.9177, longitude: -67.7527))
    points.append(CLLocationCoordinate2D(latitude: 45.7599, longitude: -67.8090))
    points.append(CLLocationCoordinate2D(latitude: 45.6208, longitude: -67.6524))
    points.append(CLLocationCoordinate2D(latitude: 45.5987, longitude: -67.4533))
    points.append(CLLocationCoordinate2D(latitude: 45.5044, longitude: -67.4176))
    points.append(CLLocationCoordinate2D(latitude: 45.4823, longitude: -67.5014))
    points.append(CLLocationCoordinate2D(latitude: 45.3714, longitude: -67.4231))
    points.append(CLLocationCoordinate2D(latitude: 45.2768, longitude: -67.4863))
    points.append(CLLocationCoordinate2D(latitude: 45.1297, longitude: -67.3434))
    points.append(CLLocationCoordinate2D(latitude: 45.1830, longitude: -67.2487))
    points.append(CLLocationCoordinate2D(latitude: 45.1230, longitude: -67.1223))
    points.append(CLLocationCoordinate2D(latitude: 44.8315, longitude: -66.9672))
    points.append(CLLocationCoordinate2D(latitude: 44.7409, longitude: -66.8628))
    points.append(CLLocationCoordinate2D(latitude: 44.4945, longitude: -67.3105))
    points.append(CLLocationCoordinate2D(latitude: 44.3268, longitude: -67.9051))
    points.append(CLLocationCoordinate2D(latitude: 43.8702, longitude: -68.6673))
    points.append(CLLocationCoordinate2D(latitude: 43.7274, longitude: -68.8431))
    points.append(CLLocationCoordinate2D(latitude: 43.6639, longitude: -69.7137))
    points.append(CLLocationCoordinate2D(latitude: 43.5625, longitude: -70.0818))
    points.append(CLLocationCoordinate2D(latitude: 42.9222, longitude: -70.5583))
    points.append(CLLocationCoordinate2D(latitude: 43.0498, longitude: -70.6970))
    points.append(CLLocationCoordinate2D(latitude: 43.1000, longitude: -70.7671))
    points.append(CLLocationCoordinate2D(latitude: 43.1411, longitude: -70.8261))
    points.append(CLLocationCoordinate2D(latitude: 43.2272, longitude: -70.8083))
    points.append(CLLocationCoordinate2D(latitude: 43.2942, longitude: -70.9030))
    points.append(CLLocationCoordinate2D(latitude: 43.3621, longitude: -70.9813))
    points.append(CLLocationCoordinate2D(latitude: 43.5704, longitude: -70.9731))
    points.append(CLLocationCoordinate2D(latitude: 43.7364, longitude: -70.9840))
    points.append(CLLocationCoordinate2D(latitude: 44.3592, longitude: -71.0143))
    points.append(CLLocationCoordinate2D(latitude: 44.9230, longitude: -71.0527))
    points.append(CLLocationCoordinate2D(latitude: 45.3058, longitude: -71.0843))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Maine", abbreviation: "ME", polygon: poly)
}


func createMichigan()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 48.3033, longitude: -88.3713))
    points.append(CLLocationCoordinate2D(latitude: 48.0101, longitude: -87.6050))
    points.append(CLLocationCoordinate2D(latitude: 46.8902, longitude: -84.8584))
    points.append(CLLocationCoordinate2D(latitude: 46.6362, longitude: -84.7650))
    points.append(CLLocationCoordinate2D(latitude: 46.4606, longitude: -84.5563))
    points.append(CLLocationCoordinate2D(latitude: 46.4525, longitude: -84.4780))
    points.append(CLLocationCoordinate2D(latitude: 46.4894, longitude: -84.4450))
    points.append(CLLocationCoordinate2D(latitude: 46.5008, longitude: -84.4203))
    points.append(CLLocationCoordinate2D(latitude: 46.4989, longitude: -84.3956))
    points.append(CLLocationCoordinate2D(latitude: 46.5093, longitude: -84.3750))
    points.append(CLLocationCoordinate2D(latitude: 46.5069, longitude: -84.3386))
    points.append(CLLocationCoordinate2D(latitude: 46.4927, longitude: -84.2905))
    points.append(CLLocationCoordinate2D(latitude: 46.4951, longitude: -84.2651))
    points.append(CLLocationCoordinate2D(latitude: 46.5343, longitude: -84.2253))
    points.append(CLLocationCoordinate2D(latitude: 46.5404, longitude: -84.1951))
    points.append(CLLocationCoordinate2D(latitude: 46.5272, longitude: -84.1779))
    points.append(CLLocationCoordinate2D(latitude: 46.5348, longitude: -84.1347))
    points.append(CLLocationCoordinate2D(latitude: 46.5041, longitude: -84.1113))
    points.append(CLLocationCoordinate2D(latitude: 46.4189, longitude: -84.1457))
    points.append(CLLocationCoordinate2D(latitude: 46.3720, longitude: -84.1395))
    points.append(CLLocationCoordinate2D(latitude: 46.3218, longitude: -84.1058))
    points.append(CLLocationCoordinate2D(latitude: 46.3147, longitude: -84.1203))
    points.append(CLLocationCoordinate2D(latitude: 46.2672, longitude: -84.1148))
    points.append(CLLocationCoordinate2D(latitude: 46.2563, longitude: -84.0969))
    points.append(CLLocationCoordinate2D(latitude: 46.2411, longitude: -84.1093))
    points.append(CLLocationCoordinate2D(latitude: 46.2098, longitude: -84.0859))
    points.append(CLLocationCoordinate2D(latitude: 46.1879, longitude: -84.0777))
    points.append(CLLocationCoordinate2D(latitude: 46.1508, longitude: -84.0097))
    points.append(CLLocationCoordinate2D(latitude: 46.1180, longitude: -84.0070))
    points.append(CLLocationCoordinate2D(latitude: 46.1018, longitude: -83.9761))
    points.append(CLLocationCoordinate2D(latitude: 46.0570, longitude: -83.9555))
    points.append(CLLocationCoordinate2D(latitude: 46.0604, longitude: -83.9040))
    points.append(CLLocationCoordinate2D(latitude: 46.1185, longitude: -83.8264))
    points.append(CLLocationCoordinate2D(latitude: 46.1028, longitude: -83.7598))
    points.append(CLLocationCoordinate2D(latitude: 46.1218, longitude: -83.6547))
    points.append(CLLocationCoordinate2D(latitude: 46.1056, longitude: -83.5723))
    points.append(CLLocationCoordinate2D(latitude: 45.9993, longitude: -83.4343))
    points.append(CLLocationCoordinate2D(latitude: 45.8211, longitude: -83.5977))
    points.append(CLLocationCoordinate2D(latitude: 45.3396, longitude: -82.5197))
    points.append(CLLocationCoordinate2D(latitude: 43.5918, longitude: -82.1221))
    points.append(CLLocationCoordinate2D(latitude: 43.0112, longitude: -82.4119))
    points.append(CLLocationCoordinate2D(latitude: 42.9956, longitude: -82.4249))
    points.append(CLLocationCoordinate2D(latitude: 42.9579, longitude: -82.4236))
    points.append(CLLocationCoordinate2D(latitude: 42.9021, longitude: -82.4648))
    points.append(CLLocationCoordinate2D(latitude: 42.8543, longitude: -82.4689))
    points.append(CLLocationCoordinate2D(latitude: 42.8100, longitude: -82.4826))
    points.append(CLLocationCoordinate2D(latitude: 42.7863, longitude: -82.4723))
    points.append(CLLocationCoordinate2D(latitude: 42.7339, longitude: -82.4847))
    points.append(CLLocationCoordinate2D(latitude: 42.6855, longitude: -82.5032))
    points.append(CLLocationCoordinate2D(latitude: 42.6380, longitude: -82.5108))
    points.append(CLLocationCoordinate2D(latitude: 42.6036, longitude: -82.5307))
    points.append(CLLocationCoordinate2D(latitude: 42.5672, longitude: -82.5774))
    points.append(CLLocationCoordinate2D(latitude: 42.5490, longitude: -82.5993))
    points.append(CLLocationCoordinate2D(latitude: 42.5521, longitude: -82.6501))
    points.append(CLLocationCoordinate2D(latitude: 42.5354, longitude: -82.6680))
    points.append(CLLocationCoordinate2D(latitude: 42.4746, longitude: -82.7257))
    points.append(CLLocationCoordinate2D(latitude: 42.4726, longitude: -82.7250))
    points.append(CLLocationCoordinate2D(latitude: 42.3738, longitude: -82.8280))
    points.append(CLLocationCoordinate2D(latitude: 42.3469, longitude: -82.9440))
    points.append(CLLocationCoordinate2D(latitude: 42.3382, longitude: -82.9550))
    points.append(CLLocationCoordinate2D(latitude: 42.3098, longitude: -83.0779))
    points.append(CLLocationCoordinate2D(latitude: 42.2392, longitude: -83.1294))
    points.append(CLLocationCoordinate2D(latitude: 42.1741, longitude: -83.1342))
    points.append(CLLocationCoordinate2D(latitude: 42.1267, longitude: -83.1212))
    points.append(CLLocationCoordinate2D(latitude: 42.0411, longitude: -83.1493))
    points.append(CLLocationCoordinate2D(latitude: 41.9600, longitude: -83.1116))
    points.append(CLLocationCoordinate2D(latitude: 41.7344, longitude: -83.4164))
    points.append(CLLocationCoordinate2D(latitude: 41.7211, longitude: -83.8724))
    points.append(CLLocationCoordinate2D(latitude: 41.7057, longitude: -84.3736))
    points.append(CLLocationCoordinate2D(latitude: 41.6965, longitude: -84.8062))
    points.append(CLLocationCoordinate2D(latitude: 41.7611, longitude: -84.8076))
    points.append(CLLocationCoordinate2D(latitude: 41.7621, longitude: -87.2067))
    points.append(CLLocationCoordinate2D(latitude: 42.4934, longitude: -87.0241))
    points.append(CLLocationCoordinate2D(latitude: 43.3771, longitude: -87.1477))
    points.append(CLLocationCoordinate2D(latitude: 43.7056, longitude: -87.1216))
    points.append(CLLocationCoordinate2D(latitude: 43.9958, longitude: -87.0474))
    points.append(CLLocationCoordinate2D(latitude: 44.1674, longitude: -86.9939))
    points.append(CLLocationCoordinate2D(latitude: 44.4720, longitude: -86.8662))
    points.append(CLLocationCoordinate2D(latitude: 44.8841, longitude: -86.6849))
    points.append(CLLocationCoordinate2D(latitude: 45.0813, longitude: -86.5009))
    points.append(CLLocationCoordinate2D(latitude: 45.2353, longitude: -86.2495))
    points.append(CLLocationCoordinate2D(latitude: 45.4438, longitude: -86.7563))
    points.append(CLLocationCoordinate2D(latitude: 45.4438, longitude: -87.0996))
    points.append(CLLocationCoordinate2D(latitude: 45.3772, longitude: -87.1518))
    points.append(CLLocationCoordinate2D(latitude: 45.3502, longitude: -87.1710))
    points.append(CLLocationCoordinate2D(latitude: 45.2401, longitude: -87.3166))
    points.append(CLLocationCoordinate2D(latitude: 45.2024, longitude: -87.4059))
    points.append(CLLocationCoordinate2D(latitude: 45.0774, longitude: -87.4416))
    points.append(CLLocationCoordinate2D(latitude: 45.0910, longitude: -87.5912))
    points.append(CLLocationCoordinate2D(latitude: 45.1036, longitude: -87.6407))
    points.append(CLLocationCoordinate2D(latitude: 45.2207, longitude: -87.6970))
    points.append(CLLocationCoordinate2D(latitude: 45.3367, longitude: -87.6476))
    points.append(CLLocationCoordinate2D(latitude: 45.3878, longitude: -87.6984))
    points.append(CLLocationCoordinate2D(latitude: 45.3425, longitude: -87.8494))
    points.append(CLLocationCoordinate2D(latitude: 45.5025, longitude: -87.7959))
    points.append(CLLocationCoordinate2D(latitude: 45.6726, longitude: -87.7890))
    points.append(CLLocationCoordinate2D(latitude: 45.7570, longitude: -87.9318))
    points.append(CLLocationCoordinate2D(latitude: 45.7953, longitude: -87.9922))
    points.append(CLLocationCoordinate2D(latitude: 45.8058, longitude: -88.1186))
    points.append(CLLocationCoordinate2D(latitude: 45.8585, longitude: -88.0870))
    points.append(CLLocationCoordinate2D(latitude: 45.9531, longitude: -88.1955))
    points.append(CLLocationCoordinate2D(latitude: 45.9722, longitude: -88.3438))
    points.append(CLLocationCoordinate2D(latitude: 45.9836, longitude: -88.3891))
    points.append(CLLocationCoordinate2D(latitude: 46.0113, longitude: -88.5457))
    points.append(CLLocationCoordinate2D(latitude: 45.9970, longitude: -88.7022))
    points.append(CLLocationCoordinate2D(latitude: 46.0227, longitude: -88.8135))
    points.append(CLLocationCoordinate2D(latitude: 46.0418, longitude: -88.8547))
    points.append(CLLocationCoordinate2D(latitude: 46.1408, longitude: -89.0936))
    points.append(CLLocationCoordinate2D(latitude: 46.3384, longitude: -90.1222))
    points.append(CLLocationCoordinate2D(latitude: 46.5692, longitude: -90.4175))
    points.append(CLLocationCoordinate2D(latitude: 46.9034, longitude: -90.2019))
    points.append(CLLocationCoordinate2D(latitude: 47.2913, longitude: -89.9547))
    points.append(CLLocationCoordinate2D(latitude: 48.0129, longitude: -89.4946))
    points.append(CLLocationCoordinate2D(latitude: 47.9743, longitude: -89.3381))
    points.append(CLLocationCoordinate2D(latitude: 48.2448, longitude: -88.6761))
    points.append(CLLocationCoordinate2D(latitude: 48.3042, longitude: -88.3726))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Michigan", abbreviation: "MI", polygon: poly)
}


func createMinnesota()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 49.0000, longitude: -97.2304))
    points.append(CLLocationCoordinate2D(latitude: 48.9991, longitude: -95.1553))
    points.append(CLLocationCoordinate2D(latitude: 49.3877, longitude: -95.1553))
    points.append(CLLocationCoordinate2D(latitude: 49.3681, longitude: -95.1196))
    points.append(CLLocationCoordinate2D(latitude: 49.3538, longitude: -95.0400))
    points.append(CLLocationCoordinate2D(latitude: 49.3815, longitude: -94.9631))
    points.append(CLLocationCoordinate2D(latitude: 49.3189, longitude: -94.8175))
    points.append(CLLocationCoordinate2D(latitude: 49.1889, longitude: -94.7955))
    points.append(CLLocationCoordinate2D(latitude: 49.0955, longitude: -94.7488))
    points.append(CLLocationCoordinate2D(latitude: 48.8756, longitude: -94.6788))
    points.append(CLLocationCoordinate2D(latitude: 48.7861, longitude: -94.6925))
    points.append(CLLocationCoordinate2D(latitude: 48.6982, longitude: -94.4467))
    points.append(CLLocationCoordinate2D(latitude: 48.7046, longitude: -94.2792))
    points.append(CLLocationCoordinate2D(latitude: 48.6547, longitude: -94.2531))
    points.append(CLLocationCoordinate2D(latitude: 48.6284, longitude: -93.8356))
    points.append(CLLocationCoordinate2D(latitude: 48.5166, longitude: -93.8013))
    points.append(CLLocationCoordinate2D(latitude: 48.5439, longitude: -93.4621))
    points.append(CLLocationCoordinate2D(latitude: 48.5884, longitude: -93.4648))
    points.append(CLLocationCoordinate2D(latitude: 48.6393, longitude: -93.2066))
    points.append(CLLocationCoordinate2D(latitude: 48.5403, longitude: -92.6395))
    points.append(CLLocationCoordinate2D(latitude: 48.4984, longitude: -92.6340))
    points.append(CLLocationCoordinate2D(latitude: 48.4611, longitude: -92.7122))
    points.append(CLLocationCoordinate2D(latitude: 48.4474, longitude: -92.5104))
    points.append(CLLocationCoordinate2D(latitude: 48.3854, longitude: -92.4609))
    points.append(CLLocationCoordinate2D(latitude: 48.2228, longitude: -92.3717))
    points.append(CLLocationCoordinate2D(latitude: 48.2475, longitude: -92.2742))
    points.append(CLLocationCoordinate2D(latitude: 48.3307, longitude: -92.2975))
    points.append(CLLocationCoordinate2D(latitude: 48.3599, longitude: -92.1561))
    points.append(CLLocationCoordinate2D(latitude: 48.3544, longitude: -92.0531))
    points.append(CLLocationCoordinate2D(latitude: 48.3188, longitude: -92.0078))
    points.append(CLLocationCoordinate2D(latitude: 48.2494, longitude: -91.9844))
    points.append(CLLocationCoordinate2D(latitude: 48.1963, longitude: -91.7166))
    points.append(CLLocationCoordinate2D(latitude: 48.1166, longitude: -91.7070))
    points.append(CLLocationCoordinate2D(latitude: 48.0505, longitude: -91.5738))
    points.append(CLLocationCoordinate2D(latitude: 48.0726, longitude: -91.3252))
    points.append(CLLocationCoordinate2D(latitude: 48.2174, longitude: -90.9792))
    points.append(CLLocationCoordinate2D(latitude: 48.2402, longitude: -90.8405))
    points.append(CLLocationCoordinate2D(latitude: 48.1588, longitude: -90.7759))
    points.append(CLLocationCoordinate2D(latitude: 48.0928, longitude: -90.7471))
    points.append(CLLocationCoordinate2D(latitude: 48.1175, longitude: -90.5644))
    points.append(CLLocationCoordinate2D(latitude: 48.1074, longitude: -90.4834))
    points.append(CLLocationCoordinate2D(latitude: 48.0955, longitude: -90.3502))
    points.append(CLLocationCoordinate2D(latitude: 48.1074, longitude: -90.1758))
    points.append(CLLocationCoordinate2D(latitude: 48.0827, longitude: -90.0261))
    points.append(CLLocationCoordinate2D(latitude: 48.0285, longitude: -89.9931))
    points.append(CLLocationCoordinate2D(latitude: 48.0193, longitude: -89.7583))
    points.append(CLLocationCoordinate2D(latitude: 48.0120, longitude: -89.4919))
    points.append(CLLocationCoordinate2D(latitude: 47.2885, longitude: -89.9615))
    points.append(CLLocationCoordinate2D(latitude: 47.3072, longitude: -90.6564))
    points.append(CLLocationCoordinate2D(latitude: 46.5957, longitude: -92.2879))
    points.append(CLLocationCoordinate2D(latitude: 46.0789, longitude: -92.2934))
    points.append(CLLocationCoordinate2D(latitude: 46.0151, longitude: -92.3566))
    points.append(CLLocationCoordinate2D(latitude: 45.9760, longitude: -92.5159))
    points.append(CLLocationCoordinate2D(latitude: 45.8307, longitude: -92.7356))
    points.append(CLLocationCoordinate2D(latitude: 45.6083, longitude: -92.8482))
    points.append(CLLocationCoordinate2D(latitude: 45.4505, longitude: -92.6532))
    points.append(CLLocationCoordinate2D(latitude: 45.3135, longitude: -92.7081))
    points.append(CLLocationCoordinate2D(latitude: 44.7877, longitude: -92.7658))
    points.append(CLLocationCoordinate2D(latitude: 44.6501, longitude: -92.6367))
    points.append(CLLocationCoordinate2D(latitude: 44.5513, longitude: -92.3360))
    points.append(CLLocationCoordinate2D(latitude: 44.4357, longitude: -92.2083))
    points.append(CLLocationCoordinate2D(latitude: 44.3710, longitude: -91.9556))
    points.append(CLLocationCoordinate2D(latitude: 44.2806, longitude: -91.8951))
    points.append(CLLocationCoordinate2D(latitude: 44.1113, longitude: -91.7084))
    points.append(CLLocationCoordinate2D(latitude: 43.9651, longitude: -91.4914))
    points.append(CLLocationCoordinate2D(latitude: 43.8226, longitude: -91.3101))
    points.append(CLLocationCoordinate2D(latitude: 43.5017, longitude: -91.2195))
    points.append(CLLocationCoordinate2D(latitude: 43.5008, longitude: -96.4517))
    points.append(CLLocationCoordinate2D(latitude: 43.5008, longitude: -96.4531))
    points.append(CLLocationCoordinate2D(latitude: 45.2961, longitude: -96.4558))
    points.append(CLLocationCoordinate2D(latitude: 45.3676, longitude: -96.5918))
    points.append(CLLocationCoordinate2D(latitude: 45.4601, longitude: -96.7456))
    points.append(CLLocationCoordinate2D(latitude: 45.6169, longitude: -96.8486))
    points.append(CLLocationCoordinate2D(latitude: 45.8173, longitude: -96.5891))
    points.append(CLLocationCoordinate2D(latitude: 45.9340, longitude: -96.5671))
    points.append(CLLocationCoordinate2D(latitude: 46.0189, longitude: -96.5767))
    points.append(CLLocationCoordinate2D(latitude: 46.2786, longitude: -96.6028))
    points.append(CLLocationCoordinate2D(latitude: 46.5135, longitude: -96.7126))
    points.append(CLLocationCoordinate2D(latitude: 46.6702, longitude: -96.8005))
    points.append(CLLocationCoordinate2D(latitude: 46.9329, longitude: -96.7648))
    points.append(CLLocationCoordinate2D(latitude: 47.2345, longitude: -96.8335))
    points.append(CLLocationCoordinate2D(latitude: 47.5821, longitude: -96.8582))
    points.append(CLLocationCoordinate2D(latitude: 47.7098, longitude: -96.9434))
    points.append(CLLocationCoordinate2D(latitude: 47.9633, longitude: -97.0587))
    points.append(CLLocationCoordinate2D(latitude: 48.1578, longitude: -97.1397))
    points.append(CLLocationCoordinate2D(latitude: 48.2832, longitude: -97.1411))
    points.append(CLLocationCoordinate2D(latitude: 48.5539, longitude: -97.1645))
    points.append(CLLocationCoordinate2D(latitude: 48.6683, longitude: -97.1040))
    points.append(CLLocationCoordinate2D(latitude: 48.7806, longitude: -97.1576))
    points.append(CLLocationCoordinate2D(latitude: 48.8647, longitude: -97.1851))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Minnesota", abbreviation: "MN", polygon: poly)
}


func createMissouri()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 40.6181, longitude: -91.7468))
    points.append(CLLocationCoordinate2D(latitude: 40.5597, longitude: -91.6809))
    points.append(CLLocationCoordinate2D(latitude: 40.5472, longitude: -91.6260))
    points.append(CLLocationCoordinate2D(latitude: 40.4658, longitude: -91.5463))
    points.append(CLLocationCoordinate2D(latitude: 40.3675, longitude: -91.4337))
    points.append(CLLocationCoordinate2D(latitude: 40.1663, longitude: -91.5161))
    points.append(CLLocationCoordinate2D(latitude: 39.9866, longitude: -91.4900))
    points.append(CLLocationCoordinate2D(latitude: 39.8634, longitude: -91.4447))
    points.append(CLLocationCoordinate2D(latitude: 39.7283, longitude: -91.3623))
    points.append(CLLocationCoordinate2D(latitude: 39.6861, longitude: -91.3074))
    points.append(CLLocationCoordinate2D(latitude: 39.5464, longitude: -91.1096))
    points.append(CLLocationCoordinate2D(latitude: 39.4022, longitude: -90.9558))
    points.append(CLLocationCoordinate2D(latitude: 39.2450, longitude: -90.7306))
    points.append(CLLocationCoordinate2D(latitude: 38.9893, longitude: -90.6812))
    points.append(CLLocationCoordinate2D(latitude: 38.8697, longitude: -90.5878))
    points.append(CLLocationCoordinate2D(latitude: 38.9722, longitude: -90.4504))
    points.append(CLLocationCoordinate2D(latitude: 38.8868, longitude: -90.1813))
    points.append(CLLocationCoordinate2D(latitude: 38.8269, longitude: -90.1154))
    points.append(CLLocationCoordinate2D(latitude: 38.7155, longitude: -90.1978))
    points.append(CLLocationCoordinate2D(latitude: 38.4149, longitude: -90.3186))
    points.append(CLLocationCoordinate2D(latitude: 38.2597, longitude: -90.3790))
    points.append(CLLocationCoordinate2D(latitude: 37.9572, longitude: -89.9341))
    points.append(CLLocationCoordinate2D(latitude: 37.6925, longitude: -89.5331))
    points.append(CLLocationCoordinate2D(latitude: 37.4007, longitude: -89.4287))
    points.append(CLLocationCoordinate2D(latitude: 37.2784, longitude: -89.5386))
    points.append(CLLocationCoordinate2D(latitude: 37.1734, longitude: -89.4452))
    points.append(CLLocationCoordinate2D(latitude: 37.0859, longitude: -89.3793))
    points.append(CLLocationCoordinate2D(latitude: 36.9938, longitude: -89.2859))
    points.append(CLLocationCoordinate2D(latitude: 37.0311, longitude: -89.1829))
    points.append(CLLocationCoordinate2D(latitude: 36.9839, longitude: -89.1403))
    points.append(CLLocationCoordinate2D(latitude: 36.9466, longitude: -89.1005))
    points.append(CLLocationCoordinate2D(latitude: 36.7884, longitude: -89.1788))
    points.append(CLLocationCoordinate2D(latitude: 36.6288, longitude: -89.2035))
    points.append(CLLocationCoordinate2D(latitude: 36.5449, longitude: -89.2516))
    points.append(CLLocationCoordinate2D(latitude: 36.6188, longitude: -89.3532))
    points.append(CLLocationCoordinate2D(latitude: 36.5538, longitude: -89.4397))
    points.append(CLLocationCoordinate2D(latitude: 36.4942, longitude: -89.5358))
    points.append(CLLocationCoordinate2D(latitude: 36.3406, longitude: -89.5180))
    points.append(CLLocationCoordinate2D(latitude: 36.3494, longitude: -89.5784))
    points.append(CLLocationCoordinate2D(latitude: 36.2996, longitude: -89.6210))
    points.append(CLLocationCoordinate2D(latitude: 36.2531, longitude: -89.5331))
    points.append(CLLocationCoordinate2D(latitude: 36.2343, longitude: -89.7006))
    points.append(CLLocationCoordinate2D(latitude: 36.1856, longitude: -89.6484))
    points.append(CLLocationCoordinate2D(latitude: 36.1279, longitude: -89.5894))
    points.append(CLLocationCoordinate2D(latitude: 36.0902, longitude: -89.6759))
    points.append(CLLocationCoordinate2D(latitude: 36.0009, longitude: -89.7068))
    points.append(CLLocationCoordinate2D(latitude: 36.0004, longitude: -89.7329))
    points.append(CLLocationCoordinate2D(latitude: 35.9958, longitude: -90.3735))
    points.append(CLLocationCoordinate2D(latitude: 36.1223, longitude: -90.2747))
    points.append(CLLocationCoordinate2D(latitude: 36.2886, longitude: -90.0934))
    points.append(CLLocationCoordinate2D(latitude: 36.3903, longitude: -90.0769))
    points.append(CLLocationCoordinate2D(latitude: 36.4213, longitude: -90.1538))
    points.append(CLLocationCoordinate2D(latitude: 36.5008, longitude: -90.1538))
    points.append(CLLocationCoordinate2D(latitude: 36.4994, longitude: -94.6179))
    points.append(CLLocationCoordinate2D(latitude: 38.9722, longitude: -94.6143))
    points.append(CLLocationCoordinate2D(latitude: 39.1982, longitude: -94.6143))
    points.append(CLLocationCoordinate2D(latitude: 39.1684, longitude: -94.7241))
    points.append(CLLocationCoordinate2D(latitude: 39.2790, longitude: -94.8834))
    points.append(CLLocationCoordinate2D(latitude: 39.5612, longitude: -95.1086))
    points.append(CLLocationCoordinate2D(latitude: 39.7283, longitude: -94.8834))
    points.append(CLLocationCoordinate2D(latitude: 39.8296, longitude: -94.8944))
    points.append(CLLocationCoordinate2D(latitude: 39.8845, longitude: -94.9384))
    points.append(CLLocationCoordinate2D(latitude: 39.8971, longitude: -95.0153))
    points.append(CLLocationCoordinate2D(latitude: 39.8718, longitude: -95.0922))
    points.append(CLLocationCoordinate2D(latitude: 39.9992, longitude: -95.3091))
    points.append(CLLocationCoordinate2D(latitude: 40.2397, longitude: -95.4808))
    points.append(CLLocationCoordinate2D(latitude: 40.3130, longitude: -95.6470))
    points.append(CLLocationCoordinate2D(latitude: 40.4302, longitude: -95.6689))
    points.append(CLLocationCoordinate2D(latitude: 40.5837, longitude: -95.7610))
    points.append(CLLocationCoordinate2D(latitude: 40.5795, longitude: -94.3135))
    points.append(CLLocationCoordinate2D(latitude: 40.5962, longitude: -92.5818))
    points.append(CLLocationCoordinate2D(latitude: 40.6140, longitude: -91.7358))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Missouri", abbreviation: "MO", polygon: poly)
}


func createMississippi()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 34.9955, longitude: -90.3090))
    points.append(CLLocationCoordinate2D(latitude: 34.9955, longitude: -88.1998))
    points.append(CLLocationCoordinate2D(latitude: 34.9107, longitude: -88.1461))
    points.append(CLLocationCoordinate2D(latitude: 34.8938, longitude: -88.1021))
    points.append(CLLocationCoordinate2D(latitude: 31.8939, longitude: -88.4743))
    points.append(CLLocationCoordinate2D(latitude: 30.1546, longitude: -88.3864))
    points.append(CLLocationCoordinate2D(latitude: 30.1539, longitude: -89.0744))
    points.append(CLLocationCoordinate2D(latitude: 30.2118, longitude: -89.1832))
    points.append(CLLocationCoordinate2D(latitude: 30.1813, longitude: -89.2644))
    points.append(CLLocationCoordinate2D(latitude: 30.1580, longitude: -89.5066))
    points.append(CLLocationCoordinate2D(latitude: 30.1796, longitude: -89.5757))
    points.append(CLLocationCoordinate2D(latitude: 30.3326, longitude: -89.6457))
    points.append(CLLocationCoordinate2D(latitude: 30.5232, longitude: -89.7748))
    points.append(CLLocationCoordinate2D(latitude: 30.6663, longitude: -89.8531))
    points.append(CLLocationCoordinate2D(latitude: 31.0015, longitude: -89.7360))
    points.append(CLLocationCoordinate2D(latitude: 30.9992, longitude: -91.6359))
    points.append(CLLocationCoordinate2D(latitude: 31.0341, longitude: -91.5601))
    points.append(CLLocationCoordinate2D(latitude: 31.1106, longitude: -91.6273))
    points.append(CLLocationCoordinate2D(latitude: 31.1658, longitude: -91.5916))
    points.append(CLLocationCoordinate2D(latitude: 31.2304, longitude: -91.6589))
    points.append(CLLocationCoordinate2D(latitude: 31.2656, longitude: -91.6452))
    points.append(CLLocationCoordinate2D(latitude: 31.2609, longitude: -91.5436))
    points.append(CLLocationCoordinate2D(latitude: 31.3724, longitude: -91.5271))
    points.append(CLLocationCoordinate2D(latitude: 31.4099, longitude: -91.5161))
    points.append(CLLocationCoordinate2D(latitude: 31.5071, longitude: -91.5120))
    points.append(CLLocationCoordinate2D(latitude: 31.5692, longitude: -91.4502))
    points.append(CLLocationCoordinate2D(latitude: 31.6230, longitude: -91.5147))
    points.append(CLLocationCoordinate2D(latitude: 31.6253, longitude: -91.3966))
    points.append(CLLocationCoordinate2D(latitude: 31.7936, longitude: -91.3513))
    points.append(CLLocationCoordinate2D(latitude: 31.8589, longitude: -91.2744))
    points.append(CLLocationCoordinate2D(latitude: 31.9755, longitude: -91.1673))
    points.append(CLLocationCoordinate2D(latitude: 32.0267, longitude: -91.0767))
    points.append(CLLocationCoordinate2D(latitude: 32.1198, longitude: -91.0767))
    points.append(CLLocationCoordinate2D(latitude: 32.1942, longitude: -91.0437))
    points.append(CLLocationCoordinate2D(latitude: 32.2221, longitude: -91.0107))
    points.append(CLLocationCoordinate2D(latitude: 32.3150, longitude: -90.9132))
    points.append(CLLocationCoordinate2D(latitude: 32.3742, longitude: -91.0313))
    points.append(CLLocationCoordinate2D(latitude: 32.4263, longitude: -91.0217))
    points.append(CLLocationCoordinate2D(latitude: 32.4634, longitude: -91.0986))
    points.append(CLLocationCoordinate2D(latitude: 32.6070, longitude: -91.0080))
    points.append(CLLocationCoordinate2D(latitude: 32.5746, longitude: -91.1096))
    points.append(CLLocationCoordinate2D(latitude: 32.6394, longitude: -91.1536))
    points.append(CLLocationCoordinate2D(latitude: 32.7226, longitude: -91.1426))
    points.append(CLLocationCoordinate2D(latitude: 32.7873, longitude: -91.1426))
    points.append(CLLocationCoordinate2D(latitude: 32.8519, longitude: -91.1536))
    points.append(CLLocationCoordinate2D(latitude: 32.8796, longitude: -91.1206))
    points.append(CLLocationCoordinate2D(latitude: 32.9257, longitude: -91.2195))
    points.append(CLLocationCoordinate2D(latitude: 32.9995, longitude: -91.2085))
    points.append(CLLocationCoordinate2D(latitude: 33.0036, longitude: -91.1659))
    points.append(CLLocationCoordinate2D(latitude: 33.1192, longitude: -91.2016))
    points.append(CLLocationCoordinate2D(latitude: 33.1835, longitude: -91.1041))
    points.append(CLLocationCoordinate2D(latitude: 33.3397, longitude: -91.1536))
    points.append(CLLocationCoordinate2D(latitude: 33.4223, longitude: -91.1646))
    points.append(CLLocationCoordinate2D(latitude: 33.4337, longitude: -91.2291))
    points.append(CLLocationCoordinate2D(latitude: 33.5414, longitude: -91.2524))
    points.append(CLLocationCoordinate2D(latitude: 33.6135, longitude: -91.1838))
    points.append(CLLocationCoordinate2D(latitude: 33.6878, longitude: -91.2524))
    points.append(CLLocationCoordinate2D(latitude: 33.6969, longitude: -91.1261))
    points.append(CLLocationCoordinate2D(latitude: 33.7883, longitude: -91.1426))
    points.append(CLLocationCoordinate2D(latitude: 33.7700, longitude: -91.0437))
    points.append(CLLocationCoordinate2D(latitude: 33.8339, longitude: -91.0327))
    points.append(CLLocationCoordinate2D(latitude: 33.8795, longitude: -91.0657))
    points.append(CLLocationCoordinate2D(latitude: 33.9434, longitude: -91.0876))
    points.append(CLLocationCoordinate2D(latitude: 33.9889, longitude: -90.9998))
    points.append(CLLocationCoordinate2D(latitude: 34.0253, longitude: -90.9229))
    points.append(CLLocationCoordinate2D(latitude: 34.0891, longitude: -90.9009))
    points.append(CLLocationCoordinate2D(latitude: 34.1345, longitude: -90.9668))
    points.append(CLLocationCoordinate2D(latitude: 34.1709, longitude: -90.9119))
    points.append(CLLocationCoordinate2D(latitude: 34.1345, longitude: -90.8501))
    points.append(CLLocationCoordinate2D(latitude: 34.2277, longitude: -90.9338))
    points.append(CLLocationCoordinate2D(latitude: 34.2833, longitude: -90.8267))
    points.append(CLLocationCoordinate2D(latitude: 34.3434, longitude: -90.6921))
    points.append(CLLocationCoordinate2D(latitude: 34.3774, longitude: -90.6509))
    points.append(CLLocationCoordinate2D(latitude: 34.3978, longitude: -90.6152))
    points.append(CLLocationCoordinate2D(latitude: 34.4432, longitude: -90.5589))
    points.append(CLLocationCoordinate2D(latitude: 34.5179, longitude: -90.5740))
    points.append(CLLocationCoordinate2D(latitude: 34.5880, longitude: -90.5823))
    points.append(CLLocationCoordinate2D(latitude: 34.7506, longitude: -90.5356))
    points.append(CLLocationCoordinate2D(latitude: 34.7913, longitude: -90.5136))
    points.append(CLLocationCoordinate2D(latitude: 34.8780, longitude: -90.4532))
    points.append(CLLocationCoordinate2D(latitude: 34.9329, longitude: -90.2441))
    points.append(CLLocationCoordinate2D(latitude: 34.8702, longitude: -90.2911))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Mississippi", abbreviation: "MS", polygon: poly)
}


func createMontana()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 49.0007, longitude: -116.0492))
    points.append(CLLocationCoordinate2D(latitude: 48.9998, longitude: -104.0488))
    points.append(CLLocationCoordinate2D(latitude: 45.9445, longitude: -104.0446))
    points.append(CLLocationCoordinate2D(latitude: 44.9976, longitude: -104.0398))
    points.append(CLLocationCoordinate2D(latitude: 44.9971, longitude: -104.0577))
    points.append(CLLocationCoordinate2D(latitude: 45.0009, longitude: -105.9130))
    points.append(CLLocationCoordinate2D(latitude: 44.9936, longitude: -105.9281))
    points.append(CLLocationCoordinate2D(latitude: 45.0010, longitude: -111.0546))
    points.append(CLLocationCoordinate2D(latitude: 44.4742, longitude: -111.0491))
    points.append(CLLocationCoordinate2D(latitude: 44.7311, longitude: -111.3684))
    points.append(CLLocationCoordinate2D(latitude: 44.6198, longitude: -111.5071))
    points.append(CLLocationCoordinate2D(latitude: 44.5386, longitude: -111.4673))
    points.append(CLLocationCoordinate2D(latitude: 44.5151, longitude: -111.8285))
    points.append(CLLocationCoordinate2D(latitude: 44.5592, longitude: -111.8848))
    points.append(CLLocationCoordinate2D(latitude: 44.5229, longitude: -112.1127))
    points.append(CLLocationCoordinate2D(latitude: 44.5367, longitude: -112.3270))
    points.append(CLLocationCoordinate2D(latitude: 44.4475, longitude: -112.3901))
    points.append(CLLocationCoordinate2D(latitude: 44.4896, longitude: -112.7293))
    points.append(CLLocationCoordinate2D(latitude: 44.4181, longitude: -112.8296))
    points.append(CLLocationCoordinate2D(latitude: 44.3563, longitude: -112.8529))
    points.append(CLLocationCoordinate2D(latitude: 44.4857, longitude: -113.0205))
    points.append(CLLocationCoordinate2D(latitude: 44.5905, longitude: -113.0713))
    points.append(CLLocationCoordinate2D(latitude: 44.7389, longitude: -113.1152))
    points.append(CLLocationCoordinate2D(latitude: 44.8091, longitude: -113.2471))
    points.append(CLLocationCoordinate2D(latitude: 44.7887, longitude: -113.3459))
    points.append(CLLocationCoordinate2D(latitude: 44.9386, longitude: -113.4970))
    points.append(CLLocationCoordinate2D(latitude: 45.0269, longitude: -113.4229))
    points.append(CLLocationCoordinate2D(latitude: 45.2749, longitude: -113.7085))
    points.append(CLLocationCoordinate2D(latitude: 45.4447, longitude: -113.7964))
    points.append(CLLocationCoordinate2D(latitude: 45.6140, longitude: -113.8403))
    points.append(CLLocationCoordinate2D(latitude: 45.6908, longitude: -113.9722))
    points.append(CLLocationCoordinate2D(latitude: 45.5631, longitude: -114.1315))
    points.append(CLLocationCoordinate2D(latitude: 45.5525, longitude: -114.2358))
    points.append(CLLocationCoordinate2D(latitude: 45.4592, longitude: -114.3347))
    points.append(CLLocationCoordinate2D(latitude: 45.5439, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 45.5583, longitude: -114.5668))
    points.append(CLLocationCoordinate2D(latitude: 45.6755, longitude: -114.5215))
    points.append(CLLocationCoordinate2D(latitude: 45.7733, longitude: -114.5641))
    points.append(CLLocationCoordinate2D(latitude: 45.8613, longitude: -114.4391))
    points.append(CLLocationCoordinate2D(latitude: 45.9989, longitude: -114.4817))
    points.append(CLLocationCoordinate2D(latitude: 46.1237, longitude: -114.5132))
    points.append(CLLocationCoordinate2D(latitude: 46.2577, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 46.3441, longitude: -114.4171))
    points.append(CLLocationCoordinate2D(latitude: 46.4530, longitude: -114.3896))
    points.append(CLLocationCoordinate2D(latitude: 46.5069, longitude: -114.3484))
    points.append(CLLocationCoordinate2D(latitude: 46.6504, longitude: -114.3279))
    points.append(CLLocationCoordinate2D(latitude: 46.6334, longitude: -114.4652))
    points.append(CLLocationCoordinate2D(latitude: 46.6362, longitude: -114.5929))
    points.append(CLLocationCoordinate2D(latitude: 46.7003, longitude: -114.7659))
    points.append(CLLocationCoordinate2D(latitude: 46.8423, longitude: -114.9307))
    points.append(CLLocationCoordinate2D(latitude: 47.0402, longitude: -115.1147))
    points.append(CLLocationCoordinate2D(latitude: 47.1888, longitude: -115.2933))
    points.append(CLLocationCoordinate2D(latitude: 47.2569, longitude: -115.3290))
    points.append(CLLocationCoordinate2D(latitude: 47.3025, longitude: -115.5267))
    points.append(CLLocationCoordinate2D(latitude: 47.4253, longitude: -115.7547))
    points.append(CLLocationCoordinate2D(latitude: 47.5487, longitude: -115.7533))
    points.append(CLLocationCoordinate2D(latitude: 47.5793, longitude: -115.6956))
    points.append(CLLocationCoordinate2D(latitude: 47.9771, longitude: -116.0458))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Montana", abbreviation: "MT", polygon: poly)
}


func createNorthCarolina()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.5882, longitude: -81.6773))
    points.append(CLLocationCoordinate2D(latitude: 36.5659, longitude: -80.7234))
    points.append(CLLocationCoordinate2D(latitude: 36.5438, longitude: -80.2977))
    points.append(CLLocationCoordinate2D(latitude: 36.5449, longitude: -79.6729))
    points.append(CLLocationCoordinate2D(latitude: 36.5449, longitude: -77.2559))
    points.append(CLLocationCoordinate2D(latitude: 36.5505, longitude: -75.7562))
    points.append(CLLocationCoordinate2D(latitude: 36.3129, longitude: -75.7068))
    points.append(CLLocationCoordinate2D(latitude: 35.7131, longitude: -75.4129))
    points.append(CLLocationCoordinate2D(latitude: 35.2041, longitude: -75.4720))
    points.append(CLLocationCoordinate2D(latitude: 34.9794, longitude: -76.0748))
    points.append(CLLocationCoordinate2D(latitude: 34.5258, longitude: -76.4951))
    points.append(CLLocationCoordinate2D(latitude: 34.5880, longitude: -76.8109))
    points.append(CLLocationCoordinate2D(latitude: 34.5314, longitude: -77.1378))
    points.append(CLLocationCoordinate2D(latitude: 34.3910, longitude: -77.4481))
    points.append(CLLocationCoordinate2D(latitude: 34.0481, longitude: -77.7983))
    points.append(CLLocationCoordinate2D(latitude: 33.7666, longitude: -77.9260))
    points.append(CLLocationCoordinate2D(latitude: 33.7963, longitude: -78.4863))
    points.append(CLLocationCoordinate2D(latitude: 33.7963, longitude: -78.4850))
    points.append(CLLocationCoordinate2D(latitude: 34.8037, longitude: -79.6742))
    points.append(CLLocationCoordinate2D(latitude: 34.8206, longitude: -80.8003))
    points.append(CLLocationCoordinate2D(latitude: 34.9377, longitude: -80.7880))
    points.append(CLLocationCoordinate2D(latitude: 35.1019, longitude: -80.9377))
    points.append(CLLocationCoordinate2D(latitude: 35.0356, longitude: -81.0379))
    points.append(CLLocationCoordinate2D(latitude: 35.1457, longitude: -81.0324))
    points.append(CLLocationCoordinate2D(latitude: 35.1660, longitude: -81.3867))
    points.append(CLLocationCoordinate2D(latitude: 35.1985, longitude: -82.2739))
    points.append(CLLocationCoordinate2D(latitude: 35.2041, longitude: -82.3933))
    points.append(CLLocationCoordinate2D(latitude: 35.0637, longitude: -82.7765))
    points.append(CLLocationCoordinate2D(latitude: 35.0817, longitude: -82.7861))
    points.append(CLLocationCoordinate2D(latitude: 34.9996, longitude: -83.1088))
    points.append(CLLocationCoordinate2D(latitude: 34.9918, longitude: -83.6183))
    points.append(CLLocationCoordinate2D(latitude: 34.9884, longitude: -84.3201))
    points.append(CLLocationCoordinate2D(latitude: 35.2198, longitude: -84.2926))
    points.append(CLLocationCoordinate2D(latitude: 35.2624, longitude: -84.2294))
    points.append(CLLocationCoordinate2D(latitude: 35.2322, longitude: -84.1113))
    points.append(CLLocationCoordinate2D(latitude: 35.2905, longitude: -84.0276))
    points.append(CLLocationCoordinate2D(latitude: 35.4014, longitude: -84.0248))
    points.append(CLLocationCoordinate2D(latitude: 35.5065, longitude: -83.8847))
    points.append(CLLocationCoordinate2D(latitude: 35.5233, longitude: -83.8284))
    points.append(CLLocationCoordinate2D(latitude: 35.5501, longitude: -83.6938))
    points.append(CLLocationCoordinate2D(latitude: 35.5635, longitude: -83.4961))
    points.append(CLLocationCoordinate2D(latitude: 35.7131, longitude: -83.2393))
    points.append(CLLocationCoordinate2D(latitude: 35.7755, longitude: -83.0017))
    points.append(CLLocationCoordinate2D(latitude: 35.8623, longitude: -82.9042))
    points.append(CLLocationCoordinate2D(latitude: 35.9169, longitude: -82.8177))
    points.append(CLLocationCoordinate2D(latitude: 35.9925, longitude: -82.7751))
    points.append(CLLocationCoordinate2D(latitude: 36.0602, longitude: -82.6378))
    points.append(CLLocationCoordinate2D(latitude: 35.9702, longitude: -82.6076))
    points.append(CLLocationCoordinate2D(latitude: 35.9669, longitude: -82.5389))
    points.append(CLLocationCoordinate2D(latitude: 36.0702, longitude: -82.4167))
    points.append(CLLocationCoordinate2D(latitude: 36.1168, longitude: -82.3521))
    points.append(CLLocationCoordinate2D(latitude: 36.1323, longitude: -82.2450))
    points.append(CLLocationCoordinate2D(latitude: 36.1434, longitude: -82.1475))
    points.append(CLLocationCoordinate2D(latitude: 36.1024, longitude: -82.1255))
    points.append(CLLocationCoordinate2D(latitude: 36.1212, longitude: -82.0308))
    points.append(CLLocationCoordinate2D(latitude: 36.2974, longitude: -81.9072))
    points.append(CLLocationCoordinate2D(latitude: 36.3569, longitude: -81.7956))
    points.append(CLLocationCoordinate2D(latitude: 36.3359, longitude: -81.7077))
    points.append(CLLocationCoordinate2D(latitude: 36.4122, longitude: -81.7407))
    points.append(CLLocationCoordinate2D(latitude: 36.5882, longitude: -81.6773))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "North Carolina", abbreviation: "NC", polygon: poly)
}


func createNorthDakota()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 48.9998, longitude: -104.0488))
    points.append(CLLocationCoordinate2D(latitude: 49.0000, longitude: -97.2304))
    points.append(CLLocationCoordinate2D(latitude: 48.8647, longitude: -97.1851))
    points.append(CLLocationCoordinate2D(latitude: 48.7806, longitude: -97.1576))
    points.append(CLLocationCoordinate2D(latitude: 48.6683, longitude: -97.1040))
    points.append(CLLocationCoordinate2D(latitude: 48.5539, longitude: -97.1645))
    points.append(CLLocationCoordinate2D(latitude: 48.2832, longitude: -97.1411))
    points.append(CLLocationCoordinate2D(latitude: 48.1578, longitude: -97.1397))
    points.append(CLLocationCoordinate2D(latitude: 47.9633, longitude: -97.0587))
    points.append(CLLocationCoordinate2D(latitude: 47.7098, longitude: -96.9434))
    points.append(CLLocationCoordinate2D(latitude: 47.5821, longitude: -96.8582))
    points.append(CLLocationCoordinate2D(latitude: 47.2345, longitude: -96.8335))
    points.append(CLLocationCoordinate2D(latitude: 46.9329, longitude: -96.7648))
    points.append(CLLocationCoordinate2D(latitude: 46.6702, longitude: -96.8005))
    points.append(CLLocationCoordinate2D(latitude: 46.5135, longitude: -96.7126))
    points.append(CLLocationCoordinate2D(latitude: 46.2786, longitude: -96.6028))
    points.append(CLLocationCoordinate2D(latitude: 46.0189, longitude: -96.5767))
    points.append(CLLocationCoordinate2D(latitude: 45.9340, longitude: -96.5671))
    points.append(CLLocationCoordinate2D(latitude: 45.9445, longitude: -104.0446))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "North Dakota", abbreviation: "ND", polygon: poly)
}


func createNebraska()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 43.0006, longitude: -104.0543))
    points.append(CLLocationCoordinate2D(latitude: 42.9946, longitude: -98.4993))
    points.append(CLLocationCoordinate2D(latitude: 42.9283, longitude: -98.4444))
    points.append(CLLocationCoordinate2D(latitude: 42.8438, longitude: -98.1958))
    points.append(CLLocationCoordinate2D(latitude: 42.7773, longitude: -98.0571))
    points.append(CLLocationCoordinate2D(latitude: 42.7631, longitude: -97.9761))
    points.append(CLLocationCoordinate2D(latitude: 42.8599, longitude: -97.8566))
    points.append(CLLocationCoordinate2D(latitude: 42.8518, longitude: -97.2290))
    points.append(CLLocationCoordinate2D(latitude: 42.8075, longitude: -97.2057))
    points.append(CLLocationCoordinate2D(latitude: 42.7157, longitude: -96.8486))
    points.append(CLLocationCoordinate2D(latitude: 42.5237, longitude: -96.6220))
    points.append(CLLocationCoordinate2D(latitude: 42.4772, longitude: -96.4806))
    points.append(CLLocationCoordinate2D(latitude: 42.4810, longitude: -96.3927))
    points.append(CLLocationCoordinate2D(latitude: 42.3667, longitude: -96.4050))
    points.append(CLLocationCoordinate2D(latitude: 42.2722, longitude: -96.3446))
    points.append(CLLocationCoordinate2D(latitude: 42.2051, longitude: -96.3625))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -96.2416))
    points.append(CLLocationCoordinate2D(latitude: 41.9513, longitude: -96.1372))
    points.append(CLLocationCoordinate2D(latitude: 41.7662, longitude: -96.0741))
    points.append(CLLocationCoordinate2D(latitude: 41.6267, longitude: -96.0988))
    points.append(CLLocationCoordinate2D(latitude: 41.4561, longitude: -95.9477))
    points.append(CLLocationCoordinate2D(latitude: 41.2819, longitude: -95.8804))
    points.append(CLLocationCoordinate2D(latitude: 41.0338, longitude: -95.8653))
    points.append(CLLocationCoordinate2D(latitude: 40.8346, longitude: -95.8365))
    points.append(CLLocationCoordinate2D(latitude: 40.6775, longitude: -95.8461))
    points.append(CLLocationCoordinate2D(latitude: 40.5837, longitude: -95.7610))
    points.append(CLLocationCoordinate2D(latitude: 40.4302, longitude: -95.6689))
    points.append(CLLocationCoordinate2D(latitude: 40.3130, longitude: -95.6470))
    points.append(CLLocationCoordinate2D(latitude: 40.2397, longitude: -95.4808))
    points.append(CLLocationCoordinate2D(latitude: 39.9992, longitude: -95.3091))
    points.append(CLLocationCoordinate2D(latitude: 40.0034, longitude: -102.0493))
    points.append(CLLocationCoordinate2D(latitude: 41.0006, longitude: -102.0506))
    points.append(CLLocationCoordinate2D(latitude: 41.0006, longitude: -104.0529))
    points.append(CLLocationCoordinate2D(latitude: 43.0026, longitude: -104.0529))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Nebraska", abbreviation: "NE", polygon: poly)
}


func createNewHampshire()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 45.0153, longitude: -71.5045))
    points.append(CLLocationCoordinate2D(latitude: 45.0532, longitude: -71.4977))
    points.append(CLLocationCoordinate2D(latitude: 45.0910, longitude: -71.4619))
    points.append(CLLocationCoordinate2D(latitude: 45.1520, longitude: -71.4276))
    points.append(CLLocationCoordinate2D(latitude: 45.2043, longitude: -71.3960))
    points.append(CLLocationCoordinate2D(latitude: 45.2362, longitude: -71.4455))
    points.append(CLLocationCoordinate2D(latitude: 45.2372, longitude: -71.3878))
    points.append(CLLocationCoordinate2D(latitude: 45.2710, longitude: -71.3617))
    points.append(CLLocationCoordinate2D(latitude: 45.3029, longitude: -71.2834))
    points.append(CLLocationCoordinate2D(latitude: 45.2507, longitude: -71.2299))
    points.append(CLLocationCoordinate2D(latitude: 45.2391, longitude: -71.1818))
    points.append(CLLocationCoordinate2D(latitude: 45.2478, longitude: -71.1584))
    points.append(CLLocationCoordinate2D(latitude: 45.2469, longitude: -71.1337))
    points.append(CLLocationCoordinate2D(latitude: 45.2846, longitude: -71.1145))
    points.append(CLLocationCoordinate2D(latitude: 45.3058, longitude: -71.0843))
    points.append(CLLocationCoordinate2D(latitude: 44.9230, longitude: -71.0527))
    points.append(CLLocationCoordinate2D(latitude: 44.3592, longitude: -71.0143))
    points.append(CLLocationCoordinate2D(latitude: 43.7364, longitude: -70.9840))
    points.append(CLLocationCoordinate2D(latitude: 43.5704, longitude: -70.9731))
    points.append(CLLocationCoordinate2D(latitude: 43.3621, longitude: -70.9813))
    points.append(CLLocationCoordinate2D(latitude: 43.2942, longitude: -70.9030))
    points.append(CLLocationCoordinate2D(latitude: 43.2272, longitude: -70.8083))
    points.append(CLLocationCoordinate2D(latitude: 43.1411, longitude: -70.8261))
    points.append(CLLocationCoordinate2D(latitude: 43.1000, longitude: -70.7671))
    points.append(CLLocationCoordinate2D(latitude: 43.0498, longitude: -70.6970))
    points.append(CLLocationCoordinate2D(latitude: 42.9222, longitude: -70.5583))
    points.append(CLLocationCoordinate2D(latitude: 42.8760, longitude: -70.6133))
    points.append(CLLocationCoordinate2D(latitude: 42.8619, longitude: -70.8440))
    points.append(CLLocationCoordinate2D(latitude: 42.8890, longitude: -70.9154))
    points.append(CLLocationCoordinate2D(latitude: 42.8075, longitude: -71.0651))
    points.append(CLLocationCoordinate2D(latitude: 42.8226, longitude: -71.1337))
    points.append(CLLocationCoordinate2D(latitude: 42.7873, longitude: -71.1859))
    points.append(CLLocationCoordinate2D(latitude: 42.7369, longitude: -71.1832))
    points.append(CLLocationCoordinate2D(latitude: 42.7470, longitude: -71.2189))
    points.append(CLLocationCoordinate2D(latitude: 42.7400, longitude: -71.2560))
    points.append(CLLocationCoordinate2D(latitude: 42.6970, longitude: -71.2941))
    points.append(CLLocationCoordinate2D(latitude: 42.7077, longitude: -71.7421))
    points.append(CLLocationCoordinate2D(latitude: 42.7268, longitude: -72.4590))
    points.append(CLLocationCoordinate2D(latitude: 42.7621, longitude: -72.5098))
    points.append(CLLocationCoordinate2D(latitude: 42.8105, longitude: -72.5414))
    points.append(CLLocationCoordinate2D(latitude: 42.8609, longitude: -72.5592))
    points.append(CLLocationCoordinate2D(latitude: 42.8981, longitude: -72.5317))
    points.append(CLLocationCoordinate2D(latitude: 42.9524, longitude: -72.5400))
    points.append(CLLocationCoordinate2D(latitude: 42.9745, longitude: -72.4919))
    points.append(CLLocationCoordinate2D(latitude: 42.9906, longitude: -72.4658))
    points.append(CLLocationCoordinate2D(latitude: 43.0127, longitude: -72.4480))
    points.append(CLLocationCoordinate2D(latitude: 43.0287, longitude: -72.4713))
    points.append(CLLocationCoordinate2D(latitude: 43.0508, longitude: -72.4713))
    points.append(CLLocationCoordinate2D(latitude: 43.0819, longitude: -72.4356))
    points.append(CLLocationCoordinate2D(latitude: 43.1040, longitude: -72.4452))
    points.append(CLLocationCoordinate2D(latitude: 43.1180, longitude: -72.4342))
    points.append(CLLocationCoordinate2D(latitude: 43.1501, longitude: -72.4590))
    points.append(CLLocationCoordinate2D(latitude: 43.2052, longitude: -72.4329))
    points.append(CLLocationCoordinate2D(latitude: 43.2562, longitude: -72.4384))
    points.append(CLLocationCoordinate2D(latitude: 43.2812, longitude: -72.4095))
    points.append(CLLocationCoordinate2D(latitude: 43.3741, longitude: -72.4150))
    points.append(CLLocationCoordinate2D(latitude: 43.4988, longitude: -72.3807))
    points.append(CLLocationCoordinate2D(latitude: 43.5127, longitude: -72.4013))
    points.append(CLLocationCoordinate2D(latitude: 43.5834, longitude: -72.3779))
    points.append(CLLocationCoordinate2D(latitude: 43.6420, longitude: -72.3134))
    points.append(CLLocationCoordinate2D(latitude: 43.6758, longitude: -72.3024))
    points.append(CLLocationCoordinate2D(latitude: 43.7036, longitude: -72.3079))
    points.append(CLLocationCoordinate2D(latitude: 43.7344, longitude: -72.2694))
    points.append(CLLocationCoordinate2D(latitude: 43.7741, longitude: -72.2035))
    points.append(CLLocationCoordinate2D(latitude: 43.8187, longitude: -72.1870))
    points.append(CLLocationCoordinate2D(latitude: 43.8672, longitude: -72.1843))
    points.append(CLLocationCoordinate2D(latitude: 43.8890, longitude: -72.1568))
    points.append(CLLocationCoordinate2D(latitude: 43.9117, longitude: -72.1321))
    points.append(CLLocationCoordinate2D(latitude: 43.9454, longitude: -72.1198))
    points.append(CLLocationCoordinate2D(latitude: 44.0017, longitude: -72.1170))
    points.append(CLLocationCoordinate2D(latitude: 44.0856, longitude: -72.0470))
    points.append(CLLocationCoordinate2D(latitude: 44.1093, longitude: -72.0552))
    points.append(CLLocationCoordinate2D(latitude: 44.1428, longitude: -72.0387))
    points.append(CLLocationCoordinate2D(latitude: 44.1763, longitude: -72.0580))
    points.append(CLLocationCoordinate2D(latitude: 44.1999, longitude: -72.0703))
    points.append(CLLocationCoordinate2D(latitude: 44.2511, longitude: -72.0525))
    points.append(CLLocationCoordinate2D(latitude: 44.2796, longitude: -72.0607))
    points.append(CLLocationCoordinate2D(latitude: 44.3199, longitude: -72.0291))
    points.append(CLLocationCoordinate2D(latitude: 44.3376, longitude: -71.9783))
    points.append(CLLocationCoordinate2D(latitude: 44.3592, longitude: -71.9289))
    points.append(CLLocationCoordinate2D(latitude: 44.3366, longitude: -71.8712))
    points.append(CLLocationCoordinate2D(latitude: 44.3572, longitude: -71.8135))
    points.append(CLLocationCoordinate2D(latitude: 44.3877, longitude: -71.8108))
    points.append(CLLocationCoordinate2D(latitude: 44.4014, longitude: -71.7778))
    points.append(CLLocationCoordinate2D(latitude: 44.4122, longitude: -71.7380))
    points.append(CLLocationCoordinate2D(latitude: 44.4416, longitude: -71.6597))
    points.append(CLLocationCoordinate2D(latitude: 44.4642, longitude: -71.6542))
    points.append(CLLocationCoordinate2D(latitude: 44.5073, longitude: -71.5855))
    points.append(CLLocationCoordinate2D(latitude: 44.5357, longitude: -71.5746))
    points.append(CLLocationCoordinate2D(latitude: 44.5601, longitude: -71.6048))
    points.append(CLLocationCoordinate2D(latitude: 44.5680, longitude: -71.5897))
    points.append(CLLocationCoordinate2D(latitude: 44.5680, longitude: -71.5649))
    points.append(CLLocationCoordinate2D(latitude: 44.5914, longitude: -71.5485))
    points.append(CLLocationCoordinate2D(latitude: 44.5993, longitude: -71.5649))
    points.append(CLLocationCoordinate2D(latitude: 44.6315, longitude: -71.5540))
    points.append(CLLocationCoordinate2D(latitude: 44.6608, longitude: -71.5924))
    points.append(CLLocationCoordinate2D(latitude: 44.7243, longitude: -71.6130))
    points.append(CLLocationCoordinate2D(latitude: 44.7526, longitude: -71.6364))
    points.append(CLLocationCoordinate2D(latitude: 44.8198, longitude: -71.5746))
    points.append(CLLocationCoordinate2D(latitude: 44.8325, longitude: -71.5526))
    points.append(CLLocationCoordinate2D(latitude: 44.8539, longitude: -71.5553))
    points.append(CLLocationCoordinate2D(latitude: 44.8744, longitude: -71.5279))
    points.append(CLLocationCoordinate2D(latitude: 44.9123, longitude: -71.5018))
    points.append(CLLocationCoordinate2D(latitude: 44.9366, longitude: -71.5182))
    points.append(CLLocationCoordinate2D(latitude: 44.9697, longitude: -71.5237))
    points.append(CLLocationCoordinate2D(latitude: 44.9862, longitude: -71.5443))
    points.append(CLLocationCoordinate2D(latitude: 45.0017, longitude: -71.5237))
    points.append(CLLocationCoordinate2D(latitude: 45.0163, longitude: -71.5045))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "New Hampshire", abbreviation: "NH", polygon: poly)
}


func createNewJersey()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 41.3933, longitude: -74.7070))
    points.append(CLLocationCoordinate2D(latitude: 41.3572, longitude: -74.6950))
    points.append(CLLocationCoordinate2D(latitude: 41.3394, longitude: -74.6559))
    points.append(CLLocationCoordinate2D(latitude: 40.9934, longitude: -73.8940))
    points.append(CLLocationCoordinate2D(latitude: 40.8398, longitude: -73.9586))
    points.append(CLLocationCoordinate2D(latitude: 40.7691, longitude: -74.0094))
    points.append(CLLocationCoordinate2D(latitude: 40.6994, longitude: -74.0231))
    points.append(CLLocationCoordinate2D(latitude: 40.6786, longitude: -74.0437))
    points.append(CLLocationCoordinate2D(latitude: 40.6515, longitude: -74.0808))
    points.append(CLLocationCoordinate2D(latitude: 40.6421, longitude: -74.1357))
    points.append(CLLocationCoordinate2D(latitude: 40.6452, longitude: -74.1962))
    points.append(CLLocationCoordinate2D(latitude: 40.5952, longitude: -74.2003))
    points.append(CLLocationCoordinate2D(latitude: 40.5566, longitude: -74.2195))
    points.append(CLLocationCoordinate2D(latitude: 40.4877, longitude: -74.2552))
    points.append(CLLocationCoordinate2D(latitude: 40.4762, longitude: -74.2264))
    points.append(CLLocationCoordinate2D(latitude: 40.5253, longitude: -73.9503))
    points.append(CLLocationCoordinate2D(latitude: 40.4896, longitude: -73.8865))
    points.append(CLLocationCoordinate2D(latitude: 40.0045, longitude: -73.9352))
    points.append(CLLocationCoordinate2D(latitude: 39.6131, longitude: -74.0410))
    points.append(CLLocationCoordinate2D(latitude: 39.4744, longitude: -74.2209))
    points.append(CLLocationCoordinate2D(latitude: 38.9882, longitude: -74.6713))
    points.append(CLLocationCoordinate2D(latitude: 38.8664, longitude: -74.8553))
    points.append(CLLocationCoordinate2D(latitude: 38.8472, longitude: -75.0476))
    points.append(CLLocationCoordinate2D(latitude: 39.0565, longitude: -75.1685))
    points.append(CLLocationCoordinate2D(latitude: 39.2525, longitude: -75.3250))
    points.append(CLLocationCoordinate2D(latitude: 39.4500, longitude: -75.5544))
    points.append(CLLocationCoordinate2D(latitude: 39.4966, longitude: -75.5612))
    points.append(CLLocationCoordinate2D(latitude: 39.4998, longitude: -75.5283))
    points.append(CLLocationCoordinate2D(latitude: 39.5411, longitude: -75.5338))
    points.append(CLLocationCoordinate2D(latitude: 39.5761, longitude: -75.5090))
    points.append(CLLocationCoordinate2D(latitude: 39.6237, longitude: -75.5708))
    points.append(CLLocationCoordinate2D(latitude: 39.6713, longitude: -75.5104))
    points.append(CLLocationCoordinate2D(latitude: 39.7167, longitude: -75.4843))
    points.append(CLLocationCoordinate2D(latitude: 39.8033, longitude: -75.4156))
    points.append(CLLocationCoordinate2D(latitude: 39.8370, longitude: -75.2577))
    points.append(CLLocationCoordinate2D(latitude: 39.9592, longitude: -75.0929))
    points.append(CLLocationCoordinate2D(latitude: 40.1495, longitude: -74.7221))
    points.append(CLLocationCoordinate2D(latitude: 40.2628, longitude: -74.8389))
    points.append(CLLocationCoordinate2D(latitude: 40.3392, longitude: -74.9432))
    points.append(CLLocationCoordinate2D(latitude: 40.4072, longitude: -74.9776))
    points.append(CLLocationCoordinate2D(latitude: 40.4208, longitude: -75.0655))
    points.append(CLLocationCoordinate2D(latitude: 40.5013, longitude: -75.0600))
    points.append(CLLocationCoordinate2D(latitude: 40.5743, longitude: -75.1025))
    points.append(CLLocationCoordinate2D(latitude: 40.5639, longitude: -75.2124))
    points.append(CLLocationCoordinate2D(latitude: 40.6806, longitude: -75.1904))
    points.append(CLLocationCoordinate2D(latitude: 40.8554, longitude: -75.0490))
    points.append(CLLocationCoordinate2D(latitude: 40.9830, longitude: -75.1355))
    points.append(CLLocationCoordinate2D(latitude: 41.2282, longitude: -74.8608))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "New Jersey", abbreviation: "NJ", polygon: poly)
}


func createNewMexico()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.9991, longitude: -109.0451))
    points.append(CLLocationCoordinate2D(latitude: 36.9982, longitude: -103.0023))
    points.append(CLLocationCoordinate2D(latitude: 36.5003, longitude: -103.0009))
    points.append(CLLocationCoordinate2D(latitude: 36.5003, longitude: -103.0394))
    points.append(CLLocationCoordinate2D(latitude: 31.9999, longitude: -103.0696))
    points.append(CLLocationCoordinate2D(latitude: 32.0034, longitude: -106.6223))
    points.append(CLLocationCoordinate2D(latitude: 31.8641, longitude: -106.6347))
    points.append(CLLocationCoordinate2D(latitude: 31.7830, longitude: -106.5317))
    points.append(CLLocationCoordinate2D(latitude: 31.7795, longitude: -108.2071))
    points.append(CLLocationCoordinate2D(latitude: 31.3349, longitude: -108.2140))
    points.append(CLLocationCoordinate2D(latitude: 31.3323, longitude: -109.0499))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "New Mexico", abbreviation: "NM", polygon: poly)
}


func createNevada()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 41.9922, longitude: -120.0037))
    points.append(CLLocationCoordinate2D(latitude: 42.0003, longitude: -117.9602))
    points.append(CLLocationCoordinate2D(latitude: 42.0003, longitude: -117.0264))
    points.append(CLLocationCoordinate2D(latitude: 42.0003, longitude: -115.7300))
    points.append(CLLocationCoordinate2D(latitude: 41.9952, longitude: -114.0436))
    points.append(CLLocationCoordinate2D(latitude: 38.2856, longitude: -114.0546))
    points.append(CLLocationCoordinate2D(latitude: 36.1934, longitude: -114.0439))
    points.append(CLLocationCoordinate2D(latitude: 36.1334, longitude: -114.0985))
    points.append(CLLocationCoordinate2D(latitude: 36.1068, longitude: -114.1260))
    points.append(CLLocationCoordinate2D(latitude: 36.0891, longitude: -114.1150))
    points.append(CLLocationCoordinate2D(latitude: 36.0313, longitude: -114.1534))
    points.append(CLLocationCoordinate2D(latitude: 36.0136, longitude: -114.2468))
    points.append(CLLocationCoordinate2D(latitude: 36.0624, longitude: -114.3292))
    points.append(CLLocationCoordinate2D(latitude: 36.1024, longitude: -114.3237))
    points.append(CLLocationCoordinate2D(latitude: 36.1434, longitude: -114.3896))
    points.append(CLLocationCoordinate2D(latitude: 36.1290, longitude: -114.5105))
    points.append(CLLocationCoordinate2D(latitude: 36.1467, longitude: -114.5215))
    points.append(CLLocationCoordinate2D(latitude: 36.1556, longitude: -114.5654))
    points.append(CLLocationCoordinate2D(latitude: 36.1334, longitude: -114.6204))
    points.append(CLLocationCoordinate2D(latitude: 36.1157, longitude: -114.6863))
    points.append(CLLocationCoordinate2D(latitude: 36.0979, longitude: -114.7742))
    points.append(CLLocationCoordinate2D(latitude: 36.0580, longitude: -114.7357))
    points.append(CLLocationCoordinate2D(latitude: 36.0447, longitude: -114.7522))
    points.append(CLLocationCoordinate2D(latitude: 35.9691, longitude: -114.7412))
    points.append(CLLocationCoordinate2D(latitude: 35.8980, longitude: -114.7028))
    points.append(CLLocationCoordinate2D(latitude: 35.8757, longitude: -114.6588))
    points.append(CLLocationCoordinate2D(latitude: 35.8579, longitude: -114.7083))
    points.append(CLLocationCoordinate2D(latitude: 35.8267, longitude: -114.6973))
    points.append(CLLocationCoordinate2D(latitude: 35.8089, longitude: -114.7192))
    points.append(CLLocationCoordinate2D(latitude: 35.6618, longitude: -114.6973))
    points.append(CLLocationCoordinate2D(latitude: 35.6037, longitude: -114.6478))
    points.append(CLLocationCoordinate2D(latitude: 35.5814, longitude: -114.6863))
    points.append(CLLocationCoordinate2D(latitude: 35.5233, longitude: -114.6533))
    points.append(CLLocationCoordinate2D(latitude: 35.5054, longitude: -114.6863))
    points.append(CLLocationCoordinate2D(latitude: 35.4070, longitude: -114.6149))
    points.append(CLLocationCoordinate2D(latitude: 35.3218, longitude: -114.5929))
    points.append(CLLocationCoordinate2D(latitude: 35.1783, longitude: -114.5737))
    points.append(CLLocationCoordinate2D(latitude: 35.1199, longitude: -114.6094))
    points.append(CLLocationCoordinate2D(latitude: 35.1109, longitude: -114.6368))
    points.append(CLLocationCoordinate2D(latitude: 35.0929, longitude: -114.6368))
    points.append(CLLocationCoordinate2D(latitude: 35.0750, longitude: -114.6039))
    points.append(CLLocationCoordinate2D(latitude: 35.0480, longitude: -114.6259))
    points.append(CLLocationCoordinate2D(latitude: 35.0019, longitude: -114.6336))
    points.append(CLLocationCoordinate2D(latitude: 35.1334, longitude: -114.8016))
    points.append(CLLocationCoordinate2D(latitude: 37.2303, longitude: -117.5153))
    points.append(CLLocationCoordinate2D(latitude: 39.0000, longitude: -120.0009))
    points.append(CLLocationCoordinate2D(latitude: 41.9942, longitude: -119.9982))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Nevada", abbreviation: "NV", polygon: poly)
}


func createNewYork()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 42.5142, longitude: -79.7624))
    points.append(CLLocationCoordinate2D(latitude: 42.7783, longitude: -79.0672))
    points.append(CLLocationCoordinate2D(latitude: 42.8508, longitude: -78.9313))
    points.append(CLLocationCoordinate2D(latitude: 42.9061, longitude: -78.9024))
    points.append(CLLocationCoordinate2D(latitude: 42.9554, longitude: -78.9313))
    points.append(CLLocationCoordinate2D(latitude: 42.9584, longitude: -78.9656))
    points.append(CLLocationCoordinate2D(latitude: 42.9886, longitude: -79.0219))
    points.append(CLLocationCoordinate2D(latitude: 43.0568, longitude: -79.0027))
    points.append(CLLocationCoordinate2D(latitude: 43.0769, longitude: -79.0727))
    points.append(CLLocationCoordinate2D(latitude: 43.1220, longitude: -79.0713))
    points.append(CLLocationCoordinate2D(latitude: 43.1441, longitude: -79.0302))
    points.append(CLLocationCoordinate2D(latitude: 43.1801, longitude: -79.0576))
    points.append(CLLocationCoordinate2D(latitude: 43.2482, longitude: -79.0604))
    points.append(CLLocationCoordinate2D(latitude: 43.2812, longitude: -79.0837))
    points.append(CLLocationCoordinate2D(latitude: 43.4509, longitude: -79.2004))
    points.append(CLLocationCoordinate2D(latitude: 43.6311, longitude: -78.6909))
    points.append(CLLocationCoordinate2D(latitude: 43.6321, longitude: -76.7958))
    points.append(CLLocationCoordinate2D(latitude: 43.9987, longitude: -76.4978))
    points.append(CLLocationCoordinate2D(latitude: 44.0965, longitude: -76.4388))
    points.append(CLLocationCoordinate2D(latitude: 44.1349, longitude: -76.3536))
    points.append(CLLocationCoordinate2D(latitude: 44.1989, longitude: -76.3124))
    points.append(CLLocationCoordinate2D(latitude: 44.2049, longitude: -76.2437))
    points.append(CLLocationCoordinate2D(latitude: 44.2413, longitude: -76.1655))
    points.append(CLLocationCoordinate2D(latitude: 44.2973, longitude: -76.1353))
    points.append(CLLocationCoordinate2D(latitude: 44.3327, longitude: -76.0474))
    points.append(CLLocationCoordinate2D(latitude: 44.3553, longitude: -75.9856))
    points.append(CLLocationCoordinate2D(latitude: 44.3749, longitude: -75.9196))
    points.append(CLLocationCoordinate2D(latitude: 44.3994, longitude: -75.8730))
    points.append(CLLocationCoordinate2D(latitude: 44.4308, longitude: -75.8221))
    points.append(CLLocationCoordinate2D(latitude: 44.4740, longitude: -75.8098))
    points.append(CLLocationCoordinate2D(latitude: 44.5425, longitude: -75.7288))
    points.append(CLLocationCoordinate2D(latitude: 44.6647, longitude: -75.5585))
    points.append(CLLocationCoordinate2D(latitude: 44.7672, longitude: -75.4088))
    points.append(CLLocationCoordinate2D(latitude: 44.8101, longitude: -75.3442))
    points.append(CLLocationCoordinate2D(latitude: 44.8383, longitude: -75.3058))
    points.append(CLLocationCoordinate2D(latitude: 44.8676, longitude: -75.2399))
    points.append(CLLocationCoordinate2D(latitude: 44.9211, longitude: -75.1204))
    points.append(CLLocationCoordinate2D(latitude: 44.9609, longitude: -74.9995))
    points.append(CLLocationCoordinate2D(latitude: 44.9803, longitude: -74.9899))
    points.append(CLLocationCoordinate2D(latitude: 44.9852, longitude: -74.9103))
    points.append(CLLocationCoordinate2D(latitude: 45.0017, longitude: -74.8856))
    points.append(CLLocationCoordinate2D(latitude: 45.0153, longitude: -74.8306))
    points.append(CLLocationCoordinate2D(latitude: 45.0046, longitude: -74.7633))
    points.append(CLLocationCoordinate2D(latitude: 45.0027, longitude: -74.7070))
    points.append(CLLocationCoordinate2D(latitude: 45.0007, longitude: -74.5642))
    points.append(CLLocationCoordinate2D(latitude: 44.9920, longitude: -74.1467))
    points.append(CLLocationCoordinate2D(latitude: 45.0037, longitude: -73.7306))
    points.append(CLLocationCoordinate2D(latitude: 45.0085, longitude: -73.4203))
    points.append(CLLocationCoordinate2D(latitude: 45.0109, longitude: -73.3430))
    points.append(CLLocationCoordinate2D(latitude: 44.9874, longitude: -73.3547))
    points.append(CLLocationCoordinate2D(latitude: 44.9648, longitude: -73.3379))
    points.append(CLLocationCoordinate2D(latitude: 44.9160, longitude: -73.3396))
    points.append(CLLocationCoordinate2D(latitude: 44.8354, longitude: -73.3739))
    points.append(CLLocationCoordinate2D(latitude: 44.8013, longitude: -73.3324))
    points.append(CLLocationCoordinate2D(latitude: 44.7419, longitude: -73.3667))
    points.append(CLLocationCoordinate2D(latitude: 44.6139, longitude: -73.3873))
    points.append(CLLocationCoordinate2D(latitude: 44.5787, longitude: -73.3736))
    points.append(CLLocationCoordinate2D(latitude: 44.4916, longitude: -73.3049))
    points.append(CLLocationCoordinate2D(latitude: 44.4289, longitude: -73.2953))
    points.append(CLLocationCoordinate2D(latitude: 44.3513, longitude: -73.3365))
    points.append(CLLocationCoordinate2D(latitude: 44.2757, longitude: -73.3118))
    points.append(CLLocationCoordinate2D(latitude: 44.1980, longitude: -73.3818))
    points.append(CLLocationCoordinate2D(latitude: 44.1142, longitude: -73.4079))
    points.append(CLLocationCoordinate2D(latitude: 44.0511, longitude: -73.4367))
    points.append(CLLocationCoordinate2D(latitude: 44.0165, longitude: -73.4065))
    points.append(CLLocationCoordinate2D(latitude: 43.9375, longitude: -73.4079))
    points.append(CLLocationCoordinate2D(latitude: 43.8771, longitude: -73.3749))
    points.append(CLLocationCoordinate2D(latitude: 43.8167, longitude: -73.3914))
    points.append(CLLocationCoordinate2D(latitude: 43.7790, longitude: -73.3557))
    points.append(CLLocationCoordinate2D(latitude: 43.6460, longitude: -73.4244))
    points.append(CLLocationCoordinate2D(latitude: 43.5893, longitude: -73.4340))
    points.append(CLLocationCoordinate2D(latitude: 43.5655, longitude: -73.3969))
    points.append(CLLocationCoordinate2D(latitude: 43.6112, longitude: -73.3818))
    points.append(CLLocationCoordinate2D(latitude: 43.6271, longitude: -73.3049))
    points.append(CLLocationCoordinate2D(latitude: 43.5764, longitude: -73.3063))
    points.append(CLLocationCoordinate2D(latitude: 43.5675, longitude: -73.2582))
    points.append(CLLocationCoordinate2D(latitude: 43.5227, longitude: -73.2445))
    points.append(CLLocationCoordinate2D(latitude: 43.2582, longitude: -73.2582))
    points.append(CLLocationCoordinate2D(latitude: 42.9715, longitude: -73.2733))
    points.append(CLLocationCoordinate2D(latitude: 42.8004, longitude: -73.2898))
    points.append(CLLocationCoordinate2D(latitude: 42.7460, longitude: -73.2664))
    points.append(CLLocationCoordinate2D(latitude: 42.4630, longitude: -73.3708))
    points.append(CLLocationCoordinate2D(latitude: 42.0840, longitude: -73.5095))
    points.append(CLLocationCoordinate2D(latitude: 42.0218, longitude: -73.4903))
    points.append(CLLocationCoordinate2D(latitude: 41.8808, longitude: -73.4999))
    points.append(CLLocationCoordinate2D(latitude: 41.2953, longitude: -73.5535))
    points.append(CLLocationCoordinate2D(latitude: 41.2128, longitude: -73.4834))
    points.append(CLLocationCoordinate2D(latitude: 41.1011, longitude: -73.7272))
    points.append(CLLocationCoordinate2D(latitude: 41.0338, longitude: -73.6723))
    points.append(CLLocationCoordinate2D(latitude: 40.9830, longitude: -73.6606))
    points.append(CLLocationCoordinate2D(latitude: 40.9509, longitude: -73.6132))
    points.append(CLLocationCoordinate2D(latitude: 41.0255, longitude: -73.2493))
    points.append(CLLocationCoordinate2D(latitude: 41.0866, longitude: -73.0007))
    points.append(CLLocationCoordinate2D(latitude: 41.1962, longitude: -72.4322))
    points.append(CLLocationCoordinate2D(latitude: 41.2618, longitude: -72.0827))
    points.append(CLLocationCoordinate2D(latitude: 41.2907, longitude: -72.0195))
    points.append(CLLocationCoordinate2D(latitude: 41.3103, longitude: -71.9302))
    points.append(CLLocationCoordinate2D(latitude: 41.1838, longitude: -71.7915))
    points.append(CLLocationCoordinate2D(latitude: 41.1249, longitude: -71.7929))
    points.append(CLLocationCoordinate2D(latitude: 41.0462, longitude: -71.7517))
    points.append(CLLocationCoordinate2D(latitude: 40.6306, longitude: -72.9465))
    points.append(CLLocationCoordinate2D(latitude: 40.5368, longitude: -73.4628))
    points.append(CLLocationCoordinate2D(latitude: 40.4896, longitude: -73.8865))
    points.append(CLLocationCoordinate2D(latitude: 40.5253, longitude: -73.9503))
    points.append(CLLocationCoordinate2D(latitude: 40.4762, longitude: -74.2264))
    points.append(CLLocationCoordinate2D(latitude: 40.4877, longitude: -74.2552))
    points.append(CLLocationCoordinate2D(latitude: 40.5566, longitude: -74.2195))
    points.append(CLLocationCoordinate2D(latitude: 40.5952, longitude: -74.2003))
    points.append(CLLocationCoordinate2D(latitude: 40.6452, longitude: -74.1962))
    points.append(CLLocationCoordinate2D(latitude: 40.6421, longitude: -74.1357))
    points.append(CLLocationCoordinate2D(latitude: 40.6515, longitude: -74.0808))
    points.append(CLLocationCoordinate2D(latitude: 40.6786, longitude: -74.0437))
    points.append(CLLocationCoordinate2D(latitude: 40.6994, longitude: -74.0231))
    points.append(CLLocationCoordinate2D(latitude: 40.7691, longitude: -74.0094))
    points.append(CLLocationCoordinate2D(latitude: 40.8398, longitude: -73.9586))
    points.append(CLLocationCoordinate2D(latitude: 40.9934, longitude: -73.8940))
    points.append(CLLocationCoordinate2D(latitude: 41.3394, longitude: -74.6559))
    points.append(CLLocationCoordinate2D(latitude: 41.3572, longitude: -74.6950))
    points.append(CLLocationCoordinate2D(latitude: 41.3933, longitude: -74.7070))
    points.append(CLLocationCoordinate2D(latitude: 41.4283, longitude: -74.7935))
    points.append(CLLocationCoordinate2D(latitude: 41.5086, longitude: -74.9927))
    points.append(CLLocationCoordinate2D(latitude: 41.6021, longitude: -75.0641))
    points.append(CLLocationCoordinate2D(latitude: 41.6729, longitude: -75.0366))
    points.append(CLLocationCoordinate2D(latitude: 41.7713, longitude: -75.0586))
    points.append(CLLocationCoordinate2D(latitude: 41.8696, longitude: -75.1794))
    points.append(CLLocationCoordinate2D(latitude: 41.9431, longitude: -75.2673))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -75.3580))
    points.append(CLLocationCoordinate2D(latitude: 42.0003, longitude: -79.7607))
    points.append(CLLocationCoordinate2D(latitude: 42.1827, longitude: -79.7621))
    points.append(CLLocationCoordinate2D(latitude: 42.5146, longitude: -79.7621))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "New York", abbreviation: "NY", polygon: poly)
}


func createOhio()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 41.6959, longitude: -84.8059))
    points.append(CLLocationCoordinate2D(latitude: 41.7335, longitude: -83.4154))
    points.append(CLLocationCoordinate2D(latitude: 41.9583, longitude: -83.1126))
    points.append(CLLocationCoordinate2D(latitude: 41.8627, longitude: -83.0683))
    points.append(CLLocationCoordinate2D(latitude: 41.6757, longitude: -82.6790))
    points.append(CLLocationCoordinate2D(latitude: 41.6770, longitude: -82.3961))
    points.append(CLLocationCoordinate2D(latitude: 41.9962, longitude: -81.7094))
    points.append(CLLocationCoordinate2D(latitude: 41.9962, longitude: -81.6806))
    points.append(CLLocationCoordinate2D(latitude: 42.2061, longitude: -81.2453))
    points.append(CLLocationCoordinate2D(latitude: 42.3229, longitude: -80.5195))
    points.append(CLLocationCoordinate2D(latitude: 40.6383, longitude: -80.5188))
    points.append(CLLocationCoordinate2D(latitude: 40.5941, longitude: -80.6520))
    points.append(CLLocationCoordinate2D(latitude: 39.8676, longitude: -80.7948))
    points.append(CLLocationCoordinate2D(latitude: 39.6565, longitude: -80.8374))
    points.append(CLLocationCoordinate2D(latitude: 39.5472, longitude: -81.0276))
    points.append(CLLocationCoordinate2D(latitude: 39.4479, longitude: -81.1244))
    points.append(CLLocationCoordinate2D(latitude: 39.3460, longitude: -81.3661))
    points.append(CLLocationCoordinate2D(latitude: 39.4022, longitude: -81.4444))
    points.append(CLLocationCoordinate2D(latitude: 39.2812, longitude: -81.5680))
    points.append(CLLocationCoordinate2D(latitude: 39.1865, longitude: -81.7397))
    points.append(CLLocationCoordinate2D(latitude: 38.9359, longitude: -81.7644))
    points.append(CLLocationCoordinate2D(latitude: 38.8750, longitude: -81.8729))
    points.append(CLLocationCoordinate2D(latitude: 39.0181, longitude: -82.0294))
    points.append(CLLocationCoordinate2D(latitude: 38.7712, longitude: -82.1997))
    points.append(CLLocationCoordinate2D(latitude: 38.5965, longitude: -82.1722))
    points.append(CLLocationCoordinate2D(latitude: 38.5707, longitude: -82.2917))
    points.append(CLLocationCoordinate2D(latitude: 38.4385, longitude: -82.3425))
    points.append(CLLocationCoordinate2D(latitude: 38.3761, longitude: -82.5952))
    points.append(CLLocationCoordinate2D(latitude: 38.5782, longitude: -82.8355))
    points.append(CLLocationCoordinate2D(latitude: 38.7327, longitude: -82.8973))
    points.append(CLLocationCoordinate2D(latitude: 38.7027, longitude: -83.0127))
    points.append(CLLocationCoordinate2D(latitude: 38.6169, longitude: -83.1445))
    points.append(CLLocationCoordinate2D(latitude: 38.5976, longitude: -83.2736))
    points.append(CLLocationCoordinate2D(latitude: 38.6962, longitude: -83.5263))
    points.append(CLLocationCoordinate2D(latitude: 38.6330, longitude: -83.6636))
    points.append(CLLocationCoordinate2D(latitude: 38.7519, longitude: -83.8916))
    points.append(CLLocationCoordinate2D(latitude: 38.7712, longitude: -84.0866))
    points.append(CLLocationCoordinate2D(latitude: 38.8055, longitude: -84.2432))
    points.append(CLLocationCoordinate2D(latitude: 38.9434, longitude: -84.2857))
    points.append(CLLocationCoordinate2D(latitude: 39.0459, longitude: -84.4052))
    points.append(CLLocationCoordinate2D(latitude: 39.0960, longitude: -84.5068))
    points.append(CLLocationCoordinate2D(latitude: 39.1407, longitude: -84.7444))
    points.append(CLLocationCoordinate2D(latitude: 39.1054, longitude: -84.8201))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Ohio", abbreviation: "OH", polygon: poly)
}


func createOklahoma()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 37.0015, longitude: -103.0051))
    points.append(CLLocationCoordinate2D(latitude: 36.5030, longitude: -103.0037))
    points.append(CLLocationCoordinate2D(latitude: 36.4986, longitude: -100.0003))
    points.append(CLLocationCoordinate2D(latitude: 34.5620, longitude: -99.9934))
    points.append(CLLocationCoordinate2D(latitude: 34.3763, longitude: -99.6172))
    points.append(CLLocationCoordinate2D(latitude: 34.4137, longitude: -99.5787))
    points.append(CLLocationCoordinate2D(latitude: 34.3763, longitude: -99.4290))
    points.append(CLLocationCoordinate2D(latitude: 34.4534, longitude: -99.3823))
    points.append(CLLocationCoordinate2D(latitude: 34.3616, longitude: -99.2505))
    points.append(CLLocationCoordinate2D(latitude: 34.2129, longitude: -99.1818))
    points.append(CLLocationCoordinate2D(latitude: 34.1982, longitude: -98.9648))
    points.append(CLLocationCoordinate2D(latitude: 34.1232, longitude: -98.7424))
    points.append(CLLocationCoordinate2D(latitude: 34.1254, longitude: -98.5570))
    points.append(CLLocationCoordinate2D(latitude: 34.0618, longitude: -98.4746))
    points.append(CLLocationCoordinate2D(latitude: 34.1414, longitude: -98.3743))
    points.append(CLLocationCoordinate2D(latitude: 34.1118, longitude: -98.1793))
    points.append(CLLocationCoordinate2D(latitude: 34.0060, longitude: -98.0818))
    points.append(CLLocationCoordinate2D(latitude: 33.8966, longitude: -97.9843))
    points.append(CLLocationCoordinate2D(latitude: 33.8487, longitude: -97.8662))
    points.append(CLLocationCoordinate2D(latitude: 33.9798, longitude: -97.6932))
    points.append(CLLocationCoordinate2D(latitude: 33.8841, longitude: -97.4529))
    points.append(CLLocationCoordinate2D(latitude: 33.8282, longitude: -97.4611))
    points.append(CLLocationCoordinate2D(latitude: 33.8237, longitude: -97.3622))
    points.append(CLLocationCoordinate2D(latitude: 33.9001, longitude: -97.2166))
    points.append(CLLocationCoordinate2D(latitude: 33.7426, longitude: -97.1645))
    points.append(CLLocationCoordinate2D(latitude: 33.7392, longitude: -97.0930))
    points.append(CLLocationCoordinate2D(latitude: 33.9354, longitude: -96.9173))
    points.append(CLLocationCoordinate2D(latitude: 33.8704, longitude: -96.8527))
    points.append(CLLocationCoordinate2D(latitude: 33.8271, longitude: -96.7484))
    points.append(CLLocationCoordinate2D(latitude: 33.8202, longitude: -96.5602))
    points.append(CLLocationCoordinate2D(latitude: 33.7769, longitude: -96.5053))
    points.append(CLLocationCoordinate2D(latitude: 33.6912, longitude: -96.3474))
    points.append(CLLocationCoordinate2D(latitude: 33.8522, longitude: -96.0205))
    points.append(CLLocationCoordinate2D(latitude: 33.8396, longitude: -95.8379))
    points.append(CLLocationCoordinate2D(latitude: 33.8887, longitude: -95.7349))
    points.append(CLLocationCoordinate2D(latitude: 33.8841, longitude: -95.5426))
    points.append(CLLocationCoordinate2D(latitude: 33.8738, longitude: -95.2831))
    points.append(CLLocationCoordinate2D(latitude: 33.9570, longitude: -95.2171))
    points.append(CLLocationCoordinate2D(latitude: 33.8670, longitude: -95.0496))
    points.append(CLLocationCoordinate2D(latitude: 33.7677, longitude: -94.8862))
    points.append(CLLocationCoordinate2D(latitude: 33.6695, longitude: -94.6692))
    points.append(CLLocationCoordinate2D(latitude: 33.6386, longitude: -94.4852))
    points.append(CLLocationCoordinate2D(latitude: 35.3920, longitude: -94.4302))
    points.append(CLLocationCoordinate2D(latitude: 36.3715, longitude: -94.5978))
    points.append(CLLocationCoordinate2D(latitude: 36.4994, longitude: -94.6179))
    points.append(CLLocationCoordinate2D(latitude: 36.9989, longitude: -94.6179))
    points.append(CLLocationCoordinate2D(latitude: 37.0004, longitude: -103.0064))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Oklahoma", abbreviation: "OK", polygon: poly)
}


func createOregon()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 46.2596, longitude: -124.2444))
    points.append(CLLocationCoordinate2D(latitude: 46.2653, longitude: -124.0329))
    points.append(CLLocationCoordinate2D(latitude: 46.2924, longitude: -124.0212))
    points.append(CLLocationCoordinate2D(latitude: 46.2677, longitude: -123.9711))
    points.append(CLLocationCoordinate2D(latitude: 46.2383, longitude: -123.9292))
    points.append(CLLocationCoordinate2D(latitude: 46.2350, longitude: -123.8729))
    points.append(CLLocationCoordinate2D(latitude: 46.2691, longitude: -123.7404))
    points.append(CLLocationCoordinate2D(latitude: 46.2497, longitude: -123.6875))
    points.append(CLLocationCoordinate2D(latitude: 46.2573, longitude: -123.6209))
    points.append(CLLocationCoordinate2D(latitude: 46.2582, longitude: -123.5557))
    points.append(CLLocationCoordinate2D(latitude: 46.2691, longitude: -123.4946))
    points.append(CLLocationCoordinate2D(latitude: 46.2293, longitude: -123.4287))
    points.append(CLLocationCoordinate2D(latitude: 46.1822, longitude: -123.4314))
    points.append(CLLocationCoordinate2D(latitude: 46.1470, longitude: -123.3703))
    points.append(CLLocationCoordinate2D(latitude: 46.1446, longitude: -123.2810))
    points.append(CLLocationCoordinate2D(latitude: 46.1893, longitude: -123.1664))
    points.append(CLLocationCoordinate2D(latitude: 46.1865, longitude: -123.1210))
    points.append(CLLocationCoordinate2D(latitude: 46.1556, longitude: -123.0579))
    points.append(CLLocationCoordinate2D(latitude: 46.1028, longitude: -122.9597))
    points.append(CLLocationCoordinate2D(latitude: 46.0832, longitude: -122.9034))
    points.append(CLLocationCoordinate2D(latitude: 46.0604, longitude: -122.8848))
    points.append(CLLocationCoordinate2D(latitude: 46.0160, longitude: -122.8587))
    points.append(CLLocationCoordinate2D(latitude: 45.9612, longitude: -122.8148))
    points.append(CLLocationCoordinate2D(latitude: 45.9120, longitude: -122.8114))
    points.append(CLLocationCoordinate2D(latitude: 45.8642, longitude: -122.7839))
    points.append(CLLocationCoordinate2D(latitude: 45.8106, longitude: -122.7962))
    points.append(CLLocationCoordinate2D(latitude: 45.7613, longitude: -122.7619))
    points.append(CLLocationCoordinate2D(latitude: 45.6817, longitude: -122.7750))
    points.append(CLLocationCoordinate2D(latitude: 45.6582, longitude: -122.7647))
    points.append(CLLocationCoordinate2D(latitude: 45.6236, longitude: -122.6891))
    points.append(CLLocationCoordinate2D(latitude: 45.6006, longitude: -122.5676))
    points.append(CLLocationCoordinate2D(latitude: 45.5636, longitude: -122.4392))
    points.append(CLLocationCoordinate2D(latitude: 45.5756, longitude: -122.3795))
    points.append(CLLocationCoordinate2D(latitude: 45.5482, longitude: -122.3321))
    points.append(CLLocationCoordinate2D(latitude: 45.5439, longitude: -122.2641))
    points.append(CLLocationCoordinate2D(latitude: 45.5660, longitude: -122.2009))
    points.append(CLLocationCoordinate2D(latitude: 45.5838, longitude: -122.1426))
    points.append(CLLocationCoordinate2D(latitude: 45.5833, longitude: -122.1089))
    points.append(CLLocationCoordinate2D(latitude: 45.6088, longitude: -122.0451))
    points.append(CLLocationCoordinate2D(latitude: 45.6452, longitude: -121.9338))
    points.append(CLLocationCoordinate2D(latitude: 45.7067, longitude: -121.8095))
    points.append(CLLocationCoordinate2D(latitude: 45.6947, longitude: -121.7361))
    points.append(CLLocationCoordinate2D(latitude: 45.7091, longitude: -121.6145))
    points.append(CLLocationCoordinate2D(latitude: 45.7263, longitude: -121.5328))
    points.append(CLLocationCoordinate2D(latitude: 45.6932, longitude: -121.4010))
    points.append(CLLocationCoordinate2D(latitude: 45.7057, longitude: -121.3392))
    points.append(CLLocationCoordinate2D(latitude: 45.6721, longitude: -121.2177))
    points.append(CLLocationCoordinate2D(latitude: 45.6083, longitude: -121.1847))
    points.append(CLLocationCoordinate2D(latitude: 45.6078, longitude: -121.1469))
    points.append(CLLocationCoordinate2D(latitude: 45.6529, longitude: -121.0645))
    points.append(CLLocationCoordinate2D(latitude: 45.6419, longitude: -120.9787))
    points.append(CLLocationCoordinate2D(latitude: 45.6572, longitude: -120.9471))
    points.append(CLLocationCoordinate2D(latitude: 45.6409, longitude: -120.9142))
    points.append(CLLocationCoordinate2D(latitude: 45.6721, longitude: -120.8558))
    points.append(CLLocationCoordinate2D(latitude: 45.7143, longitude: -120.6924))
    points.append(CLLocationCoordinate2D(latitude: 45.7460, longitude: -120.6340))
    points.append(CLLocationCoordinate2D(latitude: 45.7469, longitude: -120.5942))
    points.append(CLLocationCoordinate2D(latitude: 45.6951, longitude: -120.4829))
    points.append(CLLocationCoordinate2D(latitude: 45.7057, longitude: -120.3628))
    points.append(CLLocationCoordinate2D(latitude: 45.7258, longitude: -120.2110))
    points.append(CLLocationCoordinate2D(latitude: 45.7623, longitude: -120.1705))
    points.append(CLLocationCoordinate2D(latitude: 45.7852, longitude: -120.0710))
    points.append(CLLocationCoordinate2D(latitude: 45.8245, longitude: -119.9652))
    points.append(CLLocationCoordinate2D(latitude: 45.8278, longitude: -119.9096))
    points.append(CLLocationCoordinate2D(latitude: 45.8479, longitude: -119.8052))
    points.append(CLLocationCoordinate2D(latitude: 45.8565, longitude: -119.6700))
    points.append(CLLocationCoordinate2D(latitude: 45.9196, longitude: -119.6013))
    points.append(CLLocationCoordinate2D(latitude: 45.9249, longitude: -119.5724))
    points.append(CLLocationCoordinate2D(latitude: 45.9067, longitude: -119.4894))
    points.append(CLLocationCoordinate2D(latitude: 45.9172, longitude: -119.4386))
    points.append(CLLocationCoordinate2D(latitude: 45.9220, longitude: -119.3644))
    points.append(CLLocationCoordinate2D(latitude: 45.9354, longitude: -119.3047))
    points.append(CLLocationCoordinate2D(latitude: 45.9402, longitude: -119.2559))
    points.append(CLLocationCoordinate2D(latitude: 45.9278, longitude: -119.1708))
    points.append(CLLocationCoordinate2D(latitude: 45.9320, longitude: -119.1302))
    points.append(CLLocationCoordinate2D(latitude: 45.9998, longitude: -118.9867))
    points.append(CLLocationCoordinate2D(latitude: 46.0008, longitude: -118.0330))
    points.append(CLLocationCoordinate2D(latitude: 45.9960, longitude: -116.9165))
    points.append(CLLocationCoordinate2D(latitude: 45.9769, longitude: -116.8925))
    points.append(CLLocationCoordinate2D(latitude: 45.9545, longitude: -116.8739))
    points.append(CLLocationCoordinate2D(latitude: 45.9053, longitude: -116.8595))
    points.append(CLLocationCoordinate2D(latitude: 45.8642, longitude: -116.8046))
    points.append(CLLocationCoordinate2D(latitude: 45.8341, longitude: -116.7908))
    points.append(CLLocationCoordinate2D(latitude: 45.8159, longitude: -116.7586))
    points.append(CLLocationCoordinate2D(latitude: 45.8259, longitude: -116.7105))
    points.append(CLLocationCoordinate2D(latitude: 45.7805, longitude: -116.6597))
    points.append(CLLocationCoordinate2D(latitude: 45.7781, longitude: -116.5965))
    points.append(CLLocationCoordinate2D(latitude: 45.7843, longitude: -116.6357))
    points.append(CLLocationCoordinate2D(latitude: 45.7541, longitude: -116.5594))
    points.append(CLLocationCoordinate2D(latitude: 45.7340, longitude: -116.5354))
    points.append(CLLocationCoordinate2D(latitude: 45.6904, longitude: -116.5354))
    points.append(CLLocationCoordinate2D(latitude: 45.6140, longitude: -116.4640))
    points.append(CLLocationCoordinate2D(latitude: 45.5371, longitude: -116.5334))
    points.append(CLLocationCoordinate2D(latitude: 45.4630, longitude: -116.5553))
    points.append(CLLocationCoordinate2D(latitude: 45.4433, longitude: -116.5883))
    points.append(CLLocationCoordinate2D(latitude: 45.3984, longitude: -116.6185))
    points.append(CLLocationCoordinate2D(latitude: 45.3213, longitude: -116.6741))
    points.append(CLLocationCoordinate2D(latitude: 45.2178, longitude: -116.7105))
    points.append(CLLocationCoordinate2D(latitude: 45.1627, longitude: -116.7229))
    points.append(CLLocationCoordinate2D(latitude: 45.0968, longitude: -116.7819))
    points.append(CLLocationCoordinate2D(latitude: 45.0313, longitude: -116.8417))
    points.append(CLLocationCoordinate2D(latitude: 44.9896, longitude: -116.8554))
    points.append(CLLocationCoordinate2D(latitude: 44.9624, longitude: -116.8513))
    points.append(CLLocationCoordinate2D(latitude: 44.9356, longitude: -116.8327))
    points.append(CLLocationCoordinate2D(latitude: 44.8568, longitude: -116.8980))
    points.append(CLLocationCoordinate2D(latitude: 44.7921, longitude: -116.9316))
    points.append(CLLocationCoordinate2D(latitude: 44.7423, longitude: -117.0442))
    points.append(CLLocationCoordinate2D(latitude: 44.5376, longitude: -117.1458))
    points.append(CLLocationCoordinate2D(latitude: 44.5234, longitude: -117.1836))
    points.append(CLLocationCoordinate2D(latitude: 44.4769, longitude: -117.2269))
    points.append(CLLocationCoordinate2D(latitude: 44.3813, longitude: -117.2372))
    points.append(CLLocationCoordinate2D(latitude: 44.3445, longitude: -117.1994))
    points.append(CLLocationCoordinate2D(latitude: 44.2973, longitude: -117.2255))
    points.append(CLLocationCoordinate2D(latitude: 44.2590, longitude: -117.1541))
    points.append(CLLocationCoordinate2D(latitude: 44.2806, longitude: -117.1122))
    points.append(CLLocationCoordinate2D(latitude: 44.2585, longitude: -117.0895))
    points.append(CLLocationCoordinate2D(latitude: 44.2304, longitude: -117.0525))
    points.append(CLLocationCoordinate2D(latitude: 44.2486, longitude: -117.0339))
    points.append(CLLocationCoordinate2D(latitude: 44.2442, longitude: -116.9810))
    points.append(CLLocationCoordinate2D(latitude: 44.1965, longitude: -116.9714))
    points.append(CLLocationCoordinate2D(latitude: 44.1561, longitude: -116.8945))
    points.append(CLLocationCoordinate2D(latitude: 44.1014, longitude: -116.9330))
    points.append(CLLocationCoordinate2D(latitude: 44.0491, longitude: -116.9735))
    points.append(CLLocationCoordinate2D(latitude: 44.0244, longitude: -116.9302))
    points.append(CLLocationCoordinate2D(latitude: 43.9073, longitude: -116.9776))
    points.append(CLLocationCoordinate2D(latitude: 43.8632, longitude: -117.0030))
    points.append(CLLocationCoordinate2D(latitude: 43.8330, longitude: -117.0325))
    points.append(CLLocationCoordinate2D(latitude: 43.7820, longitude: -117.0277))
    points.append(CLLocationCoordinate2D(latitude: 43.6639, longitude: -117.0264))
    points.append(CLLocationCoordinate2D(latitude: 42.0024, longitude: -117.0264))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -121.2836))
    points.append(CLLocationCoordinate2D(latitude: 42.0085, longitude: -122.5003))
    points.append(CLLocationCoordinate2D(latitude: 42.0064, longitude: -123.0798))
    points.append(CLLocationCoordinate2D(latitude: 42.0105, longitude: -123.1540))
    points.append(CLLocationCoordinate2D(latitude: 42.0044, longitude: -123.2419))
    points.append(CLLocationCoordinate2D(latitude: 42.0024, longitude: -123.6209))
    points.append(CLLocationCoordinate2D(latitude: 41.9952, longitude: -124.3982))
    points.append(CLLocationCoordinate2D(latitude: 42.1593, longitude: -124.5493))
    points.append(CLLocationCoordinate2D(latitude: 42.6521, longitude: -124.5877))
    points.append(CLLocationCoordinate2D(latitude: 42.8115, longitude: -124.7305))
    points.append(CLLocationCoordinate2D(latitude: 43.7552, longitude: -124.4119))
    points.append(CLLocationCoordinate2D(latitude: 46.0065, longitude: -124.2554))
    points.append(CLLocationCoordinate2D(latitude: 46.2587, longitude: -124.2444))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Oregon", abbreviation: "OR", polygon: poly)
}


func createPennsylvania()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 42.3229, longitude: -80.5195))
    points.append(CLLocationCoordinate2D(latitude: 42.3961, longitude: -80.0821))
    points.append(CLLocationCoordinate2D(latitude: 42.5167, longitude: -79.7621))
    points.append(CLLocationCoordinate2D(latitude: 42.0003, longitude: -79.7607))
    points.append(CLLocationCoordinate2D(latitude: 41.9983, longitude: -75.3580))
    points.append(CLLocationCoordinate2D(latitude: 41.9431, longitude: -75.2673))
    points.append(CLLocationCoordinate2D(latitude: 41.8696, longitude: -75.1794))
    points.append(CLLocationCoordinate2D(latitude: 41.7713, longitude: -75.0586))
    points.append(CLLocationCoordinate2D(latitude: 41.6729, longitude: -75.0366))
    points.append(CLLocationCoordinate2D(latitude: 41.6021, longitude: -75.0641))
    points.append(CLLocationCoordinate2D(latitude: 41.5086, longitude: -74.9927))
    points.append(CLLocationCoordinate2D(latitude: 41.4283, longitude: -74.7935))
    points.append(CLLocationCoordinate2D(latitude: 41.3933, longitude: -74.7070))
    points.append(CLLocationCoordinate2D(latitude: 41.2282, longitude: -74.8608))
    points.append(CLLocationCoordinate2D(latitude: 40.9830, longitude: -75.1355))
    points.append(CLLocationCoordinate2D(latitude: 40.8554, longitude: -75.0490))
    points.append(CLLocationCoordinate2D(latitude: 40.6806, longitude: -75.1904))
    points.append(CLLocationCoordinate2D(latitude: 40.5639, longitude: -75.2124))
    points.append(CLLocationCoordinate2D(latitude: 40.5743, longitude: -75.1025))
    points.append(CLLocationCoordinate2D(latitude: 40.5013, longitude: -75.0600))
    points.append(CLLocationCoordinate2D(latitude: 40.4208, longitude: -75.0655))
    points.append(CLLocationCoordinate2D(latitude: 40.4072, longitude: -74.9776))
    points.append(CLLocationCoordinate2D(latitude: 40.3392, longitude: -74.9432))
    points.append(CLLocationCoordinate2D(latitude: 40.2628, longitude: -74.8389))
    points.append(CLLocationCoordinate2D(latitude: 40.1495, longitude: -74.7221))
    points.append(CLLocationCoordinate2D(latitude: 39.9592, longitude: -75.0929))
    points.append(CLLocationCoordinate2D(latitude: 39.8370, longitude: -75.2577))
    points.append(CLLocationCoordinate2D(latitude: 39.8015, longitude: -75.4146))
    points.append(CLLocationCoordinate2D(latitude: 39.8249, longitude: -75.4692))
    points.append(CLLocationCoordinate2D(latitude: 39.8296, longitude: -75.6477))
    points.append(CLLocationCoordinate2D(latitude: 39.7199, longitude: -75.7906))
    points.append(CLLocationCoordinate2D(latitude: 39.7222, longitude: -75.7886))
    points.append(CLLocationCoordinate2D(latitude: 39.7216, longitude: -80.5191))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Pennsylvania", abbreviation: "PN", polygon: poly)
}


func createRhodeIsland()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 41.3706, longitude: -71.0568))
    points.append(CLLocationCoordinate2D(latitude: 41.4973, longitude: -71.1214))
    points.append(CLLocationCoordinate2D(latitude: 41.5939, longitude: -71.1310))
    points.append(CLLocationCoordinate2D(latitude: 41.6124, longitude: -71.1433))
    points.append(CLLocationCoordinate2D(latitude: 41.6616, longitude: -71.1351))
    points.append(CLLocationCoordinate2D(latitude: 41.6719, longitude: -71.1914))
    points.append(CLLocationCoordinate2D(latitude: 41.7529, longitude: -71.2628))
    points.append(CLLocationCoordinate2D(latitude: 41.7816, longitude: -71.3342))
    points.append(CLLocationCoordinate2D(latitude: 41.8245, longitude: -71.3493))
    points.append(CLLocationCoordinate2D(latitude: 41.8358, longitude: -71.3370))
    points.append(CLLocationCoordinate2D(latitude: 41.8981, longitude: -71.3387))
    points.append(CLLocationCoordinate2D(latitude: 41.8929, longitude: -71.3809))
    points.append(CLLocationCoordinate2D(latitude: 42.0186, longitude: -71.3813))
    points.append(CLLocationCoordinate2D(latitude: 42.0080, longitude: -71.7991))
    points.append(CLLocationCoordinate2D(latitude: 41.6832, longitude: -71.7874))
    points.append(CLLocationCoordinate2D(latitude: 41.4165, longitude: -71.7984))
    points.append(CLLocationCoordinate2D(latitude: 41.3892, longitude: -71.8341))
    points.append(CLLocationCoordinate2D(latitude: 41.3273, longitude: -71.8526))
    points.append(CLLocationCoordinate2D(latitude: 41.3103, longitude: -71.9302))
    points.append(CLLocationCoordinate2D(latitude: 41.1849, longitude: -71.7915))
    points.append(CLLocationCoordinate2D(latitude: 41.2665, longitude: -71.4084))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Rhode Island", abbreviation: "RI", polygon: poly)
}


func createSouthCarolina()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 34.9996, longitude: -83.1088))
    points.append(CLLocationCoordinate2D(latitude: 35.0817, longitude: -82.7861))
    points.append(CLLocationCoordinate2D(latitude: 35.0637, longitude: -82.7765))
    points.append(CLLocationCoordinate2D(latitude: 35.2041, longitude: -82.3933))
    points.append(CLLocationCoordinate2D(latitude: 35.1985, longitude: -82.2739))
    points.append(CLLocationCoordinate2D(latitude: 35.1660, longitude: -81.3867))
    points.append(CLLocationCoordinate2D(latitude: 35.1457, longitude: -81.0324))
    points.append(CLLocationCoordinate2D(latitude: 35.0446, longitude: -81.0324))
    points.append(CLLocationCoordinate2D(latitude: 35.1019, longitude: -80.9322))
    points.append(CLLocationCoordinate2D(latitude: 34.9344, longitude: -80.7811))
    points.append(CLLocationCoordinate2D(latitude: 34.8194, longitude: -80.7948))
    points.append(CLLocationCoordinate2D(latitude: 34.8048, longitude: -79.6756))
    points.append(CLLocationCoordinate2D(latitude: 34.2016, longitude: -78.9560))
    points.append(CLLocationCoordinate2D(latitude: 33.7951, longitude: -78.4836))
    points.append(CLLocationCoordinate2D(latitude: 33.6489, longitude: -78.7871))
    points.append(CLLocationCoordinate2D(latitude: 33.2019, longitude: -79.0837))
    points.append(CLLocationCoordinate2D(latitude: 32.7607, longitude: -79.4476))
    points.append(CLLocationCoordinate2D(latitude: 32.5225, longitude: -79.8116))
    points.append(CLLocationCoordinate2D(latitude: 32.3556, longitude: -80.1508))
    points.append(CLLocationCoordinate2D(latitude: 32.2012, longitude: -80.4240))
    points.append(CLLocationCoordinate2D(latitude: 32.0500, longitude: -80.7001))
    points.append(CLLocationCoordinate2D(latitude: 32.0333, longitude: -80.7509))
    points.append(CLLocationCoordinate2D(latitude: 32.0382, longitude: -80.9215))
    points.append(CLLocationCoordinate2D(latitude: 32.1128, longitude: -81.1134))
    points.append(CLLocationCoordinate2D(latitude: 32.2151, longitude: -81.1436))
    points.append(CLLocationCoordinate2D(latitude: 32.3185, longitude: -81.1642))
    points.append(CLLocationCoordinate2D(latitude: 32.4576, longitude: -81.1945))
    points.append(CLLocationCoordinate2D(latitude: 32.5283, longitude: -81.2769))
    points.append(CLLocationCoordinate2D(latitude: 32.6272, longitude: -81.4176))
    points.append(CLLocationCoordinate2D(latitude: 32.6914, longitude: -81.4142))
    points.append(CLLocationCoordinate2D(latitude: 32.9418, longitude: -81.5089))
    points.append(CLLocationCoordinate2D(latitude: 33.0075, longitude: -81.5034))
    points.append(CLLocationCoordinate2D(latitude: 33.0881, longitude: -81.6078))
    points.append(CLLocationCoordinate2D(latitude: 33.1456, longitude: -81.7424))
    points.append(CLLocationCoordinate2D(latitude: 33.1674, longitude: -81.7795))
    points.append(CLLocationCoordinate2D(latitude: 33.2077, longitude: -81.8303))
    points.append(CLLocationCoordinate2D(latitude: 33.3707, longitude: -81.9484))
    points.append(CLLocationCoordinate2D(latitude: 33.4588, longitude: -81.9240))
    points.append(CLLocationCoordinate2D(latitude: 33.5301, longitude: -82.0097))
    points.append(CLLocationCoordinate2D(latitude: 33.5963, longitude: -82.1558))
    points.append(CLLocationCoordinate2D(latitude: 33.6592, longitude: -82.1997))
    points.append(CLLocationCoordinate2D(latitude: 33.7563, longitude: -82.2505))
    points.append(CLLocationCoordinate2D(latitude: 33.8647, longitude: -82.3988))
    points.append(CLLocationCoordinate2D(latitude: 34.0140, longitude: -82.5952))
    points.append(CLLocationCoordinate2D(latitude: 34.1254, longitude: -82.6831))
    points.append(CLLocationCoordinate2D(latitude: 34.2674, longitude: -82.7490))
    points.append(CLLocationCoordinate2D(latitude: 34.4443, longitude: -82.8589))
    points.append(CLLocationCoordinate2D(latitude: 34.4681, longitude: -82.8918))
    points.append(CLLocationCoordinate2D(latitude: 34.4839, longitude: -83.0072))
    points.append(CLLocationCoordinate2D(latitude: 34.5744, longitude: -83.1528))
    points.append(CLLocationCoordinate2D(latitude: 34.6569, longitude: -83.3080))
    points.append(CLLocationCoordinate2D(latitude: 34.7281, longitude: -83.3560))
    points.append(CLLocationCoordinate2D(latitude: 34.8318, longitude: -83.3025))
    points.append(CLLocationCoordinate2D(latitude: 34.9287, longitude: -83.1418))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "South Carolina", abbreviation: "SC", polygon: poly)
}


func createSouthDakota()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 45.9445, longitude: -104.0446))
    points.append(CLLocationCoordinate2D(latitude: 45.9311, longitude: -96.5643))
    points.append(CLLocationCoordinate2D(latitude: 45.8202, longitude: -96.5849))
    points.append(CLLocationCoordinate2D(latitude: 45.6160, longitude: -96.8472))
    points.append(CLLocationCoordinate2D(latitude: 45.4601, longitude: -96.7429))
    points.append(CLLocationCoordinate2D(latitude: 45.2981, longitude: -96.4545))
    points.append(CLLocationCoordinate2D(latitude: 43.5008, longitude: -96.4517))
    points.append(CLLocationCoordinate2D(latitude: 43.4818, longitude: -96.6110))
    points.append(CLLocationCoordinate2D(latitude: 43.3871, longitude: -96.5245))
    points.append(CLLocationCoordinate2D(latitude: 43.2232, longitude: -96.5533))
    points.append(CLLocationCoordinate2D(latitude: 43.1301, longitude: -96.4421))
    points.append(CLLocationCoordinate2D(latitude: 42.9243, longitude: -96.5479))
    points.append(CLLocationCoordinate2D(latitude: 42.7188, longitude: -96.6357))
    points.append(CLLocationCoordinate2D(latitude: 42.6158, longitude: -96.5561))
    points.append(CLLocationCoordinate2D(latitude: 42.5055, longitude: -96.4847))
    points.append(CLLocationCoordinate2D(latitude: 42.4772, longitude: -96.4806))
    points.append(CLLocationCoordinate2D(latitude: 42.5237, longitude: -96.6220))
    points.append(CLLocationCoordinate2D(latitude: 42.7157, longitude: -96.8486))
    points.append(CLLocationCoordinate2D(latitude: 42.8075, longitude: -97.2057))
    points.append(CLLocationCoordinate2D(latitude: 42.8518, longitude: -97.2290))
    points.append(CLLocationCoordinate2D(latitude: 42.8599, longitude: -97.8566))
    points.append(CLLocationCoordinate2D(latitude: 42.7631, longitude: -97.9761))
    points.append(CLLocationCoordinate2D(latitude: 42.7773, longitude: -98.0571))
    points.append(CLLocationCoordinate2D(latitude: 42.8438, longitude: -98.1958))
    points.append(CLLocationCoordinate2D(latitude: 42.9283, longitude: -98.4444))
    points.append(CLLocationCoordinate2D(latitude: 42.9946, longitude: -98.4993))
    points.append(CLLocationCoordinate2D(latitude: 43.0026, longitude: -104.0529))
    points.append(CLLocationCoordinate2D(latitude: 44.9970, longitude: -104.0577))
    points.append(CLLocationCoordinate2D(latitude: 44.9976, longitude: -104.0398))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "South Dakota", abbreviation: "SD", polygon: poly)
}


func createTennessee()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.6778, longitude: -88.0700))
    points.append(CLLocationCoordinate2D(latitude: 36.6633, longitude: -87.8494))
    points.append(CLLocationCoordinate2D(latitude: 36.6331, longitude: -87.8530))
    points.append(CLLocationCoordinate2D(latitude: 36.6524, longitude: -86.5489))
    points.append(CLLocationCoordinate2D(latitude: 36.5827, longitude: -83.6906))
    points.append(CLLocationCoordinate2D(latitude: 36.6007, longitude: -83.6753))
    points.append(CLLocationCoordinate2D(latitude: 36.5942, longitude: -81.9338))
    points.append(CLLocationCoordinate2D(latitude: 36.6160, longitude: -81.9225))
    points.append(CLLocationCoordinate2D(latitude: 36.6119, longitude: -81.6468))
    points.append(CLLocationCoordinate2D(latitude: 36.5882, longitude: -81.6773))
    points.append(CLLocationCoordinate2D(latitude: 36.4122, longitude: -81.7407))
    points.append(CLLocationCoordinate2D(latitude: 36.3359, longitude: -81.7077))
    points.append(CLLocationCoordinate2D(latitude: 36.3569, longitude: -81.7956))
    points.append(CLLocationCoordinate2D(latitude: 36.2974, longitude: -81.9072))
    points.append(CLLocationCoordinate2D(latitude: 36.1212, longitude: -82.0308))
    points.append(CLLocationCoordinate2D(latitude: 36.1024, longitude: -82.1255))
    points.append(CLLocationCoordinate2D(latitude: 36.1434, longitude: -82.1475))
    points.append(CLLocationCoordinate2D(latitude: 36.1323, longitude: -82.2450))
    points.append(CLLocationCoordinate2D(latitude: 36.1168, longitude: -82.3521))
    points.append(CLLocationCoordinate2D(latitude: 36.0702, longitude: -82.4167))
    points.append(CLLocationCoordinate2D(latitude: 35.9669, longitude: -82.5389))
    points.append(CLLocationCoordinate2D(latitude: 35.9702, longitude: -82.6076))
    points.append(CLLocationCoordinate2D(latitude: 36.0602, longitude: -82.6378))
    points.append(CLLocationCoordinate2D(latitude: 35.9925, longitude: -82.7751))
    points.append(CLLocationCoordinate2D(latitude: 35.9169, longitude: -82.8177))
    points.append(CLLocationCoordinate2D(latitude: 35.8623, longitude: -82.9042))
    points.append(CLLocationCoordinate2D(latitude: 35.7755, longitude: -83.0017))
    points.append(CLLocationCoordinate2D(latitude: 35.7131, longitude: -83.2393))
    points.append(CLLocationCoordinate2D(latitude: 35.5635, longitude: -83.4961))
    points.append(CLLocationCoordinate2D(latitude: 35.5501, longitude: -83.6938))
    points.append(CLLocationCoordinate2D(latitude: 35.5233, longitude: -83.8284))
    points.append(CLLocationCoordinate2D(latitude: 35.5065, longitude: -83.8847))
    points.append(CLLocationCoordinate2D(latitude: 35.4014, longitude: -84.0248))
    points.append(CLLocationCoordinate2D(latitude: 35.2905, longitude: -84.0276))
    points.append(CLLocationCoordinate2D(latitude: 35.2322, longitude: -84.1113))
    points.append(CLLocationCoordinate2D(latitude: 35.2624, longitude: -84.2294))
    points.append(CLLocationCoordinate2D(latitude: 35.2198, longitude: -84.2926))
    points.append(CLLocationCoordinate2D(latitude: 34.9884, longitude: -84.3201))
    points.append(CLLocationCoordinate2D(latitude: 34.9844, longitude: -85.6044))
    points.append(CLLocationCoordinate2D(latitude: 35.0078, longitude: -88.2024))
    points.append(CLLocationCoordinate2D(latitude: 34.9955, longitude: -88.1998))
    points.append(CLLocationCoordinate2D(latitude: 34.9955, longitude: -90.3090))
    points.append(CLLocationCoordinate2D(latitude: 35.0404, longitude: -90.2953))
    points.append(CLLocationCoordinate2D(latitude: 35.0280, longitude: -90.2067))
    points.append(CLLocationCoordinate2D(latitude: 35.1354, longitude: -90.1421))
    points.append(CLLocationCoordinate2D(latitude: 35.1985, longitude: -90.1112))
    points.append(CLLocationCoordinate2D(latitude: 35.2849, longitude: -90.1524))
    points.append(CLLocationCoordinate2D(latitude: 35.4372, longitude: -90.1346))
    points.append(CLLocationCoordinate2D(latitude: 35.5568, longitude: -90.0192))
    points.append(CLLocationCoordinate2D(latitude: 35.7343, longitude: -89.9547))
    points.append(CLLocationCoordinate2D(latitude: 35.8579, longitude: -89.7638))
    points.append(CLLocationCoordinate2D(latitude: 35.9180, longitude: -89.6635))
    points.append(CLLocationCoordinate2D(latitude: 36.0004, longitude: -89.7329))
    points.append(CLLocationCoordinate2D(latitude: 36.0009, longitude: -89.7068))
    points.append(CLLocationCoordinate2D(latitude: 36.0902, longitude: -89.6759))
    points.append(CLLocationCoordinate2D(latitude: 36.1279, longitude: -89.5894))
    points.append(CLLocationCoordinate2D(latitude: 36.1856, longitude: -89.6484))
    points.append(CLLocationCoordinate2D(latitude: 36.2343, longitude: -89.7006))
    points.append(CLLocationCoordinate2D(latitude: 36.2531, longitude: -89.5331))
    points.append(CLLocationCoordinate2D(latitude: 36.2996, longitude: -89.6210))
    points.append(CLLocationCoordinate2D(latitude: 36.3494, longitude: -89.5784))
    points.append(CLLocationCoordinate2D(latitude: 36.3406, longitude: -89.5180))
    points.append(CLLocationCoordinate2D(latitude: 36.4979, longitude: -89.5389))
    points.append(CLLocationCoordinate2D(latitude: 36.4974, longitude: -89.4850))
    points.append(CLLocationCoordinate2D(latitude: 36.4573, longitude: -89.4689))
    points.append(CLLocationCoordinate2D(latitude: 36.4987, longitude: -89.4177))
    points.append(CLLocationCoordinate2D(latitude: 36.5107, longitude: -89.3051))
    points.append(CLLocationCoordinate2D(latitude: 36.4986, longitude: -88.1667))
    points.append(CLLocationCoordinate2D(latitude: 36.4997, longitude: -88.0692))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Tennessee", abbreviation: "TN", polygon: poly)
}


func createTexas()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 31.8659, longitude: -106.5715))
    points.append(CLLocationCoordinate2D(latitude: 31.7504, longitude: -106.5042))
    points.append(CLLocationCoordinate2D(latitude: 31.6242, longitude: -106.3092))
    points.append(CLLocationCoordinate2D(latitude: 31.4638, longitude: -106.2103))
    points.append(CLLocationCoordinate2D(latitude: 31.3912, longitude: -106.0181))
    points.append(CLLocationCoordinate2D(latitude: 31.1846, longitude: -105.7874))
    points.append(CLLocationCoordinate2D(latitude: 31.0012, longitude: -105.5663))
    points.append(CLLocationCoordinate2D(latitude: 30.8456, longitude: -105.4015))
    points.append(CLLocationCoordinate2D(latitude: 30.6462, longitude: -105.0032))
    points.append(CLLocationCoordinate2D(latitude: 30.3847, longitude: -104.8521))
    points.append(CLLocationCoordinate2D(latitude: 30.2591, longitude: -104.7437))
    points.append(CLLocationCoordinate2D(latitude: 30.0738, longitude: -104.6915))
    points.append(CLLocationCoordinate2D(latitude: 29.9169, longitude: -104.6777))
    points.append(CLLocationCoordinate2D(latitude: 29.7644, longitude: -104.5679))
    points.append(CLLocationCoordinate2D(latitude: 29.6475, longitude: -104.5280))
    points.append(CLLocationCoordinate2D(latitude: 29.5603, longitude: -104.4044))
    points.append(CLLocationCoordinate2D(latitude: 29.4719, longitude: -104.2067))
    points.append(CLLocationCoordinate2D(latitude: 29.3834, longitude: -104.1559))
    points.append(CLLocationCoordinate2D(latitude: 29.2948, longitude: -103.9774))
    points.append(CLLocationCoordinate2D(latitude: 29.2804, longitude: -103.9128))
    points.append(CLLocationCoordinate2D(latitude: 29.2481, longitude: -103.8208))
    points.append(CLLocationCoordinate2D(latitude: 29.1378, longitude: -103.5640))
    points.append(CLLocationCoordinate2D(latitude: 29.0682, longitude: -103.4692))
    points.append(CLLocationCoordinate2D(latitude: 29.0105, longitude: -103.3154))
    points.append(CLLocationCoordinate2D(latitude: 28.9601, longitude: -103.1616))
    points.append(CLLocationCoordinate2D(latitude: 29.0177, longitude: -103.0957))
    points.append(CLLocationCoordinate2D(latitude: 29.1330, longitude: -103.0298))
    points.append(CLLocationCoordinate2D(latitude: 29.2157, longitude: -102.8677))
    points.append(CLLocationCoordinate2D(latitude: 29.2565, longitude: -102.8979))
    points.append(CLLocationCoordinate2D(latitude: 29.3570, longitude: -102.8375))
    points.append(CLLocationCoordinate2D(latitude: 29.4898, longitude: -102.8004))
    points.append(CLLocationCoordinate2D(latitude: 29.6881, longitude: -102.7002))
    points.append(CLLocationCoordinate2D(latitude: 29.7691, longitude: -102.5134))
    points.append(CLLocationCoordinate2D(latitude: 29.7596, longitude: -102.3843))
    points.append(CLLocationCoordinate2D(latitude: 29.8788, longitude: -102.3047))
    points.append(CLLocationCoordinate2D(latitude: 29.7834, longitude: -102.1509))
    points.append(CLLocationCoordinate2D(latitude: 29.7572, longitude: -101.7004))
    points.append(CLLocationCoordinate2D(latitude: 29.7644, longitude: -101.4917))
    points.append(CLLocationCoordinate2D(latitude: 29.6308, longitude: -101.2939))
    points.append(CLLocationCoordinate2D(latitude: 29.5269, longitude: -101.2582))
    points.append(CLLocationCoordinate2D(latitude: 29.3642, longitude: -101.0056))
    points.append(CLLocationCoordinate2D(latitude: 29.3056, longitude: -100.9204))
    points.append(CLLocationCoordinate2D(latitude: 29.1642, longitude: -100.7707))
    points.append(CLLocationCoordinate2D(latitude: 29.0946, longitude: -100.7007))
    points.append(CLLocationCoordinate2D(latitude: 28.9012, longitude: -100.6306))
    points.append(CLLocationCoordinate2D(latitude: 28.6593, longitude: -100.4974))
    points.append(CLLocationCoordinate2D(latitude: 28.4675, longitude: -100.3601))
    points.append(CLLocationCoordinate2D(latitude: 28.2778, longitude: -100.2969))
    points.append(CLLocationCoordinate2D(latitude: 28.1882, longitude: -100.1733))
    points.append(CLLocationCoordinate2D(latitude: 28.0526, longitude: -100.0195))
    points.append(CLLocationCoordinate2D(latitude: 27.9435, longitude: -99.9344))
    points.append(CLLocationCoordinate2D(latitude: 27.7638, longitude: -99.8438))
    points.append(CLLocationCoordinate2D(latitude: 27.6641, longitude: -99.7119))
    points.append(CLLocationCoordinate2D(latitude: 27.4839, longitude: -99.4812))
    points.append(CLLocationCoordinate2D(latitude: 27.3059, longitude: -99.5375))
    points.append(CLLocationCoordinate2D(latitude: 27.1948, longitude: -99.4290))
    points.append(CLLocationCoordinate2D(latitude: 27.0175, longitude: -99.4455))
    points.append(CLLocationCoordinate2D(latitude: 26.8829, longitude: -99.3164))
    points.append(CLLocationCoordinate2D(latitude: 26.6867, longitude: -99.2065))
    points.append(CLLocationCoordinate2D(latitude: 26.4116, longitude: -99.0967))
    points.append(CLLocationCoordinate2D(latitude: 26.3574, longitude: -98.8138))
    points.append(CLLocationCoordinate2D(latitude: 26.2257, longitude: -98.6668))
    points.append(CLLocationCoordinate2D(latitude: 26.2343, longitude: -98.5474))
    points.append(CLLocationCoordinate2D(latitude: 26.1357, longitude: -98.3276))
    points.append(CLLocationCoordinate2D(latitude: 26.0457, longitude: -98.1697))
    points.append(CLLocationCoordinate2D(latitude: 26.0518, longitude: -97.9143))
    points.append(CLLocationCoordinate2D(latitude: 26.0050, longitude: -97.6643))
    points.append(CLLocationCoordinate2D(latitude: 25.8419, longitude: -97.4020))
    points.append(CLLocationCoordinate2D(latitude: 25.9074, longitude: -97.3526))
    points.append(CLLocationCoordinate2D(latitude: 25.9679, longitude: -97.0148))
    points.append(CLLocationCoordinate2D(latitude: 26.1789, longitude: -97.0697))
    points.append(CLLocationCoordinate2D(latitude: 26.8253, longitude: -97.2249))
    points.append(CLLocationCoordinate2D(latitude: 27.4230, longitude: -97.0752))
    points.append(CLLocationCoordinate2D(latitude: 28.0599, longitude: -96.6096))
    points.append(CLLocationCoordinate2D(latitude: 28.4228, longitude: -95.9285))
    points.append(CLLocationCoordinate2D(latitude: 28.7568, longitude: -95.3036))
    points.append(CLLocationCoordinate2D(latitude: 29.0742, longitude: -94.7296))
    points.append(CLLocationCoordinate2D(latitude: 29.3810, longitude: -94.3355))
    points.append(CLLocationCoordinate2D(latitude: 29.6021, longitude: -93.8205))
    points.append(CLLocationCoordinate2D(latitude: 29.8013, longitude: -93.9317))
    points.append(CLLocationCoordinate2D(latitude: 29.9157, longitude: -93.8136))
    points.append(CLLocationCoordinate2D(latitude: 30.0489, longitude: -93.7230))
    points.append(CLLocationCoordinate2D(latitude: 30.1214, longitude: -93.6996))
    points.append(CLLocationCoordinate2D(latitude: 30.2021, longitude: -93.7216))
    points.append(CLLocationCoordinate2D(latitude: 30.2792, longitude: -93.7038))
    points.append(CLLocationCoordinate2D(latitude: 30.3278, longitude: -93.7628))
    points.append(CLLocationCoordinate2D(latitude: 30.3835, longitude: -93.7587))
    points.append(CLLocationCoordinate2D(latitude: 30.4380, longitude: -93.7010))
    points.append(CLLocationCoordinate2D(latitude: 30.5079, longitude: -93.7024))
    points.append(CLLocationCoordinate2D(latitude: 30.5362, longitude: -93.7299))
    points.append(CLLocationCoordinate2D(latitude: 30.6296, longitude: -93.6694))
    points.append(CLLocationCoordinate2D(latitude: 30.7466, longitude: -93.6090))
    points.append(CLLocationCoordinate2D(latitude: 30.8114, longitude: -93.5527))
    points.append(CLLocationCoordinate2D(latitude: 30.8834, longitude: -93.5747))
    points.append(CLLocationCoordinate2D(latitude: 30.9376, longitude: -93.5307))
    points.append(CLLocationCoordinate2D(latitude: 31.0318, longitude: -93.5074))
    points.append(CLLocationCoordinate2D(latitude: 31.0812, longitude: -93.5266))
    points.append(CLLocationCoordinate2D(latitude: 31.1787, longitude: -93.5335))
    points.append(CLLocationCoordinate2D(latitude: 31.1670, longitude: -93.5980))
    points.append(CLLocationCoordinate2D(latitude: 31.3055, longitude: -93.6832))
    points.append(CLLocationCoordinate2D(latitude: 31.3830, longitude: -93.6708))
    points.append(CLLocationCoordinate2D(latitude: 31.4369, longitude: -93.6887))
    points.append(CLLocationCoordinate2D(latitude: 31.5107, longitude: -93.7202))
    points.append(CLLocationCoordinate2D(latitude: 31.5820, longitude: -93.8315))
    points.append(CLLocationCoordinate2D(latitude: 31.6440, longitude: -93.8123))
    points.append(CLLocationCoordinate2D(latitude: 31.7188, longitude: -93.8232))
    points.append(CLLocationCoordinate2D(latitude: 31.7936, longitude: -93.8342))
    points.append(CLLocationCoordinate2D(latitude: 31.8309, longitude: -93.8782))
    points.append(CLLocationCoordinate2D(latitude: 31.8869, longitude: -93.9221))
    points.append(CLLocationCoordinate2D(latitude: 31.9335, longitude: -93.9661))
    points.append(CLLocationCoordinate2D(latitude: 32.0081, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 33.4681, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 33.5414, longitude: -94.0430))
    points.append(CLLocationCoordinate2D(latitude: 33.5689, longitude: -94.1528))
    points.append(CLLocationCoordinate2D(latitude: 33.5872, longitude: -94.1968))
    points.append(CLLocationCoordinate2D(latitude: 33.5872, longitude: -94.2627))
    points.append(CLLocationCoordinate2D(latitude: 33.5689, longitude: -94.3176))
    points.append(CLLocationCoordinate2D(latitude: 33.5597, longitude: -94.3945))
    points.append(CLLocationCoordinate2D(latitude: 33.5780, longitude: -94.4275))
    points.append(CLLocationCoordinate2D(latitude: 33.6055, longitude: -94.4275))
    points.append(CLLocationCoordinate2D(latitude: 33.6421, longitude: -94.4495))
    points.append(CLLocationCoordinate2D(latitude: 33.6386, longitude: -94.4852))
    points.append(CLLocationCoordinate2D(latitude: 33.6421, longitude: -94.5236))
    points.append(CLLocationCoordinate2D(latitude: 33.6695, longitude: -94.6637))
    points.append(CLLocationCoordinate2D(latitude: 33.7061, longitude: -94.7461))
    points.append(CLLocationCoordinate2D(latitude: 33.7791, longitude: -94.8999))
    points.append(CLLocationCoordinate2D(latitude: 33.8818, longitude: -95.0757))
    points.append(CLLocationCoordinate2D(latitude: 33.9251, longitude: -95.1526))
    points.append(CLLocationCoordinate2D(latitude: 33.9604, longitude: -95.2254))
    points.append(CLLocationCoordinate2D(latitude: 33.8750, longitude: -95.2858))
    points.append(CLLocationCoordinate2D(latitude: 33.8841, longitude: -95.5399))
    points.append(CLLocationCoordinate2D(latitude: 33.8887, longitude: -95.7568))
    points.append(CLLocationCoordinate2D(latitude: 33.8408, longitude: -95.8420))
    points.append(CLLocationCoordinate2D(latitude: 33.8556, longitude: -96.0274))
    points.append(CLLocationCoordinate2D(latitude: 33.6901, longitude: -96.3528))
    points.append(CLLocationCoordinate2D(latitude: 33.8442, longitude: -96.6179))
    points.append(CLLocationCoordinate2D(latitude: 33.8898, longitude: -96.5836))
    points.append(CLLocationCoordinate2D(latitude: 33.8955, longitude: -96.6673))
    points.append(CLLocationCoordinate2D(latitude: 33.8179, longitude: -96.7538))
    points.append(CLLocationCoordinate2D(latitude: 33.8613, longitude: -96.8335))
    points.append(CLLocationCoordinate2D(latitude: 33.8613, longitude: -96.8774))
    points.append(CLLocationCoordinate2D(latitude: 33.9388, longitude: -96.9159))
    points.append(CLLocationCoordinate2D(latitude: 33.7392, longitude: -97.0917))
    points.append(CLLocationCoordinate2D(latitude: 33.7449, longitude: -97.1645))
    points.append(CLLocationCoordinate2D(latitude: 33.8978, longitude: -97.2180))
    points.append(CLLocationCoordinate2D(latitude: 33.8225, longitude: -97.3746))
    points.append(CLLocationCoordinate2D(latitude: 33.8305, longitude: -97.4611))
    points.append(CLLocationCoordinate2D(latitude: 33.8761, longitude: -97.4460))
    points.append(CLLocationCoordinate2D(latitude: 33.9798, longitude: -97.6945))
    points.append(CLLocationCoordinate2D(latitude: 33.8476, longitude: -97.8648))
    points.append(CLLocationCoordinate2D(latitude: 33.8978, longitude: -97.9651))
    points.append(CLLocationCoordinate2D(latitude: 34.0299, longitude: -98.0983))
    points.append(CLLocationCoordinate2D(latitude: 34.1141, longitude: -98.1752))
    points.append(CLLocationCoordinate2D(latitude: 34.1425, longitude: -98.3743))
    points.append(CLLocationCoordinate2D(latitude: 34.0640, longitude: -98.4773))
    points.append(CLLocationCoordinate2D(latitude: 34.1209, longitude: -98.5529))
    points.append(CLLocationCoordinate2D(latitude: 34.1232, longitude: -98.7520))
    points.append(CLLocationCoordinate2D(latitude: 34.2095, longitude: -98.9539))
    points.append(CLLocationCoordinate2D(latitude: 34.2073, longitude: -99.0637))
    points.append(CLLocationCoordinate2D(latitude: 34.2141, longitude: -99.1832))
    points.append(CLLocationCoordinate2D(latitude: 34.3593, longitude: -99.2505))
    points.append(CLLocationCoordinate2D(latitude: 34.4613, longitude: -99.3823))
    points.append(CLLocationCoordinate2D(latitude: 34.3774, longitude: -99.4318))
    points.append(CLLocationCoordinate2D(latitude: 34.4160, longitude: -99.5718))
    points.append(CLLocationCoordinate2D(latitude: 34.3706, longitude: -99.6158))
    points.append(CLLocationCoordinate2D(latitude: 34.4726, longitude: -99.8094))
    points.append(CLLocationCoordinate2D(latitude: 34.5631, longitude: -99.9934))
    points.append(CLLocationCoordinate2D(latitude: 36.4975, longitude: -100.0017))
    points.append(CLLocationCoordinate2D(latitude: 36.5008, longitude: -103.0408))
    points.append(CLLocationCoordinate2D(latitude: 32.0011, longitude: -103.0655))
    points.append(CLLocationCoordinate2D(latitude: 32.0023, longitude: -106.6168))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Texas", abbreviation: "TX", polygon: poly)
}


func createUtah()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.9991, longitude: -109.0451))
    points.append(CLLocationCoordinate2D(latitude: 40.9986, longitude: -109.0503))
    points.append(CLLocationCoordinate2D(latitude: 41.0006, longitude: -111.0471))
    points.append(CLLocationCoordinate2D(latitude: 41.9993, longitude: -111.0498))
    points.append(CLLocationCoordinate2D(latitude: 41.9901, longitude: -114.0395))
    points.append(CLLocationCoordinate2D(latitude: 37.0001, longitude: -114.0508))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Utah", abbreviation: "UT", polygon: poly)
}


func createVirginia()->State{
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 36.6017, longitude: -83.6753))
    points.append(CLLocationCoordinate2D(latitude: 36.6519, longitude: -83.5613))
    points.append(CLLocationCoordinate2D(latitude: 36.6673, longitude: -83.4432))
    points.append(CLLocationCoordinate2D(latitude: 36.7108, longitude: -83.3080))
    points.append(CLLocationCoordinate2D(latitude: 36.7389, longitude: -83.1974))
    points.append(CLLocationCoordinate2D(latitude: 36.7433, longitude: -83.1363))
    points.append(CLLocationCoordinate2D(latitude: 36.8032, longitude: -83.1047))
    points.append(CLLocationCoordinate2D(latitude: 36.8302, longitude: -83.1033))
    points.append(CLLocationCoordinate2D(latitude: 36.8544, longitude: -83.0704))
    points.append(CLLocationCoordinate2D(latitude: 36.8478, longitude: -83.0127))
    points.append(CLLocationCoordinate2D(latitude: 36.9839, longitude: -82.8534))
    points.append(CLLocationCoordinate2D(latitude: 37.0086, longitude: -82.7971))
    points.append(CLLocationCoordinate2D(latitude: 37.0442, longitude: -82.7360))
    points.append(CLLocationCoordinate2D(latitude: 37.2664, longitude: -82.3494))
    points.append(CLLocationCoordinate2D(latitude: 37.3046, longitude: -82.3027))
    points.append(CLLocationCoordinate2D(latitude: 37.5054, longitude: -82.0136))
    points.append(CLLocationCoordinate2D(latitude: 37.5380, longitude: -81.9681))
    points.append(CLLocationCoordinate2D(latitude: 37.5139, longitude: -81.9259))
    points.append(CLLocationCoordinate2D(latitude: 37.4889, longitude: -81.9707))
    points.append(CLLocationCoordinate2D(latitude: 37.4563, longitude: -81.9800))
    points.append(CLLocationCoordinate2D(latitude: 37.4389, longitude: -81.9374))
    points.append(CLLocationCoordinate2D(latitude: 37.3592, longitude: -81.9319))
    points.append(CLLocationCoordinate2D(latitude: 37.3134, longitude: -81.8619))
    points.append(CLLocationCoordinate2D(latitude: 37.2872, longitude: -81.7987))
    points.append(CLLocationCoordinate2D(latitude: 37.2424, longitude: -81.7259))
    points.append(CLLocationCoordinate2D(latitude: 37.2008, longitude: -81.6792))
    points.append(CLLocationCoordinate2D(latitude: 37.2083, longitude: -81.5549))
    points.append(CLLocationCoordinate2D(latitude: 37.2588, longitude: -81.4988))
    points.append(CLLocationCoordinate2D(latitude: 37.2456, longitude: -81.4856))
    points.append(CLLocationCoordinate2D(latitude: 37.2742, longitude: -81.4367))
    points.append(CLLocationCoordinate2D(latitude: 37.3243, longitude: -81.3675))
    points.append(CLLocationCoordinate2D(latitude: 37.2653, longitude: -81.2741))
    points.append(CLLocationCoordinate2D(latitude: 37.2719, longitude: -81.1560))
    points.append(CLLocationCoordinate2D(latitude: 37.3025, longitude: -80.9802))
    points.append(CLLocationCoordinate2D(latitude: 37.3396, longitude: -80.8566))
    points.append(CLLocationCoordinate2D(latitude: 37.3876, longitude: -80.8786))
    points.append(CLLocationCoordinate2D(latitude: 37.4247, longitude: -80.8511))
    points.append(CLLocationCoordinate2D(latitude: 37.3702, longitude: -80.7715))
    points.append(CLLocationCoordinate2D(latitude: 37.4749, longitude: -80.5518))
    points.append(CLLocationCoordinate2D(latitude: 37.4792, longitude: -80.5133))
    points.append(CLLocationCoordinate2D(latitude: 37.4247, longitude: -80.4803))
    points.append(CLLocationCoordinate2D(latitude: 37.5097, longitude: -80.3018))
    points.append(CLLocationCoordinate2D(latitude: 37.5359, longitude: -80.2798))
    points.append(CLLocationCoordinate2D(latitude: 37.5380, longitude: -80.3293))
    points.append(CLLocationCoordinate2D(latitude: 37.6316, longitude: -80.2249))
    points.append(CLLocationCoordinate2D(latitude: 37.6903, longitude: -80.3018))
    points.append(CLLocationCoordinate2D(latitude: 37.7251, longitude: -80.2551))
    points.append(CLLocationCoordinate2D(latitude: 37.7707, longitude: -80.2551))
    points.append(CLLocationCoordinate2D(latitude: 37.8347, longitude: -80.1961))
    points.append(CLLocationCoordinate2D(latitude: 37.8749, longitude: -80.1508))
    points.append(CLLocationCoordinate2D(latitude: 38.0394, longitude: -79.9722))
    points.append(CLLocationCoordinate2D(latitude: 38.1302, longitude: -79.9448))
    points.append(CLLocationCoordinate2D(latitude: 38.1972, longitude: -79.9063))
    points.append(CLLocationCoordinate2D(latitude: 38.2684, longitude: -79.7882))
    points.append(CLLocationCoordinate2D(latitude: 38.3093, longitude: -79.8129))
    points.append(CLLocationCoordinate2D(latitude: 38.3589, longitude: -79.7662))
    points.append(CLLocationCoordinate2D(latitude: 38.3513, longitude: -79.7401))
    points.append(CLLocationCoordinate2D(latitude: 38.3869, longitude: -79.7333))
    points.append(CLLocationCoordinate2D(latitude: 38.4321, longitude: -79.6893))
    points.append(CLLocationCoordinate2D(latitude: 38.4987, longitude: -79.6948))
    points.append(CLLocationCoordinate2D(latitude: 38.5857, longitude: -79.6495))
    points.append(CLLocationCoordinate2D(latitude: 38.5492, longitude: -79.5328))
    points.append(CLLocationCoordinate2D(latitude: 38.4557, longitude: -79.4724))
    points.append(CLLocationCoordinate2D(latitude: 38.4149, longitude: -79.3103))
    points.append(CLLocationCoordinate2D(latitude: 38.5138, longitude: -79.2087))
    points.append(CLLocationCoordinate2D(latitude: 38.6576, longitude: -79.1016))
    points.append(CLLocationCoordinate2D(latitude: 38.6941, longitude: -79.0851))
    points.append(CLLocationCoordinate2D(latitude: 38.7112, longitude: -79.1016))
    points.append(CLLocationCoordinate2D(latitude: 38.7712, longitude: -79.0576))
    points.append(CLLocationCoordinate2D(latitude: 38.7926, longitude: -79.0604))
    points.append(CLLocationCoordinate2D(latitude: 38.7926, longitude: -79.0247))
    points.append(CLLocationCoordinate2D(latitude: 38.8504, longitude: -78.9944))
    points.append(CLLocationCoordinate2D(latitude: 38.7637, longitude: -78.8736))
    points.append(CLLocationCoordinate2D(latitude: 38.8857, longitude: -78.7830))
    points.append(CLLocationCoordinate2D(latitude: 38.9327, longitude: -78.7198))
    points.append(CLLocationCoordinate2D(latitude: 38.9071, longitude: -78.7129))
    points.append(CLLocationCoordinate2D(latitude: 38.9850, longitude: -78.6291))
    points.append(CLLocationCoordinate2D(latitude: 38.9658, longitude: -78.6044))
    points.append(CLLocationCoordinate2D(latitude: 39.0170, longitude: -78.5522))
    points.append(CLLocationCoordinate2D(latitude: 39.0384, longitude: -78.5770))
    points.append(CLLocationCoordinate2D(latitude: 39.0938, longitude: -78.5083))
    points.append(CLLocationCoordinate2D(latitude: 39.1492, longitude: -78.4314))
    points.append(CLLocationCoordinate2D(latitude: 39.1684, longitude: -78.4039))
    points.append(CLLocationCoordinate2D(latitude: 39.1939, longitude: -78.4314))
    points.append(CLLocationCoordinate2D(latitude: 39.3470, longitude: -78.3380))
    points.append(CLLocationCoordinate2D(latitude: 39.3853, longitude: -78.3380))
    points.append(CLLocationCoordinate2D(latitude: 39.4659, longitude: -78.3469))
    points.append(CLLocationCoordinate2D(latitude: 39.2283, longitude: -77.9744))
    points.append(CLLocationCoordinate2D(latitude: 39.1338, longitude: -77.8302))
    points.append(CLLocationCoordinate2D(latitude: 39.3130, longitude: -77.7355))
    points.append(CLLocationCoordinate2D(latitude: 39.3202, longitude: -77.7159))
    points.append(CLLocationCoordinate2D(latitude: 39.3067, longitude: -77.6321))
    points.append(CLLocationCoordinate2D(latitude: 39.3051, longitude: -77.5666))
    points.append(CLLocationCoordinate2D(latitude: 39.2269, longitude: -77.4577))
    points.append(CLLocationCoordinate2D(latitude: 39.1804, longitude: -77.5092))
    points.append(CLLocationCoordinate2D(latitude: 39.1218, longitude: -77.5202))
    points.append(CLLocationCoordinate2D(latitude: 39.0792, longitude: -77.4636))
    points.append(CLLocationCoordinate2D(latitude: 39.0717, longitude: -77.4351))
    points.append(CLLocationCoordinate2D(latitude: 39.0634, longitude: -77.3431))
    points.append(CLLocationCoordinate2D(latitude: 39.0240, longitude: -77.2462))
    points.append(CLLocationCoordinate2D(latitude: 38.9773, longitude: -77.2335))
    points.append(CLLocationCoordinate2D(latitude: 38.9570, longitude: -77.1395))
    points.append(CLLocationCoordinate2D(latitude: 38.9025, longitude: -77.0708))
    points.append(CLLocationCoordinate2D(latitude: 38.8451, longitude: -77.0320))
    points.append(CLLocationCoordinate2D(latitude: 38.7766, longitude: -77.0416))
    points.append(CLLocationCoordinate2D(latitude: 38.7187, longitude: -77.0361))
    points.append(CLLocationCoordinate2D(latitude: 38.7112, longitude: -77.0760))
    points.append(CLLocationCoordinate2D(latitude: 38.6737, longitude: -77.1378))
    points.append(CLLocationCoordinate2D(latitude: 38.6373, longitude: -77.1281))
    points.append(CLLocationCoordinate2D(latitude: 38.5954, longitude: -77.2490))
    points.append(CLLocationCoordinate2D(latitude: 38.5514, longitude: -77.2737))
    points.append(CLLocationCoordinate2D(latitude: 38.4525, longitude: -77.3135))
    points.append(CLLocationCoordinate2D(latitude: 38.3320, longitude: -77.2627))
    points.append(CLLocationCoordinate2D(latitude: 38.3697, longitude: -77.1432))
    points.append(CLLocationCoordinate2D(latitude: 38.3697, longitude: -77.0897))
    points.append(CLLocationCoordinate2D(latitude: 38.4009, longitude: -77.0430))
    points.append(CLLocationCoordinate2D(latitude: 38.3761, longitude: -77.0114))
    points.append(CLLocationCoordinate2D(latitude: 38.3093, longitude: -77.0306))
    points.append(CLLocationCoordinate2D(latitude: 38.2748, longitude: -76.9908))
    points.append(CLLocationCoordinate2D(latitude: 38.2080, longitude: -76.9482))
    points.append(CLLocationCoordinate2D(latitude: 38.1637, longitude: -76.8494))
    points.append(CLLocationCoordinate2D(latitude: 38.1670, longitude: -76.7601))
    points.append(CLLocationCoordinate2D(latitude: 38.1616, longitude: -76.6928))
    points.append(CLLocationCoordinate2D(latitude: 38.1464, longitude: -76.6063))
    points.append(CLLocationCoordinate2D(latitude: 38.0751, longitude: -76.5363))
    points.append(CLLocationCoordinate2D(latitude: 38.0275, longitude: -76.5170))
    points.append(CLLocationCoordinate2D(latitude: 38.0146, longitude: -76.4703))
    points.append(CLLocationCoordinate2D(latitude: 37.9669, longitude: -76.4154))
    points.append(CLLocationCoordinate2D(latitude: 37.9474, longitude: -76.3454))
    points.append(CLLocationCoordinate2D(latitude: 37.8889, longitude: -76.2396))
    points.append(CLLocationCoordinate2D(latitude: 37.9529, longitude: -76.0584))
    points.append(CLLocationCoordinate2D(latitude: 37.9464, longitude: -75.9430))
    points.append(CLLocationCoordinate2D(latitude: 37.9095, longitude: -75.9512))
    points.append(CLLocationCoordinate2D(latitude: 37.9117, longitude: -75.8084))
    points.append(CLLocationCoordinate2D(latitude: 37.9529, longitude: -75.7288))
    points.append(CLLocationCoordinate2D(latitude: 37.9464, longitude: -75.6436))
    points.append(CLLocationCoordinate2D(latitude: 37.9951, longitude: -75.6230))
    points.append(CLLocationCoordinate2D(latitude: 37.9962, longitude: -75.6079))
    points.append(CLLocationCoordinate2D(latitude: 38.0275, longitude: -75.2316))
    points.append(CLLocationCoordinate2D(latitude: 38.0200, longitude: -74.9721))
    points.append(CLLocationCoordinate2D(latitude: 37.3625, longitude: -75.5777))
    points.append(CLLocationCoordinate2D(latitude: 36.8994, longitude: -75.8180))
    points.append(CLLocationCoordinate2D(latitude: 36.5516, longitude: -75.8043))
    points.append(CLLocationCoordinate2D(latitude: 36.5516, longitude: -76.1476))
    points.append(CLLocationCoordinate2D(latitude: 36.5516, longitude: -76.8617))
    points.append(CLLocationCoordinate2D(latitude: 36.5516, longitude: -76.9180))
    points.append(CLLocationCoordinate2D(latitude: 36.5438, longitude: -76.9180))
    points.append(CLLocationCoordinate2D(latitude: 36.5505, longitude: -77.1803))
    points.append(CLLocationCoordinate2D(latitude: 36.5449, longitude: -77.5278))
    points.append(CLLocationCoordinate2D(latitude: 36.5427, longitude: -80.2730))
    points.append(CLLocationCoordinate2D(latitude: 36.5571, longitude: -80.5971))
    points.append(CLLocationCoordinate2D(latitude: 36.5626, longitude: -80.7248))
    points.append(CLLocationCoordinate2D(latitude: 36.5593, longitude: -80.8511))
    points.append(CLLocationCoordinate2D(latitude: 36.5681, longitude: -81.1066))
    points.append(CLLocationCoordinate2D(latitude: 36.5813, longitude: -81.4746))
    points.append(CLLocationCoordinate2D(latitude: 36.5802, longitude: -81.5007))
    points.append(CLLocationCoordinate2D(latitude: 36.5882, longitude: -81.6773))
    points.append(CLLocationCoordinate2D(latitude: 36.6122, longitude: -81.6476))
    points.append(CLLocationCoordinate2D(latitude: 36.6177, longitude: -81.9237))
    points.append(CLLocationCoordinate2D(latitude: 36.5935, longitude: -81.9360))
    points.append(CLLocationCoordinate2D(latitude: 36.5957, longitude: -82.3961))
    points.append(CLLocationCoordinate2D(latitude: 36.5935, longitude: -82.9344))
    points.append(CLLocationCoordinate2D(latitude: 36.5957, longitude: -83.2654))
    points.append(CLLocationCoordinate2D(latitude: 36.6023, longitude: -83.6746))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Virginia", abbreviation: "VA", polygon: poly)
}


func createVermont()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 45.0104, longitude: -73.3427))
    points.append(CLLocationCoordinate2D(latitude: 45.0134, longitude: -73.1827))
    points.append(CLLocationCoordinate2D(latitude: 45.0153, longitude: -72.7432))
    points.append(CLLocationCoordinate2D(latitude: 45.0134, longitude: -72.6100))
    points.append(CLLocationCoordinate2D(latitude: 45.0075, longitude: -72.5551))
    points.append(CLLocationCoordinate2D(latitude: 45.0090, longitude: -72.4562))
    points.append(CLLocationCoordinate2D(latitude: 45.0037, longitude: -72.3113))
    points.append(CLLocationCoordinate2D(latitude: 45.0066, longitude: -72.0964))
    points.append(CLLocationCoordinate2D(latitude: 45.0070, longitude: -71.9131))
    points.append(CLLocationCoordinate2D(latitude: 45.0138, longitude: -71.5636))
    points.append(CLLocationCoordinate2D(latitude: 45.0138, longitude: -71.5059))
    points.append(CLLocationCoordinate2D(latitude: 44.9862, longitude: -71.5443))
    points.append(CLLocationCoordinate2D(latitude: 44.9697, longitude: -71.5237))
    points.append(CLLocationCoordinate2D(latitude: 44.9366, longitude: -71.5182))
    points.append(CLLocationCoordinate2D(latitude: 44.9123, longitude: -71.5018))
    points.append(CLLocationCoordinate2D(latitude: 44.8744, longitude: -71.5279))
    points.append(CLLocationCoordinate2D(latitude: 44.8539, longitude: -71.5553))
    points.append(CLLocationCoordinate2D(latitude: 44.8325, longitude: -71.5526))
    points.append(CLLocationCoordinate2D(latitude: 44.8198, longitude: -71.5746))
    points.append(CLLocationCoordinate2D(latitude: 44.7526, longitude: -71.6364))
    points.append(CLLocationCoordinate2D(latitude: 44.7243, longitude: -71.6130))
    points.append(CLLocationCoordinate2D(latitude: 44.6608, longitude: -71.5924))
    points.append(CLLocationCoordinate2D(latitude: 44.6315, longitude: -71.5540))
    points.append(CLLocationCoordinate2D(latitude: 44.5993, longitude: -71.5649))
    points.append(CLLocationCoordinate2D(latitude: 44.5914, longitude: -71.5485))
    points.append(CLLocationCoordinate2D(latitude: 44.5680, longitude: -71.5649))
    points.append(CLLocationCoordinate2D(latitude: 44.5680, longitude: -71.5897))
    points.append(CLLocationCoordinate2D(latitude: 44.5601, longitude: -71.6048))
    points.append(CLLocationCoordinate2D(latitude: 44.5357, longitude: -71.5746))
    points.append(CLLocationCoordinate2D(latitude: 44.5073, longitude: -71.5855))
    points.append(CLLocationCoordinate2D(latitude: 44.4642, longitude: -71.6542))
    points.append(CLLocationCoordinate2D(latitude: 44.4416, longitude: -71.6597))
    points.append(CLLocationCoordinate2D(latitude: 44.4122, longitude: -71.7380))
    points.append(CLLocationCoordinate2D(latitude: 44.4014, longitude: -71.7778))
    points.append(CLLocationCoordinate2D(latitude: 44.3877, longitude: -71.8108))
    points.append(CLLocationCoordinate2D(latitude: 44.3572, longitude: -71.8135))
    points.append(CLLocationCoordinate2D(latitude: 44.3366, longitude: -71.8712))
    points.append(CLLocationCoordinate2D(latitude: 44.3592, longitude: -71.9289))
    points.append(CLLocationCoordinate2D(latitude: 44.3376, longitude: -71.9783))
    points.append(CLLocationCoordinate2D(latitude: 44.3199, longitude: -72.0291))
    points.append(CLLocationCoordinate2D(latitude: 44.2796, longitude: -72.0607))
    points.append(CLLocationCoordinate2D(latitude: 44.2511, longitude: -72.0525))
    points.append(CLLocationCoordinate2D(latitude: 44.1999, longitude: -72.0703))
    points.append(CLLocationCoordinate2D(latitude: 44.1763, longitude: -72.0580))
    points.append(CLLocationCoordinate2D(latitude: 44.1428, longitude: -72.0387))
    points.append(CLLocationCoordinate2D(latitude: 44.1093, longitude: -72.0552))
    points.append(CLLocationCoordinate2D(latitude: 44.0856, longitude: -72.0470))
    points.append(CLLocationCoordinate2D(latitude: 44.0017, longitude: -72.1170))
    points.append(CLLocationCoordinate2D(latitude: 43.9454, longitude: -72.1198))
    points.append(CLLocationCoordinate2D(latitude: 43.9117, longitude: -72.1321))
    points.append(CLLocationCoordinate2D(latitude: 43.8890, longitude: -72.1568))
    points.append(CLLocationCoordinate2D(latitude: 43.8672, longitude: -72.1843))
    points.append(CLLocationCoordinate2D(latitude: 43.8187, longitude: -72.1870))
    points.append(CLLocationCoordinate2D(latitude: 43.7741, longitude: -72.2035))
    points.append(CLLocationCoordinate2D(latitude: 43.7344, longitude: -72.2694))
    points.append(CLLocationCoordinate2D(latitude: 43.7036, longitude: -72.3079))
    points.append(CLLocationCoordinate2D(latitude: 43.6758, longitude: -72.3024))
    points.append(CLLocationCoordinate2D(latitude: 43.6420, longitude: -72.3134))
    points.append(CLLocationCoordinate2D(latitude: 43.5834, longitude: -72.3779))
    points.append(CLLocationCoordinate2D(latitude: 43.5127, longitude: -72.4013))
    points.append(CLLocationCoordinate2D(latitude: 43.4988, longitude: -72.3807))
    points.append(CLLocationCoordinate2D(latitude: 43.3741, longitude: -72.4150))
    points.append(CLLocationCoordinate2D(latitude: 43.2812, longitude: -72.4095))
    points.append(CLLocationCoordinate2D(latitude: 43.2562, longitude: -72.4384))
    points.append(CLLocationCoordinate2D(latitude: 43.2052, longitude: -72.4329))
    points.append(CLLocationCoordinate2D(latitude: 43.1501, longitude: -72.4590))
    points.append(CLLocationCoordinate2D(latitude: 43.1180, longitude: -72.4342))
    points.append(CLLocationCoordinate2D(latitude: 43.1040, longitude: -72.4452))
    points.append(CLLocationCoordinate2D(latitude: 43.0819, longitude: -72.4356))
    points.append(CLLocationCoordinate2D(latitude: 43.0508, longitude: -72.4713))
    points.append(CLLocationCoordinate2D(latitude: 43.0287, longitude: -72.4713))
    points.append(CLLocationCoordinate2D(latitude: 43.0127, longitude: -72.4480))
    points.append(CLLocationCoordinate2D(latitude: 42.9906, longitude: -72.4658))
    points.append(CLLocationCoordinate2D(latitude: 42.9745, longitude: -72.4919))
    points.append(CLLocationCoordinate2D(latitude: 42.9524, longitude: -72.5400))
    points.append(CLLocationCoordinate2D(latitude: 42.8981, longitude: -72.5317))
    points.append(CLLocationCoordinate2D(latitude: 42.8609, longitude: -72.5592))
    points.append(CLLocationCoordinate2D(latitude: 42.8105, longitude: -72.5414))
    points.append(CLLocationCoordinate2D(latitude: 42.7621, longitude: -72.5098))
    points.append(CLLocationCoordinate2D(latitude: 42.7268, longitude: -72.4590))
    points.append(CLLocationCoordinate2D(latitude: 42.7465, longitude: -73.2761))
    points.append(CLLocationCoordinate2D(latitude: 42.8025, longitude: -73.2912))
    points.append(CLLocationCoordinate2D(latitude: 42.8357, longitude: -73.2850))
    points.append(CLLocationCoordinate2D(latitude: 43.0679, longitude: -73.2678))
    points.append(CLLocationCoordinate2D(latitude: 43.5022, longitude: -73.2472))
    points.append(CLLocationCoordinate2D(latitude: 43.5615, longitude: -73.2561))
    points.append(CLLocationCoordinate2D(latitude: 43.5774, longitude: -73.2939))
    points.append(CLLocationCoordinate2D(latitude: 43.6271, longitude: -73.3049))
    points.append(CLLocationCoordinate2D(latitude: 43.6271, longitude: -73.3557))
    points.append(CLLocationCoordinate2D(latitude: 43.5675, longitude: -73.3976))
    points.append(CLLocationCoordinate2D(latitude: 43.5883, longitude: -73.4326))
    points.append(CLLocationCoordinate2D(latitude: 43.6351, longitude: -73.4285))
    points.append(CLLocationCoordinate2D(latitude: 43.6684, longitude: -73.4079))
    points.append(CLLocationCoordinate2D(latitude: 43.7031, longitude: -73.3907))
    points.append(CLLocationCoordinate2D(latitude: 43.7701, longitude: -73.3516))
    points.append(CLLocationCoordinate2D(latitude: 43.8207, longitude: -73.3928))
    points.append(CLLocationCoordinate2D(latitude: 43.8533, longitude: -73.3832))
    points.append(CLLocationCoordinate2D(latitude: 43.9033, longitude: -73.3969))
    points.append(CLLocationCoordinate2D(latitude: 43.9365, longitude: -73.4086))
    points.append(CLLocationCoordinate2D(latitude: 43.9795, longitude: -73.4134))
    points.append(CLLocationCoordinate2D(latitude: 44.0427, longitude: -73.4381))
    points.append(CLLocationCoordinate2D(latitude: 44.1058, longitude: -73.4141))
    points.append(CLLocationCoordinate2D(latitude: 44.1921, longitude: -73.3928))
    points.append(CLLocationCoordinate2D(latitude: 44.2393, longitude: -73.3427))
    points.append(CLLocationCoordinate2D(latitude: 44.2467, longitude: -73.3186))
    points.append(CLLocationCoordinate2D(latitude: 44.3484, longitude: -73.3406))
    points.append(CLLocationCoordinate2D(latitude: 44.3690, longitude: -73.3385))
    points.append(CLLocationCoordinate2D(latitude: 44.4328, longitude: -73.2946))
    points.append(CLLocationCoordinate2D(latitude: 44.5367, longitude: -73.3296))
    points.append(CLLocationCoordinate2D(latitude: 44.5919, longitude: -73.3832))
    points.append(CLLocationCoordinate2D(latitude: 44.6569, longitude: -73.3770))
    points.append(CLLocationCoordinate2D(latitude: 44.7477, longitude: -73.3681))
    points.append(CLLocationCoordinate2D(latitude: 44.7857, longitude: -73.3317))
    points.append(CLLocationCoordinate2D(latitude: 44.8043, longitude: -73.3324))
    points.append(CLLocationCoordinate2D(latitude: 44.8398, longitude: -73.3818))
    points.append(CLLocationCoordinate2D(latitude: 44.9040, longitude: -73.3564))
    points.append(CLLocationCoordinate2D(latitude: 44.9181, longitude: -73.3392))
    points.append(CLLocationCoordinate2D(latitude: 44.9643, longitude: -73.3372))
    points.append(CLLocationCoordinate2D(latitude: 44.9799, longitude: -73.3537))
    points.append(CLLocationCoordinate2D(latitude: 45.0046, longitude: -73.3447))
    points.append(CLLocationCoordinate2D(latitude: 45.0109, longitude: -73.3447))
    points.append(CLLocationCoordinate2D(latitude: 45.0104, longitude: -73.3426))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Vermont", abbreviation: "VT", polygon: poly)
}


func createWashington()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 49.0023, longitude: -123.3208))
    points.append(CLLocationCoordinate2D(latitude: 49.0027, longitude: -123.0338))
    points.append(CLLocationCoordinate2D(latitude: 49.0018, longitude: -122.0650))
    points.append(CLLocationCoordinate2D(latitude: 48.9973, longitude: -121.7491))
    points.append(CLLocationCoordinate2D(latitude: 48.9991, longitude: -121.5912))
    points.append(CLLocationCoordinate2D(latitude: 49.0009, longitude: -119.6082))
    points.append(CLLocationCoordinate2D(latitude: 49.0005, longitude: -118.0378))
    points.append(CLLocationCoordinate2D(latitude: 48.9991, longitude: -117.0323))
    points.append(CLLocationCoordinate2D(latitude: 47.9614, longitude: -117.0415))
    points.append(CLLocationCoordinate2D(latitude: 46.5060, longitude: -117.0394))
    points.append(CLLocationCoordinate2D(latitude: 46.4274, longitude: -117.0394))
    points.append(CLLocationCoordinate2D(latitude: 46.3498, longitude: -117.0621))
    points.append(CLLocationCoordinate2D(latitude: 46.3384, longitude: -117.0277))
    points.append(CLLocationCoordinate2D(latitude: 46.2848, longitude: -116.9879))
    points.append(CLLocationCoordinate2D(latitude: 46.2388, longitude: -116.9577))
    points.append(CLLocationCoordinate2D(latitude: 46.2022, longitude: -116.9659))
    points.append(CLLocationCoordinate2D(latitude: 46.1722, longitude: -116.9254))
    points.append(CLLocationCoordinate2D(latitude: 46.1432, longitude: -116.9357))
    points.append(CLLocationCoordinate2D(latitude: 46.1009, longitude: -116.9584))
    points.append(CLLocationCoordinate2D(latitude: 46.0785, longitude: -116.9762))
    points.append(CLLocationCoordinate2D(latitude: 46.0537, longitude: -116.9433))
    points.append(CLLocationCoordinate2D(latitude: 45.9960, longitude: -116.9165))
    points.append(CLLocationCoordinate2D(latitude: 46.0008, longitude: -118.0330))
    points.append(CLLocationCoordinate2D(latitude: 45.9998, longitude: -118.9867))
    points.append(CLLocationCoordinate2D(latitude: 45.9320, longitude: -119.1302))
    points.append(CLLocationCoordinate2D(latitude: 45.9278, longitude: -119.1708))
    points.append(CLLocationCoordinate2D(latitude: 45.9402, longitude: -119.2559))
    points.append(CLLocationCoordinate2D(latitude: 45.9354, longitude: -119.3047))
    points.append(CLLocationCoordinate2D(latitude: 45.9220, longitude: -119.3644))
    points.append(CLLocationCoordinate2D(latitude: 45.9172, longitude: -119.4386))
    points.append(CLLocationCoordinate2D(latitude: 45.9067, longitude: -119.4894))
    points.append(CLLocationCoordinate2D(latitude: 45.9249, longitude: -119.5724))
    points.append(CLLocationCoordinate2D(latitude: 45.9196, longitude: -119.6013))
    points.append(CLLocationCoordinate2D(latitude: 45.8565, longitude: -119.6700))
    points.append(CLLocationCoordinate2D(latitude: 45.8479, longitude: -119.8052))
    points.append(CLLocationCoordinate2D(latitude: 45.8278, longitude: -119.9096))
    points.append(CLLocationCoordinate2D(latitude: 45.8245, longitude: -119.9652))
    points.append(CLLocationCoordinate2D(latitude: 45.7852, longitude: -120.0710))
    points.append(CLLocationCoordinate2D(latitude: 45.7623, longitude: -120.1705))
    points.append(CLLocationCoordinate2D(latitude: 45.7258, longitude: -120.2110))
    points.append(CLLocationCoordinate2D(latitude: 45.7057, longitude: -120.3628))
    points.append(CLLocationCoordinate2D(latitude: 45.6951, longitude: -120.4829))
    points.append(CLLocationCoordinate2D(latitude: 45.7469, longitude: -120.5942))
    points.append(CLLocationCoordinate2D(latitude: 45.7460, longitude: -120.6340))
    points.append(CLLocationCoordinate2D(latitude: 45.7143, longitude: -120.6924))
    points.append(CLLocationCoordinate2D(latitude: 45.6721, longitude: -120.8558))
    points.append(CLLocationCoordinate2D(latitude: 45.6409, longitude: -120.9142))
    points.append(CLLocationCoordinate2D(latitude: 45.6572, longitude: -120.9471))
    points.append(CLLocationCoordinate2D(latitude: 45.6419, longitude: -120.9787))
    points.append(CLLocationCoordinate2D(latitude: 45.6529, longitude: -121.0645))
    points.append(CLLocationCoordinate2D(latitude: 45.6078, longitude: -121.1469))
    points.append(CLLocationCoordinate2D(latitude: 45.6083, longitude: -121.1847))
    points.append(CLLocationCoordinate2D(latitude: 45.6721, longitude: -121.2177))
    points.append(CLLocationCoordinate2D(latitude: 45.7057, longitude: -121.3392))
    points.append(CLLocationCoordinate2D(latitude: 45.6932, longitude: -121.4010))
    points.append(CLLocationCoordinate2D(latitude: 45.7263, longitude: -121.5328))
    points.append(CLLocationCoordinate2D(latitude: 45.7091, longitude: -121.6145))
    points.append(CLLocationCoordinate2D(latitude: 45.6947, longitude: -121.7361))
    points.append(CLLocationCoordinate2D(latitude: 45.7067, longitude: -121.8095))
    points.append(CLLocationCoordinate2D(latitude: 45.6452, longitude: -121.9338))
    points.append(CLLocationCoordinate2D(latitude: 45.6088, longitude: -122.0451))
    points.append(CLLocationCoordinate2D(latitude: 45.5833, longitude: -122.1089))
    points.append(CLLocationCoordinate2D(latitude: 45.5838, longitude: -122.1426))
    points.append(CLLocationCoordinate2D(latitude: 45.5660, longitude: -122.2009))
    points.append(CLLocationCoordinate2D(latitude: 45.5439, longitude: -122.2641))
    points.append(CLLocationCoordinate2D(latitude: 45.5482, longitude: -122.3321))
    points.append(CLLocationCoordinate2D(latitude: 45.5756, longitude: -122.3795))
    points.append(CLLocationCoordinate2D(latitude: 45.5636, longitude: -122.4392))
    points.append(CLLocationCoordinate2D(latitude: 45.6006, longitude: -122.5676))
    points.append(CLLocationCoordinate2D(latitude: 45.6236, longitude: -122.6891))
    points.append(CLLocationCoordinate2D(latitude: 45.6582, longitude: -122.7647))
    points.append(CLLocationCoordinate2D(latitude: 45.6817, longitude: -122.7750))
    points.append(CLLocationCoordinate2D(latitude: 45.7613, longitude: -122.7619))
    points.append(CLLocationCoordinate2D(latitude: 45.8106, longitude: -122.7962))
    points.append(CLLocationCoordinate2D(latitude: 45.8642, longitude: -122.7839))
    points.append(CLLocationCoordinate2D(latitude: 45.9120, longitude: -122.8114))
    points.append(CLLocationCoordinate2D(latitude: 45.9612, longitude: -122.8148))
    points.append(CLLocationCoordinate2D(latitude: 46.0160, longitude: -122.8587))
    points.append(CLLocationCoordinate2D(latitude: 46.0604, longitude: -122.8848))
    points.append(CLLocationCoordinate2D(latitude: 46.0832, longitude: -122.9034))
    points.append(CLLocationCoordinate2D(latitude: 46.1028, longitude: -122.9597))
    points.append(CLLocationCoordinate2D(latitude: 46.1556, longitude: -123.0579))
    points.append(CLLocationCoordinate2D(latitude: 46.1865, longitude: -123.1210))
    points.append(CLLocationCoordinate2D(latitude: 46.1893, longitude: -123.1664))
    points.append(CLLocationCoordinate2D(latitude: 46.1446, longitude: -123.2810))
    points.append(CLLocationCoordinate2D(latitude: 46.1470, longitude: -123.3703))
    points.append(CLLocationCoordinate2D(latitude: 46.1822, longitude: -123.4314))
    points.append(CLLocationCoordinate2D(latitude: 46.2293, longitude: -123.4287))
    points.append(CLLocationCoordinate2D(latitude: 46.2691, longitude: -123.4946))
    points.append(CLLocationCoordinate2D(latitude: 46.2582, longitude: -123.5557))
    points.append(CLLocationCoordinate2D(latitude: 46.2573, longitude: -123.6209))
    points.append(CLLocationCoordinate2D(latitude: 46.2497, longitude: -123.6875))
    points.append(CLLocationCoordinate2D(latitude: 46.2691, longitude: -123.7404))
    points.append(CLLocationCoordinate2D(latitude: 46.2350, longitude: -123.8729))
    points.append(CLLocationCoordinate2D(latitude: 46.2383, longitude: -123.9292))
    points.append(CLLocationCoordinate2D(latitude: 46.2677, longitude: -123.9711))
    points.append(CLLocationCoordinate2D(latitude: 46.2924, longitude: -124.0212))
    points.append(CLLocationCoordinate2D(latitude: 46.2653, longitude: -124.0329))
    points.append(CLLocationCoordinate2D(latitude: 46.2596, longitude: -124.2444))
    points.append(CLLocationCoordinate2D(latitude: 46.4312, longitude: -124.2691))
    points.append(CLLocationCoordinate2D(latitude: 46.8386, longitude: -124.3529))
    points.append(CLLocationCoordinate2D(latitude: 47.1832, longitude: -124.4380))
    points.append(CLLocationCoordinate2D(latitude: 47.4689, longitude: -124.5616))
    points.append(CLLocationCoordinate2D(latitude: 47.8012, longitude: -124.7566))
    points.append(CLLocationCoordinate2D(latitude: 48.0423, longitude: -124.8679))
    points.append(CLLocationCoordinate2D(latitude: 48.2457, longitude: -124.8679))
    points.append(CLLocationCoordinate2D(latitude: 48.3727, longitude: -124.8486))
    points.append(CLLocationCoordinate2D(latitude: 48.4984, longitude: -124.7539))
    points.append(CLLocationCoordinate2D(latitude: 48.4096, longitude: -124.4174))
    points.append(CLLocationCoordinate2D(latitude: 48.3599, longitude: -124.2389))
    points.append(CLLocationCoordinate2D(latitude: 48.2964, longitude: -124.0116))
    points.append(CLLocationCoordinate2D(latitude: 48.2795, longitude: -123.9141))
    points.append(CLLocationCoordinate2D(latitude: 48.2247, longitude: -123.5413))
    points.append(CLLocationCoordinate2D(latitude: 48.2539, longitude: -123.3998))
    points.append(CLLocationCoordinate2D(latitude: 48.2841, longitude: -123.2501))
    points.append(CLLocationCoordinate2D(latitude: 48.4233, longitude: -123.1169))
    points.append(CLLocationCoordinate2D(latitude: 48.4533, longitude: -123.1609))
    points.append(CLLocationCoordinate2D(latitude: 48.5548, longitude: -123.2220))
    points.append(CLLocationCoordinate2D(latitude: 48.5902, longitude: -123.2336))
    points.append(CLLocationCoordinate2D(latitude: 48.6901, longitude: -123.2721))
    points.append(CLLocationCoordinate2D(latitude: 48.7675, longitude: -123.0084))
    points.append(CLLocationCoordinate2D(latitude: 48.8313, longitude: -123.0084))
    points.append(CLLocationCoordinate2D(latitude: 49.0023, longitude: -123.3215))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Washington", abbreviation: "WA", polygon: poly)
}


func createWisconsin()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 42.5116, longitude: -90.6303))
    points.append(CLLocationCoordinate2D(latitude: 42.4954, longitude: -87.0241))
    points.append(CLLocationCoordinate2D(latitude: 43.3721, longitude: -87.1477))
    points.append(CLLocationCoordinate2D(latitude: 43.6838, longitude: -87.1230))
    points.append(CLLocationCoordinate2D(latitude: 44.1694, longitude: -86.9911))
    points.append(CLLocationCoordinate2D(latitude: 44.4828, longitude: -86.8579))
    points.append(CLLocationCoordinate2D(latitude: 44.8792, longitude: -86.6876))
    points.append(CLLocationCoordinate2D(latitude: 45.2343, longitude: -86.2523))
    points.append(CLLocationCoordinate2D(latitude: 45.4418, longitude: -86.7535))
    points.append(CLLocationCoordinate2D(latitude: 45.4438, longitude: -87.1024))
    points.append(CLLocationCoordinate2D(latitude: 45.3531, longitude: -87.1724))
    points.append(CLLocationCoordinate2D(latitude: 45.2353, longitude: -86.2495))
    points.append(CLLocationCoordinate2D(latitude: 45.1995, longitude: -87.4100))
    points.append(CLLocationCoordinate2D(latitude: 45.0784, longitude: -87.4443))
    points.append(CLLocationCoordinate2D(latitude: 45.0987, longitude: -87.6379))
    points.append(CLLocationCoordinate2D(latitude: 45.2217, longitude: -87.6956))
    points.append(CLLocationCoordinate2D(latitude: 45.3367, longitude: -87.6462))
    points.append(CLLocationCoordinate2D(latitude: 45.3869, longitude: -87.6956))
    points.append(CLLocationCoordinate2D(latitude: 45.3425, longitude: -87.8549))
    points.append(CLLocationCoordinate2D(latitude: 45.4813, longitude: -87.7945))
    points.append(CLLocationCoordinate2D(latitude: 45.5679, longitude: -87.7945))
    points.append(CLLocationCoordinate2D(latitude: 45.6764, longitude: -87.7876))
    points.append(CLLocationCoordinate2D(latitude: 45.7934, longitude: -87.9936))
    points.append(CLLocationCoordinate2D(latitude: 45.8077, longitude: -88.1145))
    points.append(CLLocationCoordinate2D(latitude: 45.8728, longitude: -88.0733))
    points.append(CLLocationCoordinate2D(latitude: 45.9521, longitude: -88.1982))
    points.append(CLLocationCoordinate2D(latitude: 46.0122, longitude: -88.5498))
    points.append(CLLocationCoordinate2D(latitude: 45.9970, longitude: -88.7036))
    points.append(CLLocationCoordinate2D(latitude: 46.0380, longitude: -88.8451))
    points.append(CLLocationCoordinate2D(latitude: 46.1389, longitude: -89.0909))
    points.append(CLLocationCoordinate2D(latitude: 46.3412, longitude: -90.1195))
    points.append(CLLocationCoordinate2D(latitude: 46.5664, longitude: -90.4147))
    points.append(CLLocationCoordinate2D(latitude: 47.2876, longitude: -89.9615))
    points.append(CLLocationCoordinate2D(latitude: 47.3100, longitude: -90.6578))
    points.append(CLLocationCoordinate2D(latitude: 46.7079, longitude: -92.0352))
    points.append(CLLocationCoordinate2D(latitude: 46.5928, longitude: -92.2948))
    points.append(CLLocationCoordinate2D(latitude: 46.0761, longitude: -92.2975))
    points.append(CLLocationCoordinate2D(latitude: 46.0132, longitude: -92.3579))
    points.append(CLLocationCoordinate2D(latitude: 45.9769, longitude: -92.5227))
    points.append(CLLocationCoordinate2D(latitude: 45.8135, longitude: -92.7466))
    points.append(CLLocationCoordinate2D(latitude: 45.6140, longitude: -92.8564))
    points.append(CLLocationCoordinate2D(latitude: 45.5477, longitude: -92.7754))
    points.append(CLLocationCoordinate2D(latitude: 45.4293, longitude: -92.6587))
    points.append(CLLocationCoordinate2D(latitude: 45.3029, longitude: -92.7136))
    points.append(CLLocationCoordinate2D(latitude: 44.9648, longitude: -92.7466))
    points.append(CLLocationCoordinate2D(latitude: 44.7877, longitude: -92.7686))
    points.append(CLLocationCoordinate2D(latitude: 44.6530, longitude: -92.6422))
    points.append(CLLocationCoordinate2D(latitude: 44.5504, longitude: -92.3552))
    points.append(CLLocationCoordinate2D(latitude: 44.4652, longitude: -92.2632))
    points.append(CLLocationCoordinate2D(latitude: 44.4024, longitude: -92.0654))
    points.append(CLLocationCoordinate2D(latitude: 44.2580, longitude: -91.8745))
    points.append(CLLocationCoordinate2D(latitude: 44.0600, longitude: -91.6383))
    points.append(CLLocationCoordinate2D(latitude: 43.9612, longitude: -91.4941))
    points.append(CLLocationCoordinate2D(latitude: 43.8296, longitude: -91.3184))
    points.append(CLLocationCoordinate2D(latitude: 43.6440, longitude: -91.2524))
    points.append(CLLocationCoordinate2D(latitude: 43.5167, longitude: -91.2305))
    points.append(CLLocationCoordinate2D(latitude: 43.3342, longitude: -91.2085))
    points.append(CLLocationCoordinate2D(latitude: 43.2932, longitude: -91.0547))
    points.append(CLLocationCoordinate2D(latitude: 43.1651, longitude: -91.1865))
    points.append(CLLocationCoordinate2D(latitude: 43.0257, longitude: -91.1536))
    points.append(CLLocationCoordinate2D(latitude: 42.9082, longitude: -91.1426))
    points.append(CLLocationCoordinate2D(latitude: 42.7692, longitude: -91.0547))
    points.append(CLLocationCoordinate2D(latitude: 42.6915, longitude: -90.7910))
    points.append(CLLocationCoordinate2D(latitude: 42.6340, longitude: -90.7031))
    points.append(CLLocationCoordinate2D(latitude: 42.5096, longitude: -90.6303))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Wisconsin", abbreviation: "WI", polygon: poly)
}


func createWestVirginia()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 39.7188, longitude: -79.4765))
    points.append(CLLocationCoordinate2D(latitude: 39.2057, longitude: -79.4806))
    points.append(CLLocationCoordinate2D(latitude: 39.4871, longitude: -79.0576))
    points.append(CLLocationCoordinate2D(latitude: 39.4394, longitude: -78.9725))
    points.append(CLLocationCoordinate2D(latitude: 39.6438, longitude: -78.7747))
    points.append(CLLocationCoordinate2D(latitude: 39.5369, longitude: -78.6703))
    points.append(CLLocationCoordinate2D(latitude: 39.5210, longitude: -78.5742))
    points.append(CLLocationCoordinate2D(latitude: 39.5210, longitude: -78.4644))
    points.append(CLLocationCoordinate2D(latitude: 39.6015, longitude: -78.4094))
    points.append(CLLocationCoordinate2D(latitude: 39.6395, longitude: -78.3517))
    points.append(CLLocationCoordinate2D(latitude: 39.6205, longitude: -78.2817))
    points.append(CLLocationCoordinate2D(latitude: 39.6839, longitude: -78.2405))
    points.append(CLLocationCoordinate2D(latitude: 39.6935, longitude: -78.1732))
    points.append(CLLocationCoordinate2D(latitude: 39.5972, longitude: -77.8835))
    points.append(CLLocationCoordinate2D(latitude: 39.4987, longitude: -77.7859))
    points.append(CLLocationCoordinate2D(latitude: 39.3279, longitude: -77.7310))
    points.append(CLLocationCoordinate2D(latitude: 39.1279, longitude: -77.8271))
    points.append(CLLocationCoordinate2D(latitude: 39.4563, longitude: -78.3421))
    points.append(CLLocationCoordinate2D(latitude: 39.3407, longitude: -78.3408))
    points.append(CLLocationCoordinate2D(latitude: 39.1918, longitude: -78.4341))
    points.append(CLLocationCoordinate2D(latitude: 39.1652, longitude: -78.4053))
    points.append(CLLocationCoordinate2D(latitude: 39.0299, longitude: -78.5715))
    points.append(CLLocationCoordinate2D(latitude: 39.0160, longitude: -78.5522))
    points.append(CLLocationCoordinate2D(latitude: 38.8846, longitude: -78.7843))
    points.append(CLLocationCoordinate2D(latitude: 38.7669, longitude: -78.8722))
    points.append(CLLocationCoordinate2D(latitude: 38.8451, longitude: -78.9917))
    points.append(CLLocationCoordinate2D(latitude: 38.7102, longitude: -79.0974))
    points.append(CLLocationCoordinate2D(latitude: 38.6555, longitude: -79.1029))
    points.append(CLLocationCoordinate2D(latitude: 38.4106, longitude: -79.3007))
    points.append(CLLocationCoordinate2D(latitude: 38.4600, longitude: -79.4792))
    points.append(CLLocationCoordinate2D(latitude: 38.5342, longitude: -79.5314))
    points.append(CLLocationCoordinate2D(latitude: 38.5868, longitude: -79.6481))
    points.append(CLLocationCoordinate2D(latitude: 38.4869, longitude: -79.6962))
    points.append(CLLocationCoordinate2D(latitude: 38.4213, longitude: -79.6989))
    points.append(CLLocationCoordinate2D(latitude: 38.3557, longitude: -79.7690))
    points.append(CLLocationCoordinate2D(latitude: 38.2813, longitude: -79.7937))
    points.append(CLLocationCoordinate2D(latitude: 38.1518, longitude: -79.9365))
    points.append(CLLocationCoordinate2D(latitude: 38.0232, longitude: -79.9818))
    points.append(CLLocationCoordinate2D(latitude: 37.8835, longitude: -80.1370))
    points.append(CLLocationCoordinate2D(latitude: 37.7295, longitude: -80.2592))
    points.append(CLLocationCoordinate2D(latitude: 37.6795, longitude: -80.2881))
    points.append(CLLocationCoordinate2D(latitude: 37.6295, longitude: -80.2194))
    points.append(CLLocationCoordinate2D(latitude: 37.5391, longitude: -80.3224))
    points.append(CLLocationCoordinate2D(latitude: 37.5315, longitude: -80.2881))
    points.append(CLLocationCoordinate2D(latitude: 37.4988, longitude: -80.3032))
    points.append(CLLocationCoordinate2D(latitude: 37.4182, longitude: -80.4776))
    points.append(CLLocationCoordinate2D(latitude: 37.4814, longitude: -80.5119))
    points.append(CLLocationCoordinate2D(latitude: 37.3691, longitude: -80.7715))
    points.append(CLLocationCoordinate2D(latitude: 37.4214, longitude: -80.8635))
    points.append(CLLocationCoordinate2D(latitude: 37.3429, longitude: -80.8525))
    points.append(CLLocationCoordinate2D(latitude: 37.2872, longitude: -81.0516))
    points.append(CLLocationCoordinate2D(latitude: 37.2598, longitude: -81.2741))
    points.append(CLLocationCoordinate2D(latitude: 37.3254, longitude: -81.3675))
    points.append(CLLocationCoordinate2D(latitude: 37.2019, longitude: -81.5543))
    points.append(CLLocationCoordinate2D(latitude: 37.1953, longitude: -81.6724))
    points.append(CLLocationCoordinate2D(latitude: 37.2697, longitude: -81.7685))
    points.append(CLLocationCoordinate2D(latitude: 37.3003, longitude: -81.8701))
    points.append(CLLocationCoordinate2D(latitude: 37.3636, longitude: -81.9333))
    points.append(CLLocationCoordinate2D(latitude: 37.4574, longitude: -81.9772))
    points.append(CLLocationCoordinate2D(latitude: 37.4912, longitude: -82.0308))
    points.append(CLLocationCoordinate2D(latitude: 37.6142, longitude: -82.1558))
    points.append(CLLocationCoordinate2D(latitude: 37.8054, longitude: -82.3535))
    points.append(CLLocationCoordinate2D(latitude: 38.0481, longitude: -82.5513))
    points.append(CLLocationCoordinate2D(latitude: 38.1864, longitude: -82.6392))
    points.append(CLLocationCoordinate2D(latitude: 38.3761, longitude: -82.5966))
    points.append(CLLocationCoordinate2D(latitude: 38.4106, longitude: -82.4854))
    points.append(CLLocationCoordinate2D(latitude: 38.4407, longitude: -82.3412))
    points.append(CLLocationCoordinate2D(latitude: 38.5890, longitude: -82.2876))
    points.append(CLLocationCoordinate2D(latitude: 38.5976, longitude: -82.1764))
    points.append(CLLocationCoordinate2D(latitude: 38.7980, longitude: -82.2148))
    points.append(CLLocationCoordinate2D(latitude: 39.0160, longitude: -82.0280))
    points.append(CLLocationCoordinate2D(latitude: 38.9615, longitude: -81.9649))
    points.append(CLLocationCoordinate2D(latitude: 38.8750, longitude: -81.8756))
    points.append(CLLocationCoordinate2D(latitude: 38.9370, longitude: -81.7671))
    points.append(CLLocationCoordinate2D(latitude: 39.0117, longitude: -81.7657))
    points.append(CLLocationCoordinate2D(latitude: 39.0800, longitude: -81.7520))
    points.append(CLLocationCoordinate2D(latitude: 39.1790, longitude: -81.7465))
    points.append(CLLocationCoordinate2D(latitude: 39.2642, longitude: -81.5872))
    points.append(CLLocationCoordinate2D(latitude: 39.3969, longitude: -81.4499))
    points.append(CLLocationCoordinate2D(latitude: 39.3481, longitude: -81.3675))
    points.append(CLLocationCoordinate2D(latitude: 39.4012, longitude: -81.2370))
    points.append(CLLocationCoordinate2D(latitude: 39.4691, longitude: -81.1093))
    points.append(CLLocationCoordinate2D(latitude: 39.5644, longitude: -81.0104))
    points.append(CLLocationCoordinate2D(latitude: 39.6120, longitude: -80.9198))
    points.append(CLLocationCoordinate2D(latitude: 39.6522, longitude: -80.8319))
    points.append(CLLocationCoordinate2D(latitude: 39.8054, longitude: -80.8072))
    points.append(CLLocationCoordinate2D(latitude: 39.8802, longitude: -80.7893))
    points.append(CLLocationCoordinate2D(latitude: 39.8518, longitude: -80.7990))
    points.append(CLLocationCoordinate2D(latitude: 40.0980, longitude: -80.7495))
    points.append(CLLocationCoordinate2D(latitude: 40.2282, longitude: -80.7262))
    points.append(CLLocationCoordinate2D(latitude: 40.3926, longitude: -80.6918))
    points.append(CLLocationCoordinate2D(latitude: 40.5910, longitude: -80.6451))
    points.append(CLLocationCoordinate2D(latitude: 40.6338, longitude: -80.5188))
    points.append(CLLocationCoordinate2D(latitude: 39.7241, longitude: -80.5174))
    points.append(CLLocationCoordinate2D(latitude: 39.7209, longitude: -79.4778))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "West Virginia", abbreviation: "WV", polygon: poly)
}


func createWyoming()->State {
    var points = Array<CLLocationCoordinate2D>()

    points.append(CLLocationCoordinate2D(latitude: 44.9998, longitude: -111.0539))
    points.append(CLLocationCoordinate2D(latitude: 44.9970, longitude: -104.0577))
    points.append(CLLocationCoordinate2D(latitude: 43.0026, longitude: -104.0529))
    points.append(CLLocationCoordinate2D(latitude: 41.0006, longitude: -104.0529))
    points.append(CLLocationCoordinate2D(latitude: 40.9986, longitude: -111.0457))

    let poly = MKPolygon(coordinates: &points, count: points.count)
    
    return State(name: "Wyoming", abbreviation: "WY", polygon: poly)
}
